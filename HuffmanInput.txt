
parameter_set case_variable {
  label="Case Variable";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field description {
      label="Description";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field is_design_space_var {
      label="Design Space Variable";
      short_label="Design Space";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set uval_case_variable : case_variable {
  label="Numeric Case Variable";
  fields = [
    field unit_class {
      label="Unit Class";
      datatype=FIELD_IS_CHOICE_LIST;
      // TODO: This list was taken from UNIT_CLASSES_USED_IN_EXACASE[] in
      // cpc_dynamic.cc.  It would be nice if we could generate it dynamically
      // to prevent the need to update it when that array changes (does it?).
      // NOTE: Datatype FIELD_IS_UNIT_CLASS is a different beast and would
      // require a fair bit of effort to get it to work as expected.
      choices=["Acceleration", "AccumulationRate", "Angle", "AngularVelocity", "Area", "Density",
               "Dimensionless", "Frequency", "Force", "HeatingCoeff", "HeatTransferCoeff",
               "InvLength", "InvMassFlow", "InvTemperature", "InvTime", "InvVelocity",
               "InvVelocitySqrd", "KinematicViscosity", "Length", "Mass", "MassFlow",
               "MassFlowPerVolume", "MassFlux", "MolecularWeight", "MomentOfInertia","Momentum",
               "Power", "PowerDensity", "SourceTerm", "SpecificEnergy", "SpecificHeat",
               "StaticPressure", "Temperature", "Time", "TimePerLengthSqrd", "ThermalConductivity",
               "Torque", "TorquePerArea", "TurbulenceDissipation", "Velocity", "VelocitySqrd",
               "Viscosity", "VolumeFlow", "WallHeatFlux"];
      init_val="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field unit {
      label="Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      source_field="unit_class";
      //enabled_if=["unit_class!=Dimensionless"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min {
      label="Min";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field max {
      label="Max";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field uval_default_value {
      label="Default Value";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Same as Current";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field uval_current_value {
      label="Current Value";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set boolean_case_variable : case_variable {
  label="Boolean Case Variable";
  fields = [
    field boolean_default_value {
      label="Default Value";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Yes", "No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field boolean_current_value {
      label="Current Value";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Yes", "No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set model_view_container {
  label="Model Views";
  fields = [
    field model_views {
      label="Model Views";
      datatype=FIELD_IS_PSET_LIST;
      layout_class="TABLE";
      pfamily_identifier="model_view_family";
      pfamily_unique_field="name";
      flags=FIELD_INPUT|FIELD_LABEL_BOLD|FIELD_LABEL_ON_TOP|FIELD_NO_SWITCH_WARNING|FIELD_CLONE_ON_PSET_COPY;
    }
  ];
};

parameter_set model_view {
  label="Model View";
  fields = [
    field id {  
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_RANDOM;
    },
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field partition {
      label="Partition";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      enabled_if=["PartitionEnabled==PSET_ATTR:true"];
      empty_choice_string="Standard";
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT|FIELD_NOT_DISCRETIZED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field color_ref_model_view {
      label="Look Reference Model View";
      short_label="Look Ref MV";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      empty_choice_string="[none]";
      flags=FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED|FIELD_HEIGHT_NORMAL;
    },
    field secondary_color_ref_model_view {
      label="Secondary Look Reference Model View";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="model_view_family";
      filters=["ChangeStatus!=PSET_ATTR:Committed"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED|FIELD_POINTS_TO_OWN_FAMILY|FIELD_HEIGHT_NORMAL;
    },
    field display_mode_ref_model_view {
      label="Display Mode Reference Model View";
      short_label="Display Ref MV";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      empty_choice_string="[none]";
      flags=FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED|FIELD_HEIGHT_NORMAL;
    },
    field secondary_display_mode_ref_model_view {
      label="Secondary Display Mode Reference Model View";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="model_view_family";
      filters=["ChangeStatus!=PSET_ATTR:Committed"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED|FIELD_POINTS_TO_OWN_FAMILY|FIELD_HEIGHT_NORMAL;
    }
  ];
};

parameter_set period_sync_group {
  label="Sync. Group";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set coarse_variant {
  label="Coarse Variant";
  fields = [
  field max_vr_level {
      label="Suppress VR Levels Finer Than";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="None";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field voxel_scale {
      label="Scale Voxels By";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field timesteps {
      label="Simulation Time";
      short_label="Sim Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field excluded_solids {
      label="Excluded Solids and Porous Media";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED;
    },
    field pm_hxch_label {
      label="Porous Media";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field resistance_coeff_scale {
      label="Scale Resistance Coeffs By";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set coarse_variant_thermal : coarse_variant {
  label="Coarse Variant";
  fields = [
    field pm_hxch_label {
      label="Porous Media and Heat Exchangers";
    },
    field resistance_coeff_scale {},
    field force_fixed_coolant_entry_temp {
      label="Force Fixed Coolant Entry Temp (Heat Exchangers Only)";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field thermal_accel_label {
      label="Thermal Solver Acceleration";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field thermal_acceleration_start_time {
      label="Start Acceleration Time";
      short_label="Start Acc Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_end_time {
      label="End Acceleration Time";
      short_label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field surf_coup_label {
      label="PowerTHERM Surface Coupling";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field start_time {
      label="Time of First Calculation";
      short_label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field period {
      label="Period Between Calculations";
      short_label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field delay {
      label="Data Import Delay";
      short_label="Delay";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Unchanged";
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set turb_generator {
  label="Turbulence Generator";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field transient_velocity_turbulence_inlet {
      label="Transient Velocity from Upstream Turbulence";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface";
      pset_identifier="transient_velocity_inlet|transient_velocity_Tfixed_inlet|transient_velocity_turbulence_inlet|transient_velocity_Tfixed_turbulence_inlet";
      flags=FIELD_HIDDEN|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field use_default_wind_profile {
      label="Use Default Wind Profile Data";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wind_profile_data_file {
      label="Wind Profile Data";
      datatype=FIELD_IS_PATHNAME;
      enabled_if=["use_default_wind_profile==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field data_string {
      label="Data String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;      
    },
    field delta_time {
      label="Delta Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field inlet_mean_velocity_magnitude {
      label="Inlet Mean Velocity Magnitude";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field show_onroad_wind_ranges {
      label="Show On-Road Wind Ranges";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field intensity_length_scale {
      label="Select Intensity and Length Scale";
      datatype=FIELD_IS_OPAQUE;
      group="Column 1";
      layout_class="THREE_COLUMNS";
      flags=FIELD_NOT_DISCRETIZED;
    },
    field spectrum_graph {
      label="Spectrum Parameters";
      datatype=FIELD_IS_OPAQUE;
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_NOT_DISCRETIZED;
    },
    field inlet_point_turb_graph {
      label="Turbulence Fluctuation Time History";
      datatype=FIELD_IS_OPAQUE;
      group="Column 3";
      layout_class="THREE_COLUMNS";
      flags=FIELD_NOT_DISCRETIZED;
    },
    field length_unit {
      label="Length Unit";
      short_label="Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      group="Column 1";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field default_length_scale {
      label="Default Length Scale";
      datatype=FIELD_IS_STRING;
      group="Column 1";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field default_intensity {
      label="Default Intensity (%)";
      datatype=FIELD_IS_STRING;
      group="Column 1";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field simulated_length_intensity_label {
      label="Simulated Wind Profile:";
      datatype=FIELD_IS_LABEL;
      group="Column 1";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field default_vx_length_scale {
      label="Default Vx Length Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vx_length_scale {
      label="Length Scale X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["length_unit!="];
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_vy_length_scale {
      label="Default Vy Length Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vy_length_scale {
      label="Length Scale Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["length_unit!="];
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_vz_length_scale {
      label="Default Vz Length Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vz_length_scale {
      label="Length Scale Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["length_unit!="];
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_vx_intensity {
      label="Default Vx Intensity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vx_intensity {
      label="Intensity (%) X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_vy_intensity {
      label="Default Vy Intensity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vy_intensity {
      label="Intensity (%) Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_vz_intensity {
      label="Default Vz Intensity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vz_intensity {
      label="Intensity (%) Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Default";
      group="Column 1";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field spectrum_data_string {
      label="Spectrum Data String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;      
    },
    field disply_vx_spectrum {
      label="Display Spectrum Vx";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 2";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field disply_vy_spectrum {
      label="Display Spectrum Vy";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 2";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field disply_vz_spectrum {
      label="Display Spectrum Vz";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 2";
      layout_class="THREE_COLUMNS_XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field default_delta_time_string {
      label="Sampling Time Interval";
      datatype=FIELD_IS_STRING;
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field default_min_max_frequency {
      label="Default Frequency Range";
      datatype=FIELD_IS_STRING;
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field simulated_spectrum_label {
      label="Simulated Wind Profile: ";
      datatype=FIELD_IS_LABEL;
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_REQUIRED;
    },
    field default_min_frequency {
      label="Default Min. Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field min_frequency {
      label="Min. Frequency (Hz)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Use default";
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field default_max_frequency {
      label="Default Max Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field max_frequency {
      label="Max. Frequency (Hz)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Use default";
      group="Column 2";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field turbulence_data_string {
      label="Turbulence Data String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;      
    },
    field scaled_vx_delta_time {
      label="Scaled Vx Delta Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_vy_delta_time {
      label="Scaled Vy Delta Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_vz_delta_time {
      label="Scaled Vz Delta Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field disply_vx_turbulence {
      label="Display Turbulence Vx";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 3";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field disply_vy_turbulence {
      label="Display Turbulence Vy";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 3";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field disply_vz_turbulence {
      label="Display Turbulence Vz";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Column 3";
      layout_class="THREE_COLUMNS";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set context_info {
  label="Context Info";
  fields = [
    field id {   // This will always be a pfamily id.
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field contexts {
      label="Contexts";
      datatype=FIELD_IS_OPAQUE;   // std::set<std::string>
      flags=FIELD_HIDDEN|FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field current_context {
      label="Current Context";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field show_all {
      label="Show All";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set multipart_export {
  label="Part Export";
  fields = [
    field file_type {
      label="File Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["NASTRAN", "STL ASCII"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field parts {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST; 
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field single_file {
      label="Export to Single File";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field part_title {
      label="Part Title";
      datatype=FIELD_IS_STRING;
      enabled_if=["single_file=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field infer_filename {
      label="Infer Filename from Part Name";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["single_file=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field filename {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      visible_if=["single_file==Yes && infer_filename==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_IS_SAVE_FILENAME;
      //pathname_filter="*";
    },
    field directory {
      label="Directory";
      datatype=FIELD_IS_PATHNAME;
      visible_if=["single_file==No || infer_filename==Yes"];
      default="Case directory";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_IS_DIRECTORY;
      //pathname_filter="*";
    },
    field geometry_position {
      label="Geometry Position";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Match Original", "Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field length_unit {
      label="Length Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set part_export {
  label="Part Export";
  fields = [
    field file_type {
      label="File Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["NASTRAN", "STL ASCII"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field parts {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST; 
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field part_title {
      label="Part Title";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field infer_filename {
      label="Infer Filename from Part Name";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field filename {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      visible_if=["infer_filename=No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_IS_SAVE_FILENAME;
      //pathname_filter="*";
    },
    field directory {
      label="Directory";
      datatype=FIELD_IS_PATHNAME;
      visible_if=["infer_filename=Yes"];
      default="Case directory";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_IS_DIRECTORY;
      //pathname_filter="*";
    },
    field geometry_position {
      label="Geometry Position";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Match Original", "Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field length_unit {
      label="Length Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["geometry_position=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set vr {
  label="VR Region";
  short_label="VR Reg";
  fields = [
    field region {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_OFFSET_PSET_ALLOWED;
    },
    field level {
      label="Level";
      label_w_details="Level (lower numbers are coarser)";
      short_label="Level";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field precedence {
      label="Overlap Precedence";
      label_w_details="Overlap Precedence (higher has precedence)";
      short_label="Precedence";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set vr_thickness_options {
  label="Minimum VR Level Thickness Options";
  short_label="Min VR Thickness Options";
  fields = [
    field default_thickness {
      label="Default Minimum VR Thickness";
      label_w_details="Default Minimum VR Thickness (local voxels)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="2";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set vr_thickness {
  label="Minimum VR Level Thickness";
  short_label="Min VR Thickness";
  fields = [
    field level {
      label="Level";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field thickness {
      label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      custom_unit0="Local Voxels";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set fluid_solid_options {
  label="Fluid Solid Options";
  fields = [
    field fs_grouping {
      label="Grouping";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_fs_grouping {
      label="Secondary Grouping";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      filters=["subtype=part"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fs_display {
      label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Flat", "Hierarchy"];
      visible_if=["fs_grouping!=Standard"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    },
    field fs_display_mode {
      label="Show Inherited Fluid/Solid Regions";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      visible_if=["fs_grouping!=Standard && fs_display==Hierarchy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    }
  ];
};

parameter_set vr_family_options {
  label="VR Options";
  fields = [
    field vr_grouping {
      label="Grouping";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_vr_grouping {
      label="Secondary Grouping";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      filters=["subtype=part"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field vr_display {
      label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Flat", "Hierarchy"];
      visible_if=["vr_grouping!=Standard"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    },
    field vr_display_mode {
      label="Show Inherited VR Regions";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      visible_if=["vr_grouping!=Standard && vr_display==Hierarchy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    }
  ];
};

parameter_set bc_options {
  label="BC Options";
  fields = [
    field bc_grouping {
      label="Grouping";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_bc_grouping {
      label="Secondary Grouping";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      filters=["subtype=face"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field bc_display {
      label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Flat", "Hierarchy"];
      visible_if=["bc_grouping!=Standard"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    },
    field bc_display_mode {
      label="Show Inherited Boundary Conditions";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      indent=1;
      visible_if=["bc_grouping!=Standard && bc_display==Hierarchy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_NO_SWITCH_WARNING;
    }
  ];
};

parameter_set model_view_options {
  label="Model View Options";
  fields = [
    field mv_view {
      label="Model View";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "  Parts Only", "  Faces Only", "SECONDARY VALUE"];
      default="Standard";
      flags=FIELD_REQUIRED|FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED|FIELD_HEIGHT_NORMAL;
    },
    field secondary_mv_view {
      label="Model View Pset";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="model_view_family";
      filters=["ChangeStatus=PSET_ATTR:Committed"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_HEIGHT_NORMAL;
    },
    field mv_use_std_disp_properties {   // deprecated
      label="Use Standard Display Properites in Viewer";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    },
    field viewer_mv {
      label="Viewer Model View";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Same as Model Tab", "Standard", "SECONDARY VALUE"];
      default="Same as Model Tab";
      flags=FIELD_REQUIRED|FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED|FIELD_HEIGHT_NORMAL;
    },
    field secondary_viewer_mv {
      label="Viewer Model View Pset";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="model_view_family";
      filters=["ChangeStatus=PSET_ATTR:Committed"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_HEIGHT_NORMAL;
    },
    field default_powerviz_mv {
      label="Default PowerVIZ Model View";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard (PowerVIZ)", "Standard (PowerCASE)", "SECONDARY VALUE"];
      default="Standard (PowerVIZ)";
      flags=FIELD_REQUIRED|FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_HEIGHT_NORMAL;
    },
    field secondary_default_powerviz_mv {
      label="Default PowerVIZ Model View Pset";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="model_view_family";
      filters=["ChangeStatus=PSET_ATTR:Committed"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_HEIGHT_NORMAL;
    }
  ];
};

// Parameter set for the tag family
parameter_set tag_type {
  label="Partition";
  fields = [
    field id {
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field name { // case preserved
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT;
    },
    field subtype { // case preserved
      label="Subtype";
      datatype=FIELD_IS_STRING;
      init_val="Part";
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set tag {
  label="Segment";
  fields = [
    field id { // tag_type/name in lowercase
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field name { // case preserved
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT;
    },
    field tag_type { // convenience -- info is in id
      label="Partition";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field membership {
      label="Membership";
      datatype=FIELD_IS_OPAQUE;
      pfamily_identifier="membership";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field color {   // deprecated in favor of color_map
      label="Look";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      default="#F5F5D3"; // Default is off-white
    },
    field color_map {
      label="ColorMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field realistic_look_map {
      label="RealisticLookMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field transparency {  // deprecated in favor of transparency_map
      label="Fade";
      deprecated_labels=["Transparency"];
      datatype=FIELD_IS_TRANSPARENCY;
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      default="0";
    },
    field transparency_map {
      label="TransparencyMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field display_mode {   // deprecated in favor of display_map
      label="Display Mode";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field display_map {
      label="DisplayMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
};

// Parameter set for the table family
parameter_set table {
  label="Imported Table";
  short_label="Table";
  flags=PSET_NOT_DISCRETIZED|PSET_ALLOW_INCOMPLETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field filename {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field filename_abs {
      label="Full Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN;
    },
    field display_xform {
      label="Display Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field store_table_in_case {
      label="Store Table Data in Case and CDI Files";
      short_label="Store in Case/CDI";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field launch_table_data {
      label="View Table Data";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["store_table_in_case=Yes && filename!="];
      flags=FIELD_NOT_DISCRETIZED;
    },
    field table_string {
      label="Table String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field read_during_simulation {
      label="Read During Simulation";
      short_label="Sim Read";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    //field init_table_includes_data {
    //  label="Initial Table Includes Data";
    //  short_label="Init Data";
    //  datatype=FIELD_IS_CHECK_BOX;
    //  enabled_if=["read_during_simulation=Yes"];
    //  indent=1;
    //  flags=FIELD_INPUT|FIELD_REQUIRED;
    //},
    field read_after_specified_interval {
      label="Read After Specified Interval";
      short_label="Read After Int";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["read_during_simulation=Yes"];
      init_val="Yes";
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field first_interval {
      label="First Interval";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["read_during_simulation=Yes && read_after_specified_interval=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field subsequent_intervals {
      label="Subsequent Intervals";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="First Interval";
      enabled_if=["read_during_simulation=Yes && read_after_specified_interval=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="last timestep";
      enabled_if=["read_during_simulation=Yes && read_after_specified_interval=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field read_after_meas_frame {
      label="Read After Measurement Frame Written";
      short_label="Read After Meas";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["read_during_simulation=Yes"];
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field meas_window {
      label="Measurement Window";
      short_label="Meas Window";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="measurement";
      enabled_if=["read_during_simulation=Yes && read_after_meas_frame=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field first_frame_to_read_after {
      label="First Frame to Read After";
      short_label="First Frame";
      datatype=FIELD_IS_NUMBER;
      enabled_if=["read_during_simulation=Yes && read_after_meas_frame=Yes"];
      indent=2;
      default="0";
      flags=FIELD_INPUT;
    },
    field num_frames_between_reads {
      label="Number of Frames Between Table Reads";
      short_label="Frames Between Reads";
      datatype=FIELD_IS_NUMBER;
      enabled_if=["read_during_simulation=Yes && read_after_meas_frame=Yes"];
      indent=2;
      default="1";
      flags=FIELD_INPUT;
    },
    field preread_command {
      label="Command to Run Before Each Read";
      short_label="Preread Command";
      datatype=FIELD_IS_STRING;
      enabled_if=["read_during_simulation=Yes && read_after_meas_frame=Yes"];
      indent=2;
      default="none";
      flags=FIELD_INPUT;
    },
    field display_grid {
      label="Display Grid";
      short_label="Display";
      datatype=FIELD_IS_CHECK_BOX;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_relative_to {
      label="Display Relative to Csys:";
      short_label="Display Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      enabled_if=["display_grid=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field color {
      label="Color";
      datatype=FIELD_IS_COLOR;
      enabled_if=["display_grid=Yes"];
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      indent=1;
      default="#FF0000"; // Default is red
    },
    field used_for_coupling {
      label="Used for Coupling";
      datatype=FIELD_IS_NUMBER;
      default="0";   // 1 for PowerCOOL, 2 for AMESim
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field parsed_value {
      label="Parsed Value";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_HIDDEN;
    }
  ];
};


// Parameter sets for the fluid/solid family

parameter_set fluid {
  label="Fluid";
  fields = [
    field region {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field pressure {
      label="Initial Pressure";
      short_label="p";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="characteristic_pressure";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field x_velocity {
      label="Initial X Velocity";
      short_label="Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field y_velocity {
      label="Initial Y Velocity";
      short_label="Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field z_velocity {
      label="Initial Z Velocity";
      short_label="Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field temperature {
      label="Initial Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field precedence {
      label="Overlap Precedence";
      label_w_details="Overlap Precedence (higher has precedence)";
      short_label="Precedence";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field nu_over_t {
      label="Nu/T";
      datatype=FIELD_IS_UVAL;
      // One could use units of length^2/(sec * temp) for nu/T, but its more convenient
      // to consider it just as a dimensionless parameter.
      unit_class="Dimensionless";
      // Not required: default is 0.0125 or whatever simulation model calculates.
      // Usually hidden (via logic in CE3): only advanced users get to tweak it using a CL option
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field water_vapor_source_term {
      label="Water Vapor Source Term";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="SourceTerm";
      default="0.0";
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field initial_humidity_content_via {
      label="Initial Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["initial_humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["initial_humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field use_region_body_force {
      label="Apply General Body Force";
      short_label="Body Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["use_body_force=Yes && body_force_controls=Per Fluid Region"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field acceleration_x {
      label="Acceleration X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      visible_if=["use_body_force=Yes && body_force_controls=Per Fluid Region"];
      enabled_if=["use_body_force=Yes && body_force_controls=Per Fluid Region && use_region_body_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field acceleration_y {
      label="Acceleration Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      visible_if=["use_body_force=Yes && body_force_controls=Per Fluid Region"];
      enabled_if=["use_body_force=Yes && body_force_controls=Per Fluid Region && use_region_body_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field acceleration_z {
      label="Acceleration Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      visible_if=["use_body_force=Yes && body_force_controls=Per Fluid Region"];
      enabled_if=["use_body_force=Yes && body_force_controls=Per Fluid Region && use_region_body_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    }
  ];
};

parameter_set fluid_2d : fluid {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field acceleration_z {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set turbulence_model_fluid : fluid {
  // Label is same as "fluid", but only one of these is used in any given simmodel.
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set turbulence_model_fluid_2d : turbulence_model_fluid {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field acceleration_z {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan : fluid {
  label="General In-Line Fan Model";
  flags+=PSET_ALLOW_INCOMPLETE;
  fields = [
    field fan_origin_x {
      label="X Location of Fan Origin";
      label_w_details="X Location of Fan Origin (Inlet Center)";
      short_label="Fan Origin X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fan_origin_y {
      label="Y Location of Fan Origin";
      label_w_details="Y Location of Fan Origin (Inlet Center)";
      short_label="Fan Origin Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fan_origin_z {
      label="Z Location of Fan Origin";
      label_w_details="Z Location of Fan Origin (Inlet Center)";
      short_label="Fan Origin Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_axis_x {
      label="X Component of R Axis Direction";
      short_label="R Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_axis_y {
      label="Y Component of R Axis Direction";
      short_label="R Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_axis_z {
      label="Z Component of R Axis Direction";
      short_label="R Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_x {
      label="X Component of G Axis Direction";
      short_label="G Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_y {
      label="Y Component of G Axis Direction";
      short_label="G Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_z {
      label="Z Component of G Axis Direction";
      short_label="G Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field r_force_coeff0 {
      label="Axial Force 0th-order velocity coeff";
      short_label="Fan AF0";
      datatype=FIELD_IS_UVAL;
      unit_class="Acceleration";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field r_force_coeff1 {
      label="Axial Force 1st-order velocity coeff";
      short_label="Fan AF1";
      datatype=FIELD_IS_UVAL;
      unit_class="InvTime";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field r_force_coeff2 {
      label="Axial Force 2nd-order velocity coeff";
      short_label="Fan AF2";
      datatype=FIELD_IS_UVAL;
      unit_class="InvLength";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field r_force_coeff3 {
      label="Axial Force 3rd-order velocity coeff";
      short_label="Fan AF3";
      datatype=FIELD_IS_UVAL;
      unit_class="TimePerLengthSqrd";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field u_theta_coeff0 {
      label="Tangential Velocity 0th-order coeff";
      short_label="Fan TV0";
      datatype=FIELD_IS_UVAL;
      unit_class="Velocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field u_theta_coeff1 {
      label="Tangential Velocity 1st-order coeff";
      short_label="Fan TV1";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field u_theta_coeff2 {
      label="Tangential Velocity 2nd-order coeff";
      short_label="Fan TV2";
      datatype=FIELD_IS_UVAL;
      unit_class="InvVelocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },

    field u_theta_coeff3 {
      label="Tangential Velocity 3rd-order coeff";
      short_label="Fan TV3";
      datatype=FIELD_IS_UVAL;
      unit_class="InvVelocitySqrd";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    delete field use_region_body_force,
    delete field acceleration_x,
    delete field acceleration_y,
    delete field acceleration_z
  ];
};

// Same as inline_fan, but z components of various parameters are hidden
parameter_set inline_fan_2d : inline_fan {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff0 {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff1 {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff2 {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff3 {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan_turbulence : inline_fan {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
        default="default_turb_intensity";
        enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
        default="default_turb_length_scale";
        enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
        enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
        enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

// Same as inline_fan, but z components of various parameters are hidden
parameter_set inline_fan_2d_turbulence : inline_fan_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field fan_origin_z {
      default="0.0";
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field u_theta_coeff0 {
      default="0.0";
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff1 {
      default="0.0";
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff2 {
      default="0.0";
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field u_theta_coeff3 {
      default="0.0";
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan : fluid {
  label="In-Line Fan Model via Data Table";
  flags+=PSET_ALLOW_INCOMPLETE;
  fields = [
    field fan_properties_file {
      label="Fan Properties File";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field fan_properties_file_abs {
      label="Full Fan Properties File";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fantable_string {
      label="Fan Table String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field launch_fan_properties {
      label="View Fan Properties";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["fan_properties_file!="];
      flags=FIELD_NOT_DISCRETIZED;
    },    
    field mean_density {
      label="Mean Density";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Density";
      default="Char. Density";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fan_length {
      label="Fan Length";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tangential_velocity_model {
      label="Tangential Velocity Model";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["User Defined", "H&O Model"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field zeroth_order_coeff {
      label="Tangential Velocity 0th-order Coeff.";
      short_label="0th-order Coeff.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["tangential_velocity_model=User Defined"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field thrust_coeff {
      label="Tangential Velocity Thrust Coeff";
      short_label="Thrust Coeff.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="InvMassFlow";
      enabled_if=["tangential_velocity_model=User Defined"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fan_radius {
      label="Fan Radius";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["tangential_velocity_model=H&O Model"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field hub_radius {
      label="Hub Radius";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["tangential_velocity_model=H&O Model"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field angular_velocity {
      label="Angular Velocity";
      short_label="Ang Vel";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      enabled_if=["tangential_velocity_model=H&O Model"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    delete field use_region_body_force,
    delete field acceleration_x,
    delete field acceleration_y,
    delete field acceleration_z
  ];
};

// Same as inline_fan, but z components of various parameters are hidden
parameter_set inline_table_fan_2d : inline_table_fan {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field tangential_velocity_model {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field zeroth_order_coeff {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field thrust_coeff {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field fan_radius {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field hub_radius {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field angular_velocity {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan_turbulence : inline_table_fan {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
        default="default_turb_intensity";
        enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
        default="default_turb_length_scale";
        enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
        enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
        enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

// Same as inline_fan, but z components of various parameters are hidden
parameter_set inline_table_fan_2d_turbulence : inline_table_fan_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field tangential_velocity_model {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field zeroth_order_coeff {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field thrust_coeff {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field fan_radius {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field hub_radius {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field angular_velocity {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    }
  ];
};


//---------------------BEGIN thermal stuff---------------------------->
//The following are the same as their non-thermal equivalent
//(e.g. fluid_thermal is the same as fluid)
//but they don't hide the temperature field.

parameter_set fluid_thermal : fluid {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set fluid_2d_thermal : fluid_2d {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set turbulence_model_fluid_thermal : turbulence_model_fluid {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set turbulence_model_fluid_2d_thermal : turbulence_model_fluid_2d {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan_thermal : inline_fan {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan_2d_thermal : inline_fan_2d {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan_thermal_turbulence : inline_fan_turbulence {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_fan_2d_thermal_turbulence : inline_fan_2d_turbulence {
  fields = [
    field fan_origin_z {
      delete default;
    },
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan_thermal : inline_table_fan {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan_2d_thermal : inline_table_fan_2d {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan_thermal_turbulence : inline_table_fan_turbulence {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set inline_table_fan_2d_thermal_turbulence : inline_table_fan_2d_turbulence {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};


//----------------------------END thermal stuff--------------------------<

parameter_set porous : fluid {
  label="Porous Medium";
  sublabel0="Porous Medium";
  sublabel1="Cartesian";
  flags+=PSET_ALLOW_INCOMPLETE|PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field region {},
    field use_local_csys {
      label="Use Local Coordinate System (Box Only)";
      short_label="Use Local CSys";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_r {
      label="Coordinate System X";
      short_label="Csys X";
      indent=1;
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER;
      default="0.5";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
      visible_if=["use_local_csys=Yes"];
    },
    field coord_g {
      label="Coordinate System Y";
      short_label="Csys Y";
      indent=1;
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER;
      default="0.5";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
      visible_if=["use_local_csys=Yes"];
    },
    field coord_b {
      label="Coordinate System Z";
      short_label="Csys Z";
      indent=1;
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER;
      default="0.5";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
      visible_if=["use_local_csys=Yes"];
    },
    field coord_size {
      label="Coordinate System Size";
      short_label="Csys Size";
      indent=1;
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER;
      default="0.55";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
      visible_if=["use_local_csys=Yes"];
    },
    field coord_sys {
      indent=1;
      enabled_if=["use_local_csys==No"];
    },
    field r_axis_x {
      label="X Component of R Axis Direction";
      short_label="R Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_axis_y {
      label="Y Component of R Axis Direction";
      short_label="R Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_axis_z {
      label="Z Component of R Axis Direction";
      short_label="R Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_x {
      label="X Component of G Axis Direction";
      short_label="G Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_y {
      label="Y Component of G Axis Direction";
      short_label="G Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field g_axis_z {
      label="Z Component of G Axis Direction";
      short_label="G Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field nu_over_t {},
    field auto_calc_resistances {
      label="Automatically Calculate Resistance Coeffs in Pressure Drop Direction";
      short_label="Auto Calc Coeffs";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },     
    field pressure_drop_direction {
      label="Pressure Drop Direction";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "Y", "Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      indent=1;
      enabled_if=["auto_calc_resistances=Yes"];
    },
    field pressure_drop_data {
      label="Pressure Drop Data";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      indent=1;
      enabled_if=["auto_calc_resistances=Yes"];
    },
    field pressure_drop_data_abs {
      label="Full Pressure Drop Data";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field pressure_drop_data_string {
      label="Pressure Drop Data String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field launch_pressure_drop_data {
      label="View Pressure Drop Data";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["auto_calc_resistances==Yes && pressure_drop_data!="];
    },
    field launch_coeff_graph {
      label="Resistance Coeffs";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["auto_calc_resistances==Yes && pressure_drop_data!="];
    },
    field r_viscous_res {
      label="X Axis Viscous Resistance";
      short_label="X Visc. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvTime";
      default="Infinite";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances==No || pressure_drop_direction!=X"];
    },
    field r_inertial_res {
      label="X Axis Inertial Resistance";
      short_label="X Inert. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvLength";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances==No || pressure_drop_direction!=X"];
    },
    field g_viscous_res {
      label="Y Axis Viscous Resistance";
      short_label="Y Visc. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvTime";
      default="Infinite";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=Y"];
    },
    field g_inertial_res {
      label="Y Axis Inertial Resistance";
      short_label="Y Inert. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvLength";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=Y"];
    },
    field b_viscous_res {
      label="Z Axis Viscous Resistance";
      short_label="Z Visc. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvTime";
      default="Infinite";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=Z"];
    },
    field b_inertial_res {
      label="Z Axis Inertial Resistance";
      short_label="Z Inert. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvLength";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=Z"];
    },
    // For heat_exchanger
    field upstream_exchanger {
      label="Upstream Heat Exchanger";
      short_label="Upstream HE";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="fluid_solid";
      pset_identifier="heat_exchanger|heat_exchanger_multipass|heat_exchanger_curved|heat_exchanger_multipass_curved";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_POINTS_TO_OWN_FAMILY|FIELD_NOT_DISCRETIZED;
    },
    delete field use_region_body_force,
    delete field acceleration_x,
    delete field acceleration_y,
    delete field acceleration_z
  ];
};

parameter_set porous_2d : porous {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_acoustic : porous {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_acoustic : porous_2d {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set porous_turbulence : porous {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_turbulence : porous_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_turbulence_acoustic : porous_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_turbulence_acoustic : porous_2d_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

//---------------------BEGIN thermal stuff---------------------------->
//The following are the same as their non-thermal equivalent
//(e.g. porous_thermal is the same as porous)
//but with a couple of additional fields at the end.
parameter_set porous_thermal : porous {
  label="Variable Heat Rate Porous Medium";
  sublabel0="Variable Heat Rate Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    },
    field nu_over_t {},
    field auto_calc_resistances {},
    field pressure_drop_direction {},
    field pressure_drop_data {},
    field launch_coeff_graph {},
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    },
    field b_inertial_res {},
    field constant_volumetric_heat_input {
      label="Constant Volumetric Heat Input";
      short_label="Q0";
      datatype=FIELD_IS_UVAL;
      unit_class="PowerDensity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field reference_temperature {
      label="Heat Exchanger Fluid Temperature";
      short_label="HE Fluid Temp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
        default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field heating_coefficient {
      label="Heating Rate Coefficient";
      label_w_details="Heating Rate Coefficient (H)";
      short_label="H";
      datatype=FIELD_IS_UVAL;
      unit_class="HeatingCoeff";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field use_dynamic_heat_rate_coefficient {
      label="Use Dynamic Heating Rate Coefficient";
      short_label="Dynamic H";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff_label {
      label="Dynamic Heating Rate Coeficient &nbsp;&nbsp;&nbsp;&nbsp; h = H / (K<sub>c</sub>((1 m/s)/u)<sup>a</sup> +D<sub>h</sub>)";
      datatype=FIELD_IS_LABEL;
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff0 {
      label="Air Convective Heat Resistance Coefficient";
      label_w_details="Air Convective Heat Resistance Coefficient (Kc)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff1 {
      label="Air Convective Exponent";
      label_w_details="Air Convective Exponent (a)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff2 {
      label="Combined Heat Resistance Coefficient";
      label_w_details="Combined Heat Resistance Coefficient (Dh)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_thermal : porous_thermal {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    },
    field constant_volumetric_heat_input {
      flags+=FIELD_REQUIRED;
      delete default;
    }
  ];
};

parameter_set porous_fixed_temp : porous {
  label="Prescribed Temp Porous Medium";
  sublabel0="Prescribed Temp Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field nu_over_t {},
    field auto_calc_resistances {},
    field pressure_drop_direction {},
    field pressure_drop_data {},
    field launch_coeff_graph {},
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    },
    field b_inertial_res {},
    field reference_temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_fixed_temp : porous_fixed_temp {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_adiabatic : porous {
  label="Adiabatic Porous Medium";
  sublabel0="Adiabatic Porous Medium";
  sublabel1="Cartesian";
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    },
    field nu_over_t {},
    field auto_calc_resistances {},
    field pressure_drop_direction {},
    field pressure_drop_data {},
    field launch_coeff_graph {},
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    }
  ];
};

parameter_set porous_2d_adiabatic : porous_adiabatic {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_adiabatic_acoustic : porous_adiabatic {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_adiabatic_acoustic : porous_2d_adiabatic {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set porous_thermal_turbulence : porous_thermal {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field constant_volumetric_heat_input {
      flags+=FIELD_REQUIRED;
      delete default;
    }
  ];
};

parameter_set porous_2d_thermal_turbulence : porous_thermal_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_fixed_temp_turbulence : porous_fixed_temp {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_fixed_temp_turbulence : porous_fixed_temp_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_adiabatic_turbulence : porous_adiabatic {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_adiabatic_turbulence : porous_adiabatic_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_adiabatic_turbulence_acoustic : porous_adiabatic_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_2d_adiabatic_turbulence_acoustic : porous_2d_adiabatic_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Cartesian";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set heat_exchanger : porous_thermal {
  label="Heat Exchanger";
  sublabel0="Heat Exchanger";
  sublabel1="Radiator/CAC";
  sublabel2="Rectangular";
  flags+=PSET_NO_USER_MULTI_MODIFY;
  fields = [
    field region {
      label="Geometry";
      label_w_details="Geometry (Box Only)";
      short_label="Region";
      //pset_identifier="box_2_corners";
    },
    field pressure {},
    field init_velocity {
      label="Initial Velocity";
      short_label="V";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field x_velocity {
      flags+=FIELD_HIDDEN;
    },
    field y_velocity {
      flags+=FIELD_HIDDEN;
    },
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field temperature {
      flags-=FIELD_HIDDEN;
    },
    field nu_over_t {},
    field auto_calc_resistances {
      label="Automatically Calculate Resistance Coeffs";
      short_label="Auto Calc Coeffs";
    },
    delete field pressure_drop_direction,
    field pressure_drop_data {},
    field launch_coeff_graph {},
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      delete default;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      enabled_if=["auto_calc_resistances=No"];
    },
    field viscous_res {
      label="Viscous Resistance";
      short_label="Visc. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvTime";
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=X"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field use_local_csys {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field coord_sys {
      flags+=FIELD_HIDDEN;
    },
    field r_viscous_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field g_viscous_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field inertial_res {
      label="Inertial Resistance";
      short_label="Inert. Res";
      datatype=FIELD_IS_UVAL;
      unit_class="InvLength";
      default="0.0";
      enabled_if=["auto_calc_resistances=No || pressure_drop_direction!=X"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field r_inertial_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field g_inertial_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
    },
    move field coord_r,
    field coord_r {
      indent=0;
      flags+=FIELD_REQUIRED;
      visible_if=[];
    },
    move field coord_g,
    field coord_g {
      indent=0;
      flags+=FIELD_REQUIRED;
      visible_if=[];
    },
    move field coord_b,
    field coord_b {
      indent=0;
      flags+=FIELD_REQUIRED;
      visible_if=[];
    },
    move field coord_size,
    field coord_size {
      indent=0;
      flags+=FIELD_REQUIRED;
      visible_if=[];
    },
    delete field constant_volumetric_heat_input,
    delete field reference_temperature,
    delete field heating_coefficient,
    delete field use_dynamic_heat_rate_coefficient,
    delete field dyn_hr_coeff_label,
    delete field dyn_hr_coeff0,
    delete field dyn_hr_coeff1,
    delete field dyn_hr_coeff2,
    field flow_face {
      label="Air Flow Inlet Face";
      short_label="Inlet Face";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Min X", "Max X", "Min Y", "Max Y", "Min Z", "Max Z"];
      empty_choice_string=" ";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_flow {
      label="Coolant Flow Direction";
      short_label="Coolant Dir";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "-X", "Y", "-Y", "Z", "-Z"];
      empty_choice_string=" ";
      enabled_if=["flow_face!="]; // must have *some* value
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry {
      label="Coolant Entry Point";
      short_label="Entry Pt";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Min X", "Max X", "Min Y", "Max Y", "Min Z", "Max Z"];
      empty_choice_string=" ";
      enabled_if=["coolant_flow!= && flow_face!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field num_stages {
      label="Number of Passes";
      short_label="# Passes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["1", "2"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field show_decorations {
      label="Always Show Decorations";
      short_label="Show Dec";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field g_divisions {
      label="# Divisions in Coolant Direction";
      short_label="# Flow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="20";
      flags=FIELD_INPUT;
    },
    field b_divisions {
      label="# Divisions across Coolant Direction";
      short_label="# Nonflow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="20";
      flags=FIELD_INPUT;
    },
    field front_offset {
      label="Front Offset";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field back_offset {
      label="Back Offset";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field thickness {
      label="Percent Thickness of the Adiabatic Layer";
      short_label="% Thick";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="15";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field meas_plane_front_color {
      label="Front Color";
      datatype=FIELD_IS_COLOR;
      default="#bbbbff";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
    },
    field meas_plane_back_color {
      label="Back Color";
      datatype=FIELD_IS_COLOR;
      default="#ffbbbb";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
    },
    field upstream_exchanger {
      flags-=FIELD_HIDDEN;
    },
    field flow_percent {
      label="Percentage of Coolant Flow";
      short_label="% Flow";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="100";
      enabled_if=["upstream_exchanger!="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Time of First Calculation";
      short_label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field period {
      label="Period Between Calculations";
      short_label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Period";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field iterations {
      label="Number of Iterations";
      short_label="# Iterations";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="Infinite";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_type {
      label="Heat Exchanger Type";
      short_label="HE Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Radiator", "Charge-Air Cooler"];
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field specific_heat {
      label="Coolant Specific Heat";
      short_label="Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="SpecificHeat";
      default_if=["exchanger_type==Charge-Air Cooler", "1010 J/kgK"];
      default="3600 J/kgK";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field coolant_viscosity {
      label="Coolant Dynamic Viscosity";
      short_label="CMu";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Viscosity";
      default="From data file";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field coolant_thermal_conductivity {
      label="Coolant Thermal Conductivity";
      short_label="Ctc";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      default="From data file";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field mass_flow_rate {
      label="Coolant Mass Flow Rate";
      short_label="Mass Flow Rate";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MassFlow";
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field use_heat_rejection {
      label="Specify Heat Rejection";
      short_label="Use H Rej.";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["upstream_exchanger=="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field heat_rejection {
      label="Heat Rejection";
      short_label="H Rej.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Power";
      indent=1;
      enabled_if=["upstream_exchanger== && use_heat_rejection=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field entry_temperature {
      label="Coolant Entry Temperature";
      short_label="Entry T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      indent=1;
      enabled_if=["upstream_exchanger== && use_heat_rejection=No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_data {
      label="Heat Exchanger Data";
      short_label="Data";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_data_abs {
      label="Full Heat Exchanger Data";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field launch_exchanger_data {
      label="View Heat Exchanger Data";
      unique_label="View Heat Exchanger Data";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["exchanger_data!="];
    },
    field launch_sandwich_graph {
      label="Sandwich Interpolation";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["exchanger_data!="];
    },
    field interpolation_method {
      label="Interpolation Method";
      short_label="Method";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Sandwich", "Bilinear"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field launch_nu_graph {
      label="Thermal Map";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
      enabled_if=["exchanger_data!="];
    },
    field use_sutherland_correction {
      label="Use Temperature-Dependent Corrections";
      short_label="Temp. Corr.";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field experiment_temperature {
      label="Experiment Reference Temperature";
      short_label="Exp. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      indent=1;
      enabled_if=["use_sutherland_correction=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_data_string {
      label="Heat Exchanger Data String";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sandwich_kc {
      label="Estimated Kc Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sandwich_kh {
      label="Estimated Kh Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sandwich_alpha {
      label="Estimated Alpha Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sandwich_beta {
      label="Estimated Beta Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sandwich_d {
      label="Estimated D Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_sandwich_kc {
      label="Estimated Kc Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_sandwich_kh {
      label="Estimated Kh Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_sandwich_alpha {
      label="Estimated Alpha Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_sandwich_beta {
      label="Estimated Beta Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field scaled_sandwich_d {
      label="Estimated D Sandwich Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sim_height {
      label="Simulated Height of Heat Exchanger in m";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sim_width {
      label="Simulated Width of Heat Exchanger in m";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field sim_depth {
      label="Simulated Depth of Heat Exchanger in m";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    }
  ];
  dividers = [
    divider div0 {
      label="Basic Parameters";
      first_field="region";
    },
    divider div1 {
      label="Coupling Parameters";
      first_field="g_divisions";
    }
  ];
};


parameter_set heat_exchanger_turbulence : heat_exchanger {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_multipass_turbulence|heat_exchanger_curved_turbulence|heat_exchanger_multipass_curved_turbulence";
    }
  ];
};

parameter_set heat_exchanger_amesim : heat_exchanger {
  label="AMESim Heat Exchanger";
  sublabel0="Heat Exchanger";
  sublabel1="AMESim Heat Exchanger";
  sublabel2="Rectangular";
  fields = [
    delete field num_stages,
    field show_decorations {},
    field amesim_model_file {
      label="AMESim Model File";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NO_REIMPORT;
      pathname_filter="AME Files (*.ame *.AME);;All Files (*)";
    },
    field amesim_model_file_abs {
      label="Full AMESim Model File";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_REQUIRED|FIELD_NO_REIMPORT;
    },
    field amesim_file_reader {
      label=" ";
      datatype=FIELD_IS_OPAQUE;
      indent=1;
    },
    field amesim_hxch_name {
      label="AMESim Heat Exchanger Name";
      short_label="Hxch Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field g_divisions {
      label="# Divisions along Coolant Direction";
      default="# Along Coolant in AMESim Model";
    },
    field g_divisions_amesim {
      label="# Along Coolant in AMESim Model";
      short_label="# Model Flow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="";
      indent=1;
      enabled_if=["upstream_exchanger!="];
    },
    field b_divisions {
      label="# Divisions across Coolant Direction";
      default="# Across Coolant in AMESim Model";
    },    
    field b_divisions_amesim {
      label="# Across Coolant in AMESim Model";
      short_label="# Model Nonflow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="";
      indent=1;
      enabled_if=["upstream_exchanger!="];
    },
    field upstream_exchanger {  
      flags+=FIELD_HIDDEN;
    },
    delete field flow_percent,
    field start_time {
      delete enabled_if;
    },
    field period {
      delete enabled_if;
    },
    field interval {
      delete enabled_if;
    },
    field iterations {
      delete enabled_if;
    },
    delete field exchanger_type,
    delete field specific_heat,
    delete field coolant_thermal_conductivity,
    delete field coolant_viscosity,
    delete field mass_flow_rate,
    delete field use_heat_rejection,
    delete field heat_rejection,
    delete field entry_temperature,
    delete field exchanger_data,
    delete field exchanger_data_abs,
    delete field launch_exchanger_data,
    delete field launch_sandwich_graph,
    delete field launch_nu_graph,
    delete field interpolation_method,
    delete field use_sutherland_correction,
    delete field experiment_temperature,
    delete field sandwich_kc,
    delete field sandwich_kh,
    delete field sandwich_beta,
    delete field sandwich_alpha,
    delete field sandwich_d,
    delete field scaled_sandwich_kc,
    delete field scaled_sandwich_kh,
    delete field scaled_sandwich_beta,
    delete field scaled_sandwich_alpha,
    delete field scaled_sandwich_d,
    delete field sim_height,
    delete field sim_width,
    delete field sim_depth,
    field amesim_length_unit {
      label="AMESim Length Unit";
      datatype=FIELD_IS_STRING;
      flags=FIELD_HIDDEN;
    },
    field amesim_hxch_width {
      label="AMESim Heat Exchanger Width";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_HIDDEN;
    },
    field amesim_hxch_height {
      label="AMESim Heat Exchanger Height";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_HIDDEN;
    },
    field amesim_hxch_thickness {
      label="AMESim Heat Exchanger Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_HIDDEN;
    },
    field amesim_velocity_is_const {
      label="AMESim Velocity is Constant";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN;
    },
    field amesim_temp_is_const {
      label="AMESim Temperature is Constant";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN;
    },
   field amesim_coolant_entry_left {
      label="AMESim Coolant Entry Left";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN;
    },
    field amesim_coolant_entry_down {
      label="AMESim Coolant Entry Down";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN;
    },
    field amesim_coupled_to_exa {
      label="AMESim Coupled to Exa";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN;
    },
    field amesim_model_maj_version {
      label="AMESim Model Major Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    },
    field amesim_model_med_version {
      label="AMESim Model Medium Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    },
    field amesim_exa_maj_version {
      label="AMESim Exa Major Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    },
    field amesim_exa_med_version {
      label="AMESim Exa Medium Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    },
    field amesim_local_maj_version {
      label="AMESim Local Major Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    },
    field amesim_local_med_version {
      label="AMESim Local Medium Version";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN;
    }
  ];
  dividers = [
    divider div0 {
      label="Basic Parameters";
      first_field="region";
    },
    divider div1 {
      label="Coupling Parameters";
      first_field="amesim_model_file";
    }
  ];
};

parameter_set heat_exchanger_amesim_turbulence : heat_exchanger_amesim {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set heat_exchanger_multipass : heat_exchanger {
  label="Multi-Pass Heat Exchanger";
  sublabel0="Heat Exchanger";
  sublabel1="Multi-Pass Radiator/CAC";
  sublabel2="Rectangular";
  fields = [
    delete field num_stages,
    field num_hx_passes {
      label="Number of Passes";
      short_label="# Passes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["2", "3", "4", "5", "6"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field num_tubes_1 { // <joke> Not to be confused with num_trucks </joke>
      label="Number of Divisions in Pass 1";
      short_label="# Divs, Pass 1";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_2 {
      label="Number of Divisions in Pass 2";
      short_label="# Divs, Pass 2";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_3 {
      label="Number of Divisions in Pass 3";
      short_label="# Divs, Pass 3";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>2"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_4 {
      label="Number of Divisions in Pass 4";
      short_label="# Divs, Pass 4";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>3"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_5 {
      label="Number of Divisions in Pass 5";
      short_label="# Divs, Pass 5";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>4"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_6 {
      label="Number of Divisions in Pass 6";
      short_label="# Divs, Pass 6";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>5"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    delete field b_divisions
  ];
};

parameter_set heat_exchanger_multipass_turbulence : heat_exchanger_multipass {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_multipass_turbulence|heat_exchanger_curved_turbulence|heat_exchanger_multipass_curved_turbulence";
    }
  ];
};

parameter_set heat_exchanger_condenser : heat_exchanger {
  label="Condenser";
  sublabel0="Heat Exchanger";
  sublabel1="Condenser";
  sublabel2="Rectangular";
  fields = [
    field coolant_flow {
      label="Refrigerant Flow Direction";
      short_label="Refrigerant Dir";
    },
    field coolant_entry {
      label="Refrigerant Entry Point";
    },
    delete field num_stages,
    field num_passes {
      label="Number of Passes";
      short_label="# Passes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["1", "2", "3", "4", "5", "6", "7", "8"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field num_tubes_1 { // <joke> Not to be confused with num_trucks </joke>
      label="Number of Tubes in Pass 1";
      short_label="# Tubes, Pass 1";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_2 {
      label="Number of Tubes in Pass 2";
      short_label="# Tubes, Pass 2";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes!=1"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_3 {
      label="Number of Tubes in Pass 3";
      short_label="# Tubes, Pass 3";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>2"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_4 {
      label="Number of Tubes in Pass 4";
      short_label="# Tubes, Pass 4";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>3"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_5 {
      label="Number of Tubes in Pass 5";
      short_label="# Tubes, Pass 5";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>4"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_6 {
      label="Number of Tubes in Pass 6";
      short_label="# Tubes, Pass 6";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>5"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_7 {
      label="Number of Tubes in Pass 7";
      short_label="# Tubes, Pass 7";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>6"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_8 {
      label="Number of Tubes in Pass 8";
      short_label="# Tubes, Pass 8";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>7"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    delete field g_divisions,
    delete field b_divisions,
    field upstream_exchanger {
      flags+=FIELD_HIDDEN;
    },
    delete field flow_percent,
    field start_time {
      delete enabled_if;
    },
    field period {
      delete enabled_if;
    },
    field interval {
      delete enabled_if;
    },
    field iterations {
      delete enabled_if;
    },
    delete field exchanger_type,
    delete field specific_heat,
    delete field coolant_viscosity,
    delete field coolant_thermal_conductivity,
    delete field scaled_sandwich_kh,
    delete field scaled_sandwich_beta,
    delete field scaled_sandwich_alpha,
    delete field scaled_sandwich_d,
    delete field sim_height,
    delete field sim_width,
    delete field sim_depth,
    field mass_flow_rate {
      label="Refrigerant Mass Flow Rate";
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    delete field use_heat_rejection,
    field heat_rejection {
      delete indent;
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    field entry_temperature {
      label="Refrigerant Entry Temperature";
      delete indent;
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    field refrigerant_pressure {
      label="Refrigerant Pressure at Inlet";
      short_label="Inlet P";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="Chosen by PowerFLOW";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field refrigerant_pressure_drop {
      label="Refrigerant Pressure Drop";
      short_label="P Drop";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="Chosen by PowerFLOW";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field degree_of_subcooling {
      label="Degree of Subcooling";
      short_label="Subcooling";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="Chosen by PowerFLOW";
    },
    field refrigerant_fluid {
      label="Refrigerant Fluid";
      short_label="Fluid";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["R134a"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_data {
      label="Condenser Data";
      default="Built-in generic data";
      flags-=FIELD_REQUIRED;
    },
    field exchanger_data_abs {
      label="Full Condenser Data";
    },
    field launch_exchanger_data {
      label="View Condenser Data";
    },
    field launch_sandwich_graph {
      delete enabled_if;
    },
    delete field interpolation_method,
    delete field use_sutherland_correction,
    delete field experiment_temperature,
    delete field launch_nu_graph
  ];
  dividers = [
    divider div0 {
      label="Basic Parameters";
      first_field="region";
    },
    divider div1 {
      label="Coupling Parameters";
      first_field="front_offset";
    }
  ];
};

parameter_set heat_exchanger_condenser_turbulence : heat_exchanger_condenser {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_curved_turbulence";
    }
  ];
};


//----------------------------END thermal stuff--------------------------<

parameter_set porous_curved : porous {
  label="Porous Medium, Curved";
  sublabel0="Porous Medium";
  sublabel1="Curved";
  fields = [
    field region {
      flags+=FIELD_NON_RECTANGULAR_MESH_PSET_ALLOWED;
    },
    field x_axis_face {
      label="Local X Axis Defined by Face";
      short_label="Face";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
    },
    field pressure {},
    field x_velocity {},
    move field precedence,
    move field auto_calc_resistances,
    field auto_calc_resistances {
      label="Automatically Calculate X-Axis Resistance Coeffs";
      short_label="Auto Calc Coeffs";
    },
    delete field use_local_csys,
    delete field coord_sys,
    delete field coord_r,
    delete field coord_g,
    delete field coord_b,
    delete field coord_size,
    delete field pressure_drop_direction,
    move field pressure_drop_data,
    move field launch_pressure_drop_data,
    move field launch_coeff_graph,
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    },
    move field r_viscous_res,
    move field r_inertial_res,
    field infinite_yz {
      label="Infinite Resistance in Y and Z";
      short_label="Infinite Y-Z";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field axis {
      label="Y Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      enabled_if=["infinite_yz=No"];
      indent=1;
      empty_choice_string="[default_csys Y-Axis]";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    move field y_velocity,
    field y_velocity {
      enabled_if=["infinite_yz=No"];
      indent=1;
    },
    move field z_velocity,
    field z_velocity {
      enabled_if=["infinite_yz=No"];
      indent=1;
    },
    field g_viscous_res {
      enabled_if=["infinite_yz=No"];
      indent=1;
    },
    field b_viscous_res {
      enabled_if=["infinite_yz=No"];
      indent=1;
    },
    field g_inertial_res {
      enabled_if=["infinite_yz=No"];
      indent=1;
    },
    field b_inertial_res {
      enabled_if=["infinite_yz=No"];
      indent=1;
    }
  ];
};

parameter_set porous_curved_2d : porous_curved {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_turbulence : porous_curved {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_turbulence : porous_curved_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_thermal : porous_curved {
  label="Variable Heat Rate Curved Porous Medium";
  sublabel0="Variable Heat Rate Porous Medium";
  sublabel1="Curved";
  fields = [
    field b_inertial_res {},
    move field temperature,
    field temperature {
      flags-=FIELD_HIDDEN;
    },
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    },
    field constant_volumetric_heat_input {
      label="Constant Volumetric Heat Input";
      short_label="Q0";
      datatype=FIELD_IS_UVAL;
      unit_class="PowerDensity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field reference_temperature {
      label="Heat Exchanger Fluid Temperature";
      short_label="HE Fluid Temp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
        default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field heating_coefficient {
      label="Heating Rate Coefficient";
      label_w_details="Heating Rate Coefficient (H)";
      short_label="H";
      datatype=FIELD_IS_UVAL;
      unit_class="HeatingCoeff";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field use_dynamic_heat_rate_coefficient {
      label="Use Dynamic Heating Rate Coefficient";
      short_label="Dynamic H";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff_label {
      label="Dynamic Heating Rate Coeficient &nbsp;&nbsp;&nbsp;&nbsp; h = H / (K<sub>c</sub>((1 m/s)/u)<sup>a</sup> +D<sub>h</sub>)";
      datatype=FIELD_IS_LABEL;
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff0 {
      label="Air Convective Heat Resistance Coefficient";
      label_w_details="Air Convective Heat Resistance Coefficient (Kc)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff1 {
      label="Air Convective Exponent";
      label_w_details="Air Convective Exponent (a)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field dyn_hr_coeff2 {
      label="Combined Heat Resistance Coefficient";
      label_w_details="Combined Heat Resistance Coefficient (Dh)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      enabled_if=["use_dynamic_heat_rate_coefficient=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_thermal : porous_curved_thermal {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    },
    field constant_volumetric_heat_input {
      flags+=FIELD_REQUIRED;
      delete default;
    }
  ];
};

parameter_set porous_curved_thermal_turbulence : porous_curved_thermal {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field constant_volumetric_heat_input {
      flags+=FIELD_REQUIRED;
      delete default;
    }
  ];
};

parameter_set porous_curved_2d_thermal_turbulence : porous_curved_thermal_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_fixed_temp : porous_curved {
  label="Prescribed Temp Curved Porous Medium";
  sublabel0="Prescribed Temp Porous Medium";
  sublabel1="Curved";
  fields = [
    field b_inertial_res {},
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    },
    field reference_temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_acoustic : porous_curved {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_acoustic : porous_curved_2d {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_turbulence_acoustic : porous_curved_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_turbulence_acoustic : porous_curved_2d_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set heat_exchanger_curved : heat_exchanger {
  label="Non-Rectangular Heat Exchanger";
  sublabel0="Heat Exchanger";
  sublabel1="Radiator/CAC";
  sublabel2="Non-Rectangular";
  flags+=PSET_NO_USER_MULTI_MODIFY;
  fields = [
    field region {
      label="Geometry";
      label_w_details="Geometry";
      short_label="Region";
      //pfamily_identifier="region";
      flags+=FIELD_NON_RECTANGULAR_MESH_PSET_ONLY|FIELD_NON_RECTANGULAR_MESH_PSET_ALLOWED;
    },
    delete field coord_sys,
    delete field use_local_csys,
    field infinite_yz {
      label="Infinite Resistance in Y and Z";
      short_label="Infinite Y-Z";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    },
    field axis {
      label="Y Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      enabled_if=["infinite_yz=No"];
      indent=1;
      empty_choice_string="[default_csys Y-Axis]";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    },
    field x_axis_face {
      label="Local X Axis Defined by Face";
      short_label="Face";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT|FIELD_HIDDEN;
    },
    delete field flow_face,
    delete field coord_r,
    delete field coord_g,
    delete field coord_b,
    delete field coord_size,
    field flow_face_curved {
      label="Air Flow Inlet Face";
      short_label="Inlet Face";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Front", "Back"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry_curved {
      label="Coolant Entry Face";
      short_label="Coolant Face";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Side A", "Side B", "Side C", "Side C", "Side D", ""];
      enabled_if=["flow_face_curved!="]; // must have *some* value
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry_a {
      label="Coolant Entry Point";
      short_label="Entry Pt";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Corner AB", "Corner AD", ""];
      empty_choice_string=" ";
      visible_if=["coolant_entry_curved=Side A"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry_b {
      label="Coolant Entry Point";
      short_label="Entry Pt";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Corner AB", "Corner BC", ""];
      empty_choice_string=" ";
      visible_if=["coolant_entry_curved=Side B"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry_c {
      label="Coolant Entry Point";
      short_label="Entry Pt";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Corner BC", "Corner CD", ""];
      empty_choice_string=" ";
      visible_if=["coolant_entry_curved=Side C"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coolant_entry_d {
      label="Coolant Entry Point";
      short_label="Entry Pt";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Corner CD", "Corner AD", ""];
      empty_choice_string=" ";
      visible_if=["coolant_entry_curved=Side D"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    delete field coolant_flow,
    delete field coolant_entry,
    field g_divisions {
      label="# Divisions in Coolant Direction";
      short_label="# Flow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
    },
    field b_divisions {
      label="# Divisions across Coolant Direction";
      short_label="# Nonflow Divs.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
    },
    delete field front_offset,
    delete field back_offset,
    field sim_depth {},
    field average_depth {
      label="Avg Depth";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field max_depth_deviation {
      label="Max depth deviation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field average_row_height {
      label="Avg Row Height";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field max_row_height_deviation {
      label="Max height deviation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field inlet_surface_area {
      label="Inlet surface area";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Area";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field coolant_flow_max_angle {
      label="Coolant Flow Max Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field max_curvature {
      label="Max Curvature Inlet and Outlet";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
  dividers = [
    divider div0 {
      label="Basic Parameters";
      first_field="region";
    },
    divider div1 {
      label="Coupling Parameters";
      first_field="thickness";
    }
  ];
};

parameter_set heat_exchanger_curved_turbulence : heat_exchanger_curved {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_multipass_turbulence|heat_exchanger_curved_turbulence|heat_exchanger_multipass_curved_turbulence";
    }
  ];
};


parameter_set heat_exchanger_multipass_curved : heat_exchanger_curved {
  label="Non-Rectangular Multi-Pass Heat Exchanger";
  sublabel0="Heat Exchanger";
  sublabel1="Multi-Pass Radiator/CAC";
  sublabel2="Non-Rectangular";
  fields = [
    delete field num_stages,
    field num_hx_passes {
      label="Number of Passes";
      short_label="# Passes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["2", "3", "4", "5", "6"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field num_tubes_1 { // <joke> Not to be confused with num_trucks </joke>
      label="Number of Divisions in Pass 1";
      short_label="# Divs, Pass 1";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_2 {
      label="Number of Divisions in Pass 2";
      short_label="# Divs, Pass 2";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_3 {
      label="Number of Divisions in Pass 3";
      short_label="# Divs, Pass 3";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>2"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_4 {
      label="Number of Divisions in Pass 4";
      short_label="# Divs, Pass 4";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>3"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_5 {
      label="Number of Divisions in Pass 5";
      short_label="# Divs, Pass 5";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>4"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_6 {
      label="Number of Divisions in Pass 6";
      short_label="# Divs, Pass 6";
      group="Number of Divisions in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_hx_passes>5"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    }
  ];
};

parameter_set heat_exchanger_multipass_curved_turbulence : heat_exchanger_multipass_curved {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_multipass_turbulence|heat_exchanger_curved_turbulence|heat_exchanger_multipass_curved_turbulence";
    }
  ];
};

parameter_set heat_exchanger_condenser_curved : heat_exchanger_curved {
  label="Non-Rectangular Condenser";
  sublabel0="Heat Exchanger";
  sublabel1="Condenser";
  sublabel2="Non-Rectangular";
  fields = [
    field coolant_entry_curved {
      label="Refrigerant Entry Face";
      short_label="Refrigerant Entry";
    },
    field coolant_entry_a {
      label="Refrigerant Entry Point";
    },
    field coolant_entry_b {
      label="Refrigerant Entry Point";
    },
    field coolant_entry_c {
      label="Refrigerant Entry Point";
    },
    field coolant_entry_d {
      label="Refrigerant Entry Point";
    },
    delete field num_stages,
    field num_passes {
      label="Number of Passes";
      short_label="# Passes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["1", "2", "3", "4", "5", "6", "7", "8"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field num_tubes_1 { // <joke> Not to be confused with num_trucks </joke>
      label="Number of Tubes in Pass 1";
      short_label="# Tubes, Pass 1";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_2 {
      label="Number of Tubes in Pass 2";
      short_label="# Tubes, Pass 2";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes!=1"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_3 {
      label="Number of Tubes in Pass 3";
      short_label="# Tubes, Pass 3";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>2"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_4 {
      label="Number of Tubes in Pass 4";
      short_label="# Tubes, Pass 4";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>3"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_5 {
      label="Number of Tubes in Pass 5";
      short_label="# Tubes, Pass 5";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>4"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_6 {
      label="Number of Tubes in Pass 6";
      short_label="# Tubes, Pass 6";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>5"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_7 {
      label="Number of Tubes in Pass 7";
      short_label="# Tubes, Pass 7";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>6"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field num_tubes_8 {
      label="Number of Tubes in Pass 8";
      short_label="# Tubes, Pass 8";
      group="Number of Tubes in Each Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["num_passes>7"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_IS_INTEGER;
    },
    field upstream_exchanger {
      flags+=FIELD_HIDDEN;
    },
    delete field flow_percent,
    field start_time {
      delete enabled_if;
    },
    field period {
      delete enabled_if;
    },
    field interval {
      delete enabled_if;
    },
    field iterations {
      delete enabled_if;
    },
    delete field exchanger_type,
    delete field specific_heat,
    delete field coolant_viscosity,
    delete field coolant_thermal_conductivity,
    delete field scaled_sandwich_kh,
    delete field scaled_sandwich_beta,
    delete field scaled_sandwich_alpha,
    delete field scaled_sandwich_d,
    delete field sim_height,
    delete field sim_width,
    delete field sim_depth,
    field mass_flow_rate {
      label="Refrigerant Mass Flow Rate";
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    delete field use_heat_rejection,
    field heat_rejection {
      delete indent;
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    field entry_temperature {
      label="Refrigerant Entry Temperature";
      delete indent;
      delete enabled_if;
      default="Chosen by PowerFLOW";
      flags-=FIELD_REQUIRED;
    },
    field refrigerant_pressure {
      label="Refrigerant Pressure at Inlet";
      short_label="Inlet P";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="Chosen by PowerFLOW";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field refrigerant_pressure_drop {
      label="Refrigerant Pressure Drop";
      short_label="P Drop";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="Chosen by PowerFLOW";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field degree_of_subcooling {
      label="Degree of Subcooling";
      short_label="Subcooling";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="Chosen by PowerFLOW";
    },
    field refrigerant_fluid {
      label="Refrigerant Fluid";
      short_label="Fluid";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["R134a"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field exchanger_data {
      label="Condenser Data";
      default="Built-in generic data";
      flags-=FIELD_REQUIRED;
    },
    field exchanger_data_abs {
      label="Full Condenser Data";
    },
    field launch_exchanger_data {
      label="View Condenser Data";
    },
    field launch_sandwich_graph {
      delete enabled_if;
    },
    delete field interpolation_method,
    delete field use_sutherland_correction,
    delete field experiment_temperature,
    delete field launch_nu_graph
  ];
  dividers = [
    divider div0 {
      label="Basic Parameters";
      first_field="region";
    },
    divider div1 {
      label="Coupling Parameters";
      first_field="thickness";
    }
  ];
};

parameter_set heat_exchanger_condenser_curved_turbulence : heat_exchanger_condenser_curved {
  fields = [
    field show_decorations {},
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field upstream_exchanger {
      pset_identifier="heat_exchanger_turbulence|heat_exchanger_curved_turbulence";
    }
  ];
};

parameter_set porous_curved_2d_fixed_temp : porous_curved_fixed_temp {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_adiabatic : porous_curved {
  label="Adiabatic Curved Porous Medium";
  sublabel0="Adiabatic Porous Medium";
  sublabel1="Curved";
  fields = [
    field b_inertial_res {},
    move field temperature,
    field temperature {
      flags-=FIELD_HIDDEN;
    },
    field resistance_temperature {
      label="Resistance Reference Temperature";
      short_label="Res. Ref. T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      enabled_if=["auto_calc_resistances=No"];
    }
  ];
};

parameter_set porous_curved_adiabatic_acoustic : porous_curved_adiabatic {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_adiabatic : porous_curved_adiabatic {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_2d_adiabatic_acoustic : porous_curved_2d_adiabatic {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_fixed_temp_turbulence : porous_curved_fixed_temp {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_fixed_temp_turbulence : porous_curved_fixed_temp_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_adiabatic_turbulence : porous_curved_adiabatic {
  fields = [
    field turb_profile {
      label="Turbulence Initial Conditions Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field turb_intensity {
      label="Initial Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_length_scale {
      label="Initial Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_kinetic_energy {
      label="Initial Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field turb_dissipation {
      label="Initial Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_adiabatic_turbulence_acoustic : porous_curved_adiabatic_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set porous_curved_2d_adiabatic_turbulence : porous_curved_adiabatic_turbulence {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    },
    field r_axis_z {
      default="0.0";
    },
    field g_axis_x {
      default="0.0";
    },
    field g_axis_y {
      default="0.0";
    },
    field g_axis_z {
      default="0.0";
    },
    field infinite_yz {
      label="Infinite Resistance in Y";
      short_label="Infinite Y";
    },
    field axis {
      flags+=FIELD_HIDDEN;
    },
    field b_viscous_res {
      flags+=FIELD_HIDDEN;
    },
    field b_inertial_res {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set porous_curved_2d_adiabatic_turbulence_acoustic : porous_curved_2d_adiabatic_turbulence {
  label="Acoustic Porous Medium";
  sublabel0="Acoustic Porous Medium";
  sublabel1="Curved";
  available_if=["simopts.mach_regime!=Low"];
  secondary_group="fluid_solid_porous_group";
  fields = [
    field nu_over_t {},
    field porosity {
      label="Acoustic Porosity";
      label_w_details="Acoustic Porosity (between 0 and 1)";
      short_label="Porosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field tortuosity {
      label="Tortuosity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set solid {
  label="Solid";
  fields = [
    // A solid's a solid: there are no parameters!
    // User would apply solid parameter if he wants to avoid having to attach
    // surface physics to faces of a part; just applying solid parameter is
    // equivalent to applying the default surface physics (as determined by the
    // simulation model) to all faces of the region.
    // If the user applies surface physics to any face of a region, it's not
    // necessary to apply solid to the region (but OK if he does).  During case prep,
    // one of the checks done is to verify that for any region that has surface physics
    // applied to one or more faces, that no fluid/solid parameter set other than solid
    // was applied to that region.  If surface physics is applied to some but not all
    // faces, the remaining faces default to the default surface physics.
    field region {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    }
  ];
};

parameter_set rotating_tire : solid {
  label = "Rotating Tire";
  fields = [
    field rotation_def_via {
      label="Rotation defined Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Reference Frame", "Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field reference_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      pset_identifier="rotating_ref_frame";
      visible_if=["rotation_def_via==Reference Frame"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field angular_velocity {
      label="Angular Velocity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      default="0";
      visible_if=["rotation_def_via==Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field rotation_axis {
      label="Rotation Axis";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Compute Rotation Axis", "SECONDARY VALUE"];
      visible_if=["rotation_def_via==Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_rotation_axis {
      label="Secondary Rotation Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field compute_axis_dir {
      label="Compute Rotation Axis Direction from Geometry";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_x {
      label="Rotation Axis Direction X";
      unique_label="Rotation Axis Direction X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Rotation Axis Direction X :: label:=Rotation Axis Direction X"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_y {
      label="Rotation Axis Direction Y";
      unique_label="Rotation Axis Direction Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Rotation Axis Direction Y :: label:=Rotation Axis Direction Y"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_z {
      label="Rotation Axis Direction Z";
      unique_label="Rotation Axis Direction Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Rotation Axis Direction Z :: label:=Rotation Axis Direction Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field compute_axis_origin {
      label="Compute Rotation Axis Origin from Geometry";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_x {
      label="Rotation Axis Origin X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis && compute_axis_origin==No"];
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_y {
      label="Rotation Axis Origin Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis && compute_axis_origin==No"];
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_z {
      label="Rotation Axis Origin Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis && compute_axis_origin==No"];
      visible_if=["rotation_def_via==Specified Below && rotation_axis==Compute Rotation Axis"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field computed_axis {
      label="Computed Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_HIDDEN;
    },
    // The deforming tire feature will not be supported in F25, hide these two field for now
    field deforming_tire {
      label="Deforming Tire";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field average_mea_across {
      label="Average Measurements Across Deformed Facets";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      indent=1;
      enabled_if=["deforming_tire==Yes"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set fluid_solid_none {
  label="[None]";
  fields = [
    field region {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    }
  ];
};

// Parameter sets for the surface physics family.
// See also the comments for the "solid" parameter set.

parameter_set noslip {
  label="Wall";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Adiabatic";
  flags=PSET_NO_USER_COPY|PSET_UPDATE_ON_SMD_CHANGE|PSET_ALLOW_INCOMPLETE;
  fields = [
    // No parameters required for a no-slip surface!
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field surface_material {
      label="Surface Material (Particle Modeling)";
      short_label="Surf Mat";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface_materials_family";
      visible_if=["simopts.particle_tracking_sim_option==Yes && #surface_materials_family!=0"];
      empty_choice_string="[default surface material]";
      flags=FIELD_INPUT;
    },
    field condensable_surface {
      label="Condensable Surface";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field initial_film_thickness {
      label="Initial Film Thickness";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="0";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["condensable_surface=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set auto_slip : noslip {
  fields = [
    field roughness {
      label="Surface Roughness Char Height";
      short_label="Roughness";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="0 (smooth)";
      // Question: do we allow time varying?  Sure, why not.
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field char_length {
      label="Wall Model Char Length";
      short_label="Wall Model Char Length";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="characteristic_length";
      // Question: do we allow time varying?  No.
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_34_STATE_ONLY;
    },
    field boundary_layer_type {
      label="Boundary Layer Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Automatic", "Fully Turbulent", "Laminar"];
      visible_if=["simopts.sim_method_is_turb_model_sim_option==Yes && simopts.enable_boundary_layer_transition==Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set frictionless_wall {
  label="Frictionless Wall";
  sublabel0="Wall";
  sublabel1="Frictionless Wall";
  sublabel2="Adiabatic";
  short_label="Fricless Wall";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    // No parameters required for a frictionless wall.
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field surface_material
    {
      label="Surface Material (Particle Modeling)";
      short_label="Surf Mat";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface_materials_family";
      visible_if=["simopts.particle_tracking_sim_option==Yes && #surface_materials_family!=0"];
      flags=FIELD_INPUT;
    },
    field condensable_surface {
      label="Condensable Surface";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field initial_film_thickness {
      label="Initial Film Thickness";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="0";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["condensable_surface=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set const_slip : auto_slip {
  label="Selectable Wall";
  sublabel0="Wall";
  sublabel1="Selectable Wall";
  sublabel2="Adiabatic";
  short_label="Sel Wall";
  fields = [
    field secondary_ref_frame {},
    field k_f {
      label="Friction Coefficient";
      short_label="k_f";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      // Question: do we allow time varying?  Simulator disallows this currently.
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};


// ----------------------------- Begin Inlets --------------------------------- //


parameter_set pressure_velocity_inlet {
  label="Inlet: Pressure and Velocity";
  sublabel0="Inlet";
  sublabel1="Pressure and Velocity";
  short_label="Press. and Vel. Inlet";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field pressure {
      label="Pressure";
      short_label="p";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="characteristic_pressure";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field x_velocity {
      label="X Velocity";
      short_label="Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field y_velocity {
      label="Y Velocity";
      short_label="Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field z_velocity {
      label="Z Velocity";
      short_label="Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field far_field_conditions {
      label="Far Field Boundary Condition";
      datatype=FIELD_IS_CHECK_BOX;
      default="No";
      visible_if=["simopts.mach_regime!=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set pressure_velocity_2d_inlet : pressure_velocity_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set pressure_velocity_turbulence_inlet : pressure_velocity_inlet {
  fields = [
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set pressure_velocity_2d_turbulence_inlet : pressure_velocity_turbulence_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set pressure_velocity_Tfixed_inlet : pressure_velocity_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set pressure_velocity_2d_Tfixed_inlet : pressure_velocity_Tfixed_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set pressure_velocity_Tfixed_turbulence_inlet : pressure_velocity_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set pressure_velocity_2d_Tfixed_turbulence_inlet : pressure_velocity_Tfixed_turbulence_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set static_pressure_fixed_inlet {
  label="Inlet: Static Pressure";
  sublabel0="Inlet";
  sublabel1="Static Pressure";
  short_label="Static Press. Inlet";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field pressure {
      label="Pressure";
      short_label="p";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="characteristic_pressure";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field unit_vec_x {
      label="X Component of Flow Direction";
      short_label="Dir x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field unit_vec_y {
      label="Y Component of Flow Direction";
      short_label="Dir y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field unit_vec_z {
      label="Z Component of Flow Direction";
      short_label="Dir z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set static_pressure_fixed_2d_inlet : static_pressure_fixed_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set static_pressure_fixed_turbulence_inlet : static_pressure_fixed_inlet {
  fields = [
    field unit_vec_z {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set static_pressure_fixed_2d_turbulence_inlet : static_pressure_fixed_turbulence_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set static_pressure_fixed_Tfixed_inlet : static_pressure_fixed_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set static_pressure_fixed_2d_Tfixed_inlet : static_pressure_fixed_Tfixed_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set static_pressure_fixed_Tfixed_turbulence_inlet : static_pressure_fixed_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set static_pressure_fixed_2d_Tfixed_turbulence_inlet : static_pressure_fixed_Tfixed_turbulence_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set stag_pressure_fixed_inlet : static_pressure_fixed_inlet {
  label="Inlet: Total Pressure";
  sublabel0="Inlet";
  sublabel1="Total Pressure";
  short_label="Total Press. Inlet";
  fields = [
    field coord_sys {},
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
};

parameter_set stag_pressure_fixed_2d_inlet : stag_pressure_fixed_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set stag_pressure_fixed_turbulence_inlet : stag_pressure_fixed_inlet {
  fields = [
    field unit_vec_z {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set stag_pressure_fixed_2d_turbulence_inlet : stag_pressure_fixed_turbulence_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set stag_pressure_fixed_Tfixed_inlet : stag_pressure_fixed_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set stag_pressure_fixed_2d_Tfixed_inlet : stag_pressure_fixed_Tfixed_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set stag_pressure_fixed_Tfixed_turbulence_inlet : stag_pressure_fixed_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set stag_pressure_fixed_2d_Tfixed_turbulence_inlet : stag_pressure_fixed_Tfixed_turbulence_inlet {
  fields = [
    field unit_vec_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set mass_flux_inlet {
  label="Inlet: Mass Flux";
  sublabel0="Inlet";
  sublabel1="Mass Flux";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field x_mass_flux {
      label="X Mass Flux";
      short_label="MFlux x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MassFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field y_mass_flux {
      label="Y Mass Flux";
      short_label="MFlux y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MassFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field z_mass_flux {
      label="Z Mass Flux";
      short_label="MFlux z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MassFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field use_reflection_damping {
      label = "Use Reflection Damping (mass flux might vary from setting above)";
      short_label = "Use Reflection Damping";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    }
  ];
};

parameter_set mass_flux_2d_inlet : mass_flux_inlet {
  fields = [
    field z_mass_flux {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set mass_flux_turbulence_inlet : mass_flux_inlet {
  fields = [
    field temperature {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set mass_flux_2d_turbulence_inlet : mass_flux_turbulence_inlet {
  fields = [
    field z_mass_flux {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set mass_flux_Tfixed_inlet : mass_flux_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set mass_flux_2d_Tfixed_inlet : mass_flux_Tfixed_inlet {
  fields = [
    field z_mass_flux {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set mass_flux_Tfixed_turbulence_inlet : mass_flux_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set mass_flux_2d_Tfixed_turbulence_inlet : mass_flux_Tfixed_turbulence_inlet {
  fields = [
    field z_mass_flux {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      default="0.0";
    }
  ];
};

parameter_set mass_flow_inlet {
  label="Inlet: Mass Flow";
  sublabel0="Inlet";
  sublabel1="Mass Flow";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field mass_flow {
      label="Mass Flow";
      short_label="MFlow";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MassFlow";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field use_reflection_damping {
      label = "Use Reflection Damping (mass flow might vary from setting above)";
      short_label = "Use Reflection Damping";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    }
  ];
};

parameter_set mass_flow_2d_inlet : mass_flow_inlet {};

parameter_set mass_flow_turbulence_inlet : mass_flow_inlet {
  fields = [
    field temperature {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set mass_flow_2d_turbulence_inlet : mass_flow_turbulence_inlet {};

parameter_set mass_flow_Tfixed_inlet : mass_flow_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set mass_flow_2d_Tfixed_inlet : mass_flow_Tfixed_inlet {};

parameter_set mass_flow_Tfixed_turbulence_inlet : mass_flow_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set mass_flow_2d_Tfixed_turbulence_inlet : mass_flow_Tfixed_turbulence_inlet {};

parameter_set fixed_velocity_inlet {
  label="Inlet: Velocity";
  sublabel0="Inlet";
  sublabel1="Velocity";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field x_velocity {
      label="X Velocity";
      short_label="Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field y_velocity {
      label="Y Velocity";
      short_label="Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field z_velocity {
      label="Z Velocity";
      short_label="Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set fixed_velocity_2d_inlet : fixed_velocity_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set fixed_velocity_turbulence_inlet : fixed_velocity_inlet {
  fields = [
    field temperature {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set fixed_velocity_2d_turbulence_inlet : fixed_velocity_turbulence_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set fixed_velocity_Tfixed_inlet : fixed_velocity_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set fixed_velocity_2d_Tfixed_inlet : fixed_velocity_Tfixed_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set fixed_velocity_Tfixed_turbulence_inlet : fixed_velocity_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set fixed_velocity_2d_Tfixed_turbulence_inlet : fixed_velocity_Tfixed_turbulence_inlet {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set transient_velocity_inlet {
label="Inlet: Transient Velocity from Upstream Turbulence";
  sublabel0="Inlet";
  sublabel1="Transient Velocity from Upstream Turbulence";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      init_val="Global Body-Fixed";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field x_velocity {
      label="Mean X Velocity";
      short_label="Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field y_velocity {
      label="Mean Y Velocity";
      short_label="Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field z_velocity {
      label="Mean Z Velocity";
      short_label="Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field humidity_content_via {
      label="Humidity Content Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Relative Humidity", "Water Vapor Mass Fraction"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field relative_humidity {
      label="Relative Humidity (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Relative Humidity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field water_vapor_mass_fraction {
      label="Water Vapor Mass Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      visible_if=["simopts.water_vapor_transport=Yes"];
      enabled_if=["humidity_content_via=Water Vapor Mass Fraction"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_velocity_fluctuations {
      label="Resolved Turbulence Fluctuations";
      short_label="R Turb Fluc";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set transient_velocity_Tfixed_inlet : transient_velocity_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

parameter_set transient_velocity_turbulence_inlet : transient_velocity_inlet {
  fields = [
    field turbulence_model_label {
      label="Turbulence Model:";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set transient_velocity_Tfixed_turbulence_inlet : transient_velocity_turbulence_inlet {
  fields = [
    field temperature {
      flags-=FIELD_HIDDEN;
    }
  ];
};

// ------------------------------- End Inlets --------------------------------- //

// ----------------------------- Begin Outlets -------------------------------- //

parameter_set pressure_velocity_outlet : pressure_velocity_inlet {
  label="Outlet: Pressure and Velocity";
  sublabel0="Outlet";
  sublabel1="Pressure and Velocity";
  short_label="Press. and Vel. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set pressure_velocity_2d_outlet : pressure_velocity_2d_inlet {
  label="Outlet: Pressure and Velocity";
  sublabel0="Outlet";
  sublabel1="Pressure and Velocity";
  short_label="Press. and Vel. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set pressure_velocity_turbulence_outlet : pressure_velocity_turbulence_inlet {
  label="Outlet: Pressure and Velocity";
  sublabel0="Outlet";
  sublabel1="Pressure and Velocity";
  short_label="Press. and Vel. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set pressure_velocity_2d_turbulence_outlet : pressure_velocity_2d_turbulence_inlet {
  label="Outlet: Pressure and Velocity";
  sublabel0="Outlet";
  sublabel1="Pressure and Velocity";
  short_label="Press. and Vel. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set pressure_velocity_Tfloat_outlet : pressure_velocity_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set pressure_velocity_2d_Tfloat_outlet : pressure_velocity_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set pressure_velocity_Tfloat_turbulence_outlet : pressure_velocity_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set pressure_velocity_2d_Tfloat_turbulence_outlet : pressure_velocity_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set static_pressure_fixed_outlet : static_pressure_fixed_inlet {
  label="Outlet: Static Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Static Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Static Press. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set static_pressure_fixed_2d_outlet : static_pressure_fixed_2d_inlet {
  label="Outlet: Static Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Static Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Static Press. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set static_pressure_fixed_turbulence_outlet : static_pressure_fixed_turbulence_inlet {
  label="Outlet: Static Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Static Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Static Press. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set static_pressure_fixed_2d_turbulence_outlet : static_pressure_fixed_2d_turbulence_inlet {
  label="Outlet: Static Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Static Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Static Press. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set static_pressure_fixed_Tfloat_outlet : static_pressure_fixed_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set static_pressure_fixed_2d_Tfloat_outlet : static_pressure_fixed_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set static_pressure_fixed_Tfloat_turbulence_outlet : static_pressure_fixed_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set static_pressure_fixed_2d_Tfloat_turbulence_outlet : static_pressure_fixed_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set static_pressure_free_outlet {
  label="Outlet: Static Pressure, Free Flow Direction";
  sublabel0="Outlet";
  sublabel1="Static Pressure";
  sublabel2="Free Flow Direction";
  short_label="Static Press. Outlet";
  flags=PSET_NO_USER_COPY|PSET_ALLOW_INCOMPLETE;
  fields = [
    field face {
      label="Geometry";
      datatype=FIELD_IS_GEOMETRY_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field pressure {
      label="Pressure";
      short_label="p";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      default="characteristic_pressure";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field use_reflection_damping {
      label="Use Reflection Damping";
      short_label="Refl. Damping";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["!use_active_scalar || use_active_scalar=No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_19_STATE_ONLY;
    },
    field distance_to_reflecting_surface {
      label="Distance to Reflecting Surface";
      short_label="Dist. to Refl. Surface";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["use_reflection_damping=Yes && (!use_active_scalar || use_active_scalar==No)"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY;
    },
    field user_specified_response_time {
      label="User Specified Response Time";
      short_label="User Specified Response Time";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field response_time {
      label="Boundary Response Time";
      short_label="Response Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["user_specified_response_time=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set static_pressure_free_turbulence_outlet : static_pressure_free_outlet {
  fields = [
    field temperature {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    }
  ];
};

parameter_set static_pressure_free_Tfloat_outlet : static_pressure_free_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set static_pressure_free_Tfloat_turbulence_outlet : static_pressure_free_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set stag_pressure_fixed_outlet : stag_pressure_fixed_inlet {
  label="Outlet: Total Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Total Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Total Press. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set stag_pressure_fixed_2d_outlet : stag_pressure_fixed_2d_inlet {
  label="Outlet: Total Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Total Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Total Press. Outlet";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set stag_pressure_fixed_turbulence_outlet : stag_pressure_fixed_turbulence_inlet {
  label="Outlet: Total Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Total Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Total Press. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set stag_pressure_fixed_2d_turbulence_outlet : stag_pressure_fixed_2d_turbulence_inlet {
  label="Outlet: Total Pressure, Prescribed Flow Direction";
  sublabel0="Outlet";
  sublabel1="Total Pressure";
  sublabel2="Prescribed Flow Direction";
  short_label="Total Press. Outlet";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set stag_pressure_fixed_Tfloat_outlet : stag_pressure_fixed_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set stag_pressure_fixed_2d_Tfloat_outlet : stag_pressure_fixed_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set stag_pressure_fixed_Tfloat_turbulence_outlet : stag_pressure_fixed_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set stag_pressure_fixed_2d_Tfloat_turbulence_outlet : stag_pressure_fixed_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set stag_pressure_free_outlet : static_pressure_free_outlet {
  label="Outlet: Total Pressure, Free Flow Direction";
  sublabel0="Outlet";
  sublabel1="Total Pressure";
  sublabel2="Free Flow Direction";
  short_label="Total Press. Outlet";
  fields = [
    field face {},
    field ref_frame {
      label="With Respect to Reference Frame";
      short_label="Ref Frame";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Enclosing Body-Fixed", "Global Body-Fixed", "Ground-Fixed (inertial)", "SECONDARY VALUE"];
      visible_if=["#ni_ref_frames!=0"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD;
    },
    field secondary_ref_frame {
      label="Secondary Reference Frame";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="ni_ref_frames";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    delete field use_reflection_damping,
    delete field distance_to_reflecting_surface
  ];
};

parameter_set stag_pressure_free_turbulence_outlet : stag_pressure_free_outlet {
  fields = [
    field temperature {},
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_HIDDEN;
    }
  ];
};

parameter_set stag_pressure_free_Tfloat_outlet : stag_pressure_free_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set stag_pressure_free_Tfloat_turbulence_outlet : stag_pressure_free_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set mass_flux_outlet : mass_flux_inlet{
  label="Outlet: Mass Flux";
  sublabel0="Outlet";
  sublabel1="Mass Flux";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flux_2d_outlet : mass_flux_2d_inlet {
  label="Outlet: Mass Flux";
  sublabel0="Outlet";
  sublabel1="Mass Flux";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flux_turbulence_outlet : mass_flux_turbulence_inlet {
  label="Outlet: Mass Flux";
  sublabel0="Outlet";
  sublabel1="Mass Flux";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flux_2d_turbulence_outlet : mass_flux_2d_turbulence_inlet {
  label="Outlet: Mass Flux";
  sublabel0="Outlet";
  sublabel1="Mass Flux";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flux_Tfloat_outlet : mass_flux_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set mass_flux_2d_Tfloat_outlet : mass_flux_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set mass_flux_Tfloat_turbulence_outlet : mass_flux_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set mass_flux_2d_Tfloat_turbulence_outlet : mass_flux_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set mass_flow_outlet : mass_flow_inlet {
  label="Outlet: Mass Flow";
  sublabel0="Outlet";
  sublabel1="Mass Flow";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flow_2d_outlet : mass_flow_2d_inlet {
  label="Outlet: Mass Flow";
  sublabel0="Outlet";
  sublabel1="Mass Flow";
};

parameter_set mass_flow_turbulence_outlet : mass_flow_turbulence_inlet {
  label="Outlet: Mass Flow";
  sublabel0="Outlet";
  sublabel1="Mass Flow";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flow_2d_turbulence_outlet : mass_flow_2d_turbulence_inlet {
  label="Outlet: Mass Flow";
  sublabel0="Outlet";
  sublabel1="Mass Flow";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set mass_flow_Tfloat_outlet : mass_flow_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set mass_flow_2d_Tfloat_outlet : mass_flow_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set mass_flow_Tfloat_turbulence_outlet : mass_flow_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set mass_flow_2d_Tfloat_turbulence_outlet : mass_flow_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set fixed_velocity_outlet : fixed_velocity_inlet {
  label="Outlet: Velocity";
  sublabel0="Outlet";
  sublabel1="Velocity";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set fixed_velocity_2d_outlet : fixed_velocity_2d_inlet {
  label="Outlet: Velocity";
  sublabel0="Outlet";
  sublabel1="Velocity";
  fields = [
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set fixed_velocity_turbulence_outlet : fixed_velocity_turbulence_inlet {
  label="Outlet: Velocity";
  sublabel0="Outlet";
  sublabel1="Velocity";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set fixed_velocity_2d_turbulence_outlet : fixed_velocity_2d_turbulence_inlet {
  label="Outlet: Velocity";
  sublabel0="Outlet";
  sublabel1="Velocity";
  fields = [
    field turb_profile {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field turb_intensity {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_length_scale {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_kinetic_energy {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    field turb_dissipation {
      flags-=FIELD_TIME_VARYING_ALLOWED;
      flags+=FIELD_HIDDEN;
    },
    delete field humidity_content_via,
    delete field relative_humidity,
    delete field water_vapor_mass_fraction
  ];
};

parameter_set fixed_velocity_Tfloat_outlet : fixed_velocity_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set fixed_velocity_2d_Tfloat_outlet : fixed_velocity_2d_outlet {
  fields = [
    delete field temperature
  ];
};

parameter_set fixed_velocity_Tfloat_turbulence_outlet : fixed_velocity_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

parameter_set fixed_velocity_2d_Tfloat_turbulence_outlet : fixed_velocity_2d_turbulence_outlet {
  fields = [
    delete field temperature,
    delete field turb_intensity,
    delete field turb_length_scale,
    delete field turb_kinetic_energy,
    delete field turb_dissipation
  ];
};

// ----------------------------- End Outlets -------------------------------- //


parameter_set linear_auto_slip : auto_slip {
  label="Sliding Wall";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Adiabatic";
  fields = [
    field roughness {
      flags+=FIELD_19_STATE_ONLY;
    },
    field face {},
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field secondary_ref_frame {},
    field x_velocity {
      label="X Velocity";
      short_label="Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="characteristic_velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field y_velocity {
      label="Y Velocity";
      short_label="Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field z_velocity {
      label="Z Velocity";
      short_label="Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0.0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set velocity_auto_slip : auto_slip {
  label="Velocity Wall";
  sublabel0="Wall";
  sublabel1="Velocity Wall";
  sublabel2="Adiabatic";
  flags=PSET_NO_USER_COPY|PSET_UPDATE_ON_SMD_CHANGE|PSET_ALLOW_INCOMPLETE;
  fields = [
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wall_motion_via {
      label="Specify Wall Motion Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Rigid Body Motion", "Arbitrary Velocity Distribution"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field arb_vel_x {
      label="Velocity X";
      short_label="X Vel.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      indent=1;
      visible_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      enabled_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field arb_vel_y {
      label="Velocity Y";
      short_label="Y Vel.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      indent=1;
      visible_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      enabled_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field arb_vel_z {
      label="Velocity Z";
      short_label="Z Vel.";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      indent=1;
      visible_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      enabled_if=["wall_motion_via==Arbitrary Velocity Distribution"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }, 
    field ref_point_pos {
      label="Reference Point Position";
      short_label="Ref Point";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field ref_point_vel_x {
      label="Reference Point Velocity X";
      short_label="Ref Point Vx";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_vel_y {
      label="Reference Point Velocity Y";
      short_label="Ref Point Vy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_vel_z {
      label="Reference Point Velocity Z";
      short_label="Ref Point Vz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_x {
      label="Angular Velocity X";
      short_label="Ang. Vel. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_y {
      label="Angular Velocity Y";
      short_label="Ang. Vel. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_z {
      label="Angular Velocity Z";
      short_label="Ang. Vel. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      visible_if=["wall_motion_via==Rigid Body Motion"];
      enabled_if=["wall_motion_via==Rigid Body Motion"];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set velocity_auto_slip_2d : velocity_auto_slip {
  fields = [
    field arb_vel_z {
      flags+=FIELD_HIDDEN;
    },
    field ref_point_vel_z {
      flags+=FIELD_HIDDEN;
    },
    field angular_vel_x {
      flags+=FIELD_HIDDEN;
    },
    field angular_vel_y {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set velocity_noslip : velocity_auto_slip {
  fields = [
    delete field roughness,
    delete field char_length,
    delete field boundary_layer_type
  ];
};

parameter_set velocity_noslip_2d : velocity_noslip {
  fields = [
    field arb_vel_z {
      flags+=FIELD_HIDDEN;
    },
    field ref_point_vel_z {
      flags+=FIELD_HIDDEN;
    },
    field angular_vel_x {
      flags+=FIELD_HIDDEN;
    },
    field angular_vel_y {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set linear_auto_slip_2d : linear_auto_slip {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set linear_noslip : linear_auto_slip {
  fields = [
    delete field roughness,
    delete field char_length,
    delete field boundary_layer_type
  ];
};

parameter_set linear_noslip_2d : linear_noslip {
  fields = [
    field z_velocity {
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set angular_auto_slip : auto_slip {
  label="Rotating Wall";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Adiabatic";
  fields = [
    field roughness {
      flags+=FIELD_19_STATE_ONLY;
    },
    field secondary_ref_frame {},
    field angular_velocity {
      label="Angular Velocity";
      short_label="Ang Vel";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field axis {
      label="Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field unit_vec_x {
      label="X Component of Axis Direction";
      short_label="Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field unit_vec_y {
      label="Y Component of Axis Direction";
      short_label="Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field unit_vec_z {
      label="Z Component of Axis Direction";
      short_label="Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    // Points are no longer allowed to be space/time varying, because CPC has to offset
    // from coordinate origin.
    field point_x {
      label="X Component of Axis Origin";
      short_label="Axis Ox";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED;
    },
    field point_y {
      label="Y Component of Axis Origin";
      short_label="Axis Oy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED;
    },
    field point_z {
      label="Z Component of Axis Origin";
      short_label="Axis Oz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set angular_auto_slip_2d : angular_auto_slip {};

parameter_set angular_noslip : angular_auto_slip {
  fields = [
    delete field roughness,
    delete field char_length,
    delete field boundary_layer_type
  ];
};

parameter_set angular_noslip_2d : angular_noslip {};

//--------------------BEGIN thermal stuff fixed temp----------------------------->
parameter_set noslip_fixed_temp : noslip {
  label="Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set auto_slip_fixed_temp : auto_slip {
  label="Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field secondary_ref_frame {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set frictionless_wall_fixed_temp : frictionless_wall {
  label="Frictionless Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Frictionless Wall";
  sublabel2="Prescribed Temperature";
  short_label="Fricless Wall";
  fields = [
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set frictionless_wall_turbulence_fixed_temp : frictionless_wall_fixed_temp {};

parameter_set const_slip_fixed_temp : const_slip {
  label="Selectable Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Selectable Wall";
  sublabel2="Prescribed Temperature";
  short_label="Sel Wall";
  fields = [
    field k_f {
      // Question: do we allow time varying?  Simulator disallows this currently.
      flags+=FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_auto_slip_fixed_temp : linear_auto_slip {
  label="Sliding Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field z_velocity {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_auto_slip_2d_fixed_temp : linear_auto_slip_2d {
  label="Sliding Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field z_velocity {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_noslip_fixed_temp : linear_noslip {
  label="Sliding Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field z_velocity {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_noslip_2d_fixed_temp : linear_noslip_2d {
  label="Sliding Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field z_velocity {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_auto_slip_fixed_temp : angular_auto_slip {
  label="Rotating Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field point_z {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set angular_auto_slip_2d_fixed_temp : angular_auto_slip_fixed_temp {};

parameter_set angular_noslip_fixed_temp : angular_noslip {
  label="Rotating Wall, Prescribed Temperature";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Prescribed Temperature";
  fields = [
    field point_z {},
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_noslip_2d_fixed_temp : angular_noslip_fixed_temp {};

//--------------------END thermal stuff fixed temp------------------------------<


//--------------------BEGIN thermal stuff thermal resistance----------------------------->

parameter_set noslip_thermal_resist : noslip {
  label="Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set auto_slip_thermal_resist : auto_slip {
  label="Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field secondary_ref_frame {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set frictionless_wall_thermal_resist : frictionless_wall {
  label="Frictionless Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Frictionless Wall";
  sublabel2="Thermal Resistance";
  short_label="Fricless Wall";
  fields = [
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set frictionless_wall_turbulence_thermal_resist : frictionless_wall_thermal_resist {};

parameter_set const_slip_thermal_resist : const_slip {
  label="Selectable Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Selectable Wall";
  sublabel2="Thermal Resistance";
  short_label="Sel Wall";
  fields = [
    field k_f {
      // Question: do we allow time varying?  Simulator disallows this currently.
      flags+=FIELD_TIME_VARYING_ALLOWED;
    },
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_auto_slip_thermal_resist : linear_auto_slip {
  label="Sliding Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field z_velocity {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_auto_slip_2d_thermal_resist : linear_auto_slip_2d {
  label="Sliding Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field z_velocity {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_noslip_thermal_resist : linear_noslip {
  label="Sliding Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field z_velocity {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_noslip_2d_thermal_resist : linear_noslip_2d {
  label="Sliding Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field z_velocity {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_auto_slip_thermal_resist : angular_auto_slip {
  label="Rotating Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field point_z {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set angular_auto_slip_2d_thermal_resist : angular_auto_slip_thermal_resist {};

parameter_set angular_noslip_thermal_resist : angular_noslip {
  label="Rotating Wall, Thermal Resistance";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Thermal Resistance";
  fields = [
    field point_z {},
    field temperature {
      label="Ambient Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_thickness {
      label="Wall Thickness";
      short_label="Thickness";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_conductivity {
      label="Wall Heat Conductivity";
      short_label="Conductivity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="ThermalConductivity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field heat_xfer_coeff {
      label="Exterior Heat Transfer Coefficient";
      short_label="HTC (Exterior)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="HeatTransferCoeff";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_noslip_2d_thermal_resist : angular_noslip_thermal_resist {};

//--------------------END thermal stuff thermal resistance----------------------------->


//--------------------BEGIN thermal stuff fixed heat flux----------------------------->
parameter_set noslip_fixed_flux : noslip {
  label="Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set auto_slip_fixed_flux : auto_slip {
  label="Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field secondary_ref_frame {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set frictionless_wall_fixed_flux : frictionless_wall {
  label="Frictionless Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Frictionless Wall";
  sublabel2="Prescribed Heat Flux";
  short_label="Fricless Wall";
  fields = [
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set frictionless_wall_turbulence_fixed_flux : frictionless_wall_fixed_flux {};

parameter_set const_slip_fixed_flux : const_slip {
  label="Selectable Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Selectable Wall";
  sublabel2="Prescribed Heat Flux";
  short_label="Sel Wall";
  fields = [
    field k_f {
      // Question: do we allow time varying?  Simulator disallows this currently.
      flags-=FIELD_TIME_VARYING_ALLOWED;
    },
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_auto_slip_fixed_flux : linear_auto_slip {
  label="Sliding Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field z_velocity {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_auto_slip_2d_fixed_flux : linear_auto_slip_2d {
  label="Sliding Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field z_velocity {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set linear_noslip_fixed_flux : linear_noslip {
  label="Sliding Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field z_velocity {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set linear_noslip_2d_fixed_flux : linear_noslip_2d {
  label="Sliding Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field z_velocity {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_auto_slip_fixed_flux : angular_auto_slip {
  label="Rotating Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field point_z {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    delete field boundary_layer_type
  ];
};

parameter_set angular_auto_slip_2d_fixed_flux : angular_auto_slip_fixed_flux {};

parameter_set angular_noslip_fixed_flux : angular_noslip {
  label="Rotating Wall, Prescribed Heat Flux";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Prescribed Heat Flux";
  fields = [
    field point_z {},
    field wall_heat_flux {
      label="Wall Heat Flux";
      short_label="Q''";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="WallHeatFlux";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set angular_noslip_2d_fixed_flux : angular_noslip_fixed_flux {};

//--------------------END thermal stuff fixed flux------------------------------<

//--------------------BEGIN coupled surface----------------------------->

parameter_set noslip_coupled_surface : noslip {
  label="Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Coupled Surface";
};

parameter_set auto_slip_coupled_surface : auto_slip {
  label="Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Standard Wall";
  sublabel2="Coupled Surface";
  fields = [
    delete field boundary_layer_type
  ];
};

parameter_set frictionless_wall_coupled_surface : frictionless_wall {
  label="Frictionless Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Frictionless Wall";
  sublabel2="Coupled Surface";
  short_label="Fricless Wall";
};

parameter_set const_slip_coupled_surface : const_slip {
  label="Selectable Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Selectable Wall";
  sublabel2="Coupled Surface";
  short_label="Sel Wall";
};

parameter_set linear_noslip_coupled_surface : linear_noslip {
  label="Sliding Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Coupled Surface";
};

parameter_set linear_noslip_2d_coupled_surface : linear_noslip_2d {
  label="Sliding Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Coupled Surface";
};

parameter_set linear_auto_slip_coupled_surface : linear_auto_slip {
  label="Sliding Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Coupled Surface";
  fields = [
    delete field boundary_layer_type
  ];
};

parameter_set linear_auto_slip_2d_coupled_surface : linear_auto_slip_2d {
  label="Sliding Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Sliding Wall";
  sublabel2="Coupled Surface";
  fields = [
    delete field boundary_layer_type
  ];
};

parameter_set angular_noslip_coupled_surface : angular_noslip {
  label="Rotating Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Coupled Surface";
};

parameter_set angular_noslip_2d_coupled_surface : angular_noslip_2d {
  label="Rotating Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Coupled Surface";
};

parameter_set angular_auto_slip_coupled_surface : angular_auto_slip {
  label="Rotating Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Coupled Surface";
  fields = [
    delete field boundary_layer_type
  ];
};

parameter_set angular_auto_slip_2d_coupled_surface : angular_auto_slip_2d {
  label="Rotating Wall, Coupled Surface";
  sublabel0="Wall";
  sublabel1="Rotating Wall";
  sublabel2="Coupled Surface";
  fields = [
    delete field boundary_layer_type
  ];
};

//--------------------END coupled surface------------------------------<


parameter_set unconstrained {
  label="Unconstrained";
  fields = [
    field face {
      label="Face";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field temperature {
      label="Temperature";
      short_label="T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};


parameter_set unconstrained_turbulence : unconstrained {
  fields = [
    field turb_profile {
      label="Turbulence Profile Via";
      short_label="Turb Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Turbulence Intensity", "Turbulence Kinetic Energy", "Extrapolated"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field turb_intensity {
      label="Turbulence Intensity";
      short_label="Turb I";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_turb_intensity";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_length_scale {
      label="Turbulence Length Scale";
      short_label="Turb L";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="default_turb_length_scale";
      enabled_if=["turb_profile=Turbulence Intensity"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="VelocitySqrd";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field turb_dissipation {
      label="Turbulence Dissipation";
      short_label="Turb Dissipation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TurbulenceDissipation";
      enabled_if=["turb_profile=Turbulence Kinetic Energy"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};



// Parameter sets for the measurement family.

parameter_set standard_face_meas {
  label="Standard Measurements By Face";
  short_label="Std Meas By Face";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS|PSET_ALLOW_INCOMPLETE;
  fields = [
    field window_name {
      label="Window Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field face {
      label="Faces";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED;
    },
    field timing_controls {
      label="Timing Controls";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field end_time_via {
      label="End Time Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Start + (Min Cycles / Min Freq)", "Specified Below"];
      visible_if=["timing_controls==Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["timing_controls==Standard || end_time_via==Specified Below"];
      setvalue_expr=["timing_controls==Standard ?? indent:=0 :: indent:=1"];
      default="last timestep";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    // The num_frames field is a hidden field which is only ever used for measurements
    // that are auto-generated for heat exchangers (set to the value specified
    // for "Number of Iterations").
    field num_frames {
      label="Number of Frames";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_HIDDEN|FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field min_frequency {
      label="Min Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      default_if=["timing_controls==Acoustics", "no minimum"];
      visible_if=["timing_controls=Acoustics"];
    },
    field max_frequency {
      label="Max Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field min_cycles {
      label="Min Number of Cycles";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="5";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field nyquist_multiplier {
      label="Nyquist Multiplier";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="2";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field periodAcoustics {
      label="Period";
      datatype=FIELD_IS_STRING;
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
      visible_if=["timing_controls=Acoustics"];
      default="1 / (Max Freq * Nyquist Mult)";
    },
    field period {
      label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Standard"];
    },
    field period_sync_group {
      label="Period Synchronization Group";
      short_label="Sync. Group";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="period_sync_groups";
      flags=FIELD_INPUT|FIELD_HAS_PSET_CONTROLS;
    },
    field round_period {
      label="Round Period";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Closest", "Down"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field exclude_coarse_levels {
      label="Exclude Grid Levels Whose Timesteps Exceed Period";
      short_label="Excl. Coarse Levels";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["round_period=Down"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="same as period";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field average_vectors_enclosingframe {
      label="Average Vectors in Enclosing Body-Fixed Reference Frame";
      short_label="Avg Vecs in Encl RF";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["#ni_ref_frames!=0"];
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field use_input_mesh {
      label="Use Input Mesh Elements as Meas Surfels";
      short_label="Use Input Mesh";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field width {
      label="Linear Width of Measurement Cell";
      short_label="Width";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["use_input_mesh=No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field file_per_frame {
      label="Separate File per Frame";
      short_label="File per Frame";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field separate_particle_variables {
      label="Separate Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Per Particle Material", "Per Emitter"];
      init_val="Per Particle Material";
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field measurement_precision {
      label="Precision";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single", "Double"];
      visible_if=["simopts.solver_is_single_precision_sim_option==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
      default="Single";
      init_val="Single";
    },
    field surface_variables {
      label="Surface Variables";
      unique_label="Surface:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      group="Group 4";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_defrost_time {
      label="Defrost Time";
      unique_label="Fluid:Custom:Defrost Time";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_dens {
      label="Density";
      unique_label="Surface:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_force {
      label="Force";
      unique_label="Surface:Custom:Force";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_variables==Custom"];
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_mass_flux {
      label="Mass Flux";
      unique_label="Surface:Custom:Mass Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_press {
      label="Pressure";
      unique_label="Surface:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar==Yes) ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_std_dev_press {
      label="Std Dev Pressure";
      unique_label="Surface:Custom:Std Dev Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_std_dev_vel {
      label="Std Dev Velocity";
      unique_label="Surface:Custom:Std Dev Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_std_dev_vel_mag {
      label="Std Dev Velocity Magnitude";
      unique_label="Surface:Custom:Std Dev Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_vel {
      label="Velocity";
      unique_label="Surface:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Surface:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wf_thickness {
      label="Water Film Thickness";
      unique_label="Fluid:Custom:Water Film Thickness";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wv_mass_frac {
      label="Water Vapor Mass Fraction";
      unique_label="Fluid:Custom:Water Vapor Mass Fraction";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wv_mass_flux {
      label="Water Vapor Mass Flux";
      unique_label="Fluid:Custom:Water Vapor Mass Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_press { // obsolete
      label="Surface Pressure only";
      short_label="Press";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      group="Group 4";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_press_and_vel { // obsolete
      label="Surface Pressure and Velocity Magnitude only";
      short_label="Press and Vel";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      group="Group 4";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field surface_particle_variables {
      label="Surface Particle Variables";
      unique_label="Surface:Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? None"];
      collapsible_choices=["Custom"];
      init_val="None";
      group="Group 4";
      indent=0;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_particle_film_persist {
      label = "Film Persistence (Fraction of Time with Film Present)";
      unique_label = "Surface:Particle Custom:Film Persistence";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["surface_particle_variables==Custom"];
      setvalue_expr = ["surface_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_stress{
      label="Film Stress";
      unique_label="Surface:Particle Custom:Film Stress";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_thickness {
      label="Film Thickness";
      unique_label="Surface:Particle Custom:Film Thickness";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_velocity {
      label="Film Velocity";
      unique_label="Surface:Particle Custom:Film Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_velocity_mag {
      label="Film Velocity Magnitude";
      unique_label="Surface:Particle Custom:Film Velocity Mag";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_dens_inbound {
      label="Mean Particle Density - Inbound";
      unique_label="Surface:Particle Custom:Mean Particle Dens - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_dens_outbound {
      label="Mean Particle Density - Outbound";
      unique_label="Surface:Particle Custom:Mean Particle Dens - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_diam_inbound {
      label="Mean Particle Diameter - Inbound";
      unique_label="Surface:Particle Custom:Mean Particle Diam - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_diam_outbound {
      label="Mean Particle Diameter - Outbound";
      unique_label="Surface:Particle Custom:Mean Particle Diam - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_force {
      label="Particle Force";
      unique_label="Surface:Particle Custom:Particle Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_impulse {
      label="Particle Impulse";
      unique_label="Surface:Particle Custom:Particle Impulse";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mass_rate_inbound {
      label="Particle Mass Rate - Inbound";
      unique_label="Surface:Particle Custom:Particle Mass Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mass_rate_outbound {
      label="Particle Mass Rate - Outbound";
      unique_label="Surface:Particle Custom:Particle Mass Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_rate_inbound {
      label="Particle Rate - Inbound";
      unique_label="Surface:Particle Custom:Particle Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_rate_outbound {
      label="Particle Rate - Outbound";
      unique_label="Surface:Particle Custom:Particle Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// direct, thermal
parameter_set standard_plus_heatflux_face_meas : standard_face_meas {
  fields = [
    field surface_variables {},
    field heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Standard:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Standard:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_force {},
    field surface_options_custom_heat_flux {
      label="Heat Flux";
      short_label="H Flux";
      unique_label="Surface:Custom:Heat Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_mass_flux {},
    field surface_options_custom_std_dev_vel_mag {},
    field surface_options_custom_wf_thickness {},
    field surface_options_custom_wv_mass_frac {},
    field surface_options_custom_wv_mass_flux {},
    field surface_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Surface:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {
      label="Thermal Y+";
      short_label="Y+";
      unique_label="Surface:Custom:Thermal Y+";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && (surface_options_custom_thermal_yplus==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set standard_plus_turb_and_heatflux_face_meas : standard_plus_heatflux_face_meas {
  fields = [
    field heat_xfer_coeffs {},
    field htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Standard:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Standard"];
      enabled_if=["heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {},
    field surface_options_custom_htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Custom:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom"];
      enabled_if=["surface_options_custom_heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {},
    field surface_options_custom_turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      unique_label="Surface:Custom:Turbulence Kinetic Energy";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && (surface_options_custom_turb_kinetic_energy==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, isothermal
parameter_set standard_plus_heat_coeff_face_meas : standard_plus_heatflux_face_meas {
  fields = [
    field heat_xfer_coeffs {
      visible_if=["surface_variables==Standard"];
    },
    field heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && surface_variables==Standard"];
    },
    delete field surface_options_custom_heat_flux,
    field surface_options_custom_heat_xfer_coeffs {
      visible_if=["surface_variables==Custom"];
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && surface_variables==Custom"];
    },
    field surface_options_custom_std_dev_vel_mag {},
    delete field surface_options_custom_wf_thickness,
    delete field surface_options_custom_wv_mass_frac,
    delete field surface_options_custom_wv_mass_flux,
    field surface_options_custom_turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      unique_label="Surface:Custom:Turbulence Kinetic Energy";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_variables==Custom && (surface_options_custom_turb_kinetic_energy==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    delete field surface_options_custom_temp,
    delete field surface_options_custom_thermal_yplus
  ];
};

parameter_set standard_meas : standard_face_meas {
  label="Standard Measurements By Region";
  short_label="Std Meas By Region";
  fields = [
    delete field face,
    field region {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_NON_RECTANGULAR_MESH_PSET_ALLOWED;
    },
    field interval {},
    field average_vectors_enclosingframe {},
    field building_block {
      label="Measurement Cell Building Block Width";
      short_label="Building Block Width";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["2 Voxels", "1 Voxel"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field width {
      enabled_if=[]; // Always enabled
      indent=0;
    },
    field measurement_precision {},
    field fluid_measurements {
      label="Fluid Measurements";
      short_label="Fluid Meas";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_variables {
      label="Fluid Variables";
      unique_label="Fluid:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      visible_if=["fluid_measurements==Yes"];
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_dens {
      label="Density";
      unique_label="Fluid:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_press_and_vel {
      label="Fluid Pressure and Velocity Magnitude only";
      short_label="Press and Vel";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      group="Group 2";
      indent=1;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_press {
      label="Fluid Pressure only";
      short_label="Press";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      group="Group 2";
      indent=1;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_press {
      label="Pressure";
      unique_label="Fluid:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar==Yes) ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_press {
      label="Std Dev Pressure";
      unique_label="Fluid:Custom:Std Dev Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel {
      label="Std Dev Velocity";
      unique_label="Fluid:Custom:Std Dev Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel_mag {
      label="Std Dev Velocity Magnitude";
      unique_label="Fluid:Custom:Std Dev Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel {
      label="Velocity";
      unique_label="Fluid:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Fluid:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {
      label="Water Vapor Mass Fraction";
      unique_label="Fluid:Custom:Water Vapor Mass Fraction";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_particle_variables {
      label="Fluid Particle Variables";
      unique_label="Fluid:Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      init_val="None";
      visible_if=["fluid_measurements==Yes && simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? None"];
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_particle_mean_particle_dens {
      label="Mean Particle Density";
      unique_label="Fluid:Particle Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_diam {
      label="Mean Particle Diameter";
      unique_label="Fluid:Particle Custom:Diameter";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
      field fluid_options_custom_particle_mean_surface_area{
      label = "Mean Particle Surface Area";
      unique_label = "Fluid:Particle Custom:Mean Surface Area";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 2;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
      field fluid_options_custom_particle_mean_particle_velocity{
      label="Mean Particle Velocity";
      unique_label="Fluid:Particle Custom:Mean Particle Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_volume {
      label="Mean Particle Volume";
      unique_label="Fluid:Particle Custom:Mean Volume";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_force {
      label="Particle Force";
      unique_label="Fluid:Particle Custom:Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mass {
      label="Particle Mass";
      unique_label="Fluid:Particle Custom:Mass";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_number {
      label="Particle Number";
      unique_label="Fluid:Particle Custom:Number";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_forces {
      label="Fan and Porous Media Measurements";
      short_label="Fan + Porous Med Meas";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field body_variables {
      label="Fan & Porous Variables";
      unique_label="Porous:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      visible_if=["body_forces=Yes"];
      group="Group 3";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field body_options_custom_dens {
      label="Density";
      unique_label="Porous:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_force {
      label="Force";
      unique_label="Porous:Custom:Force";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_forces=Yes && body_variables==Custom"];
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press {
      label="Pressure";
      unique_label="Porous:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar=Yes) ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_std_dev_press {
      label="Std Dev Pressure";
      unique_label="Porous:Custom:Std Dev Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_std_dev_vel {
      label="Std Dev Velocity";
      unique_label="Porous:Custom:Std Dev Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_std_dev_vel_mag {
      label="Std Dev Velocity Magnitude";
      unique_label="Porous:Custom:Std Dev Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel {
      label="Velocity";
      unique_label="Porous:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Porous:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_measurements {
      label="Surface Measurements";
      short_label="Surface Meas";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field surface_variables {
      visible_if=["surface_measurements==Yes"];
      indent=1;
      flags+=FIELD_MINOR;
    },
    field surface_options_custom_defrost_time {
      visible_if=["surface_measurements==Yes && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      indent=2;
    },
    field surface_options_custom_dens {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_force {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_mass_flux {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_press {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_std_dev_press {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_std_dev_vel {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_std_dev_vel_mag {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_vel {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_vel_mag {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_wf_thickness {
      visible_if=["surface_measurements==Yes && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      indent=2;
    },
    field surface_options_custom_wv_mass_frac {
      visible_if=["surface_measurements==Yes && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      indent=2;
    },
    field surface_options_custom_wv_mass_flux {
      visible_if=["surface_measurements==Yes && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      indent=2;
    },
    field surface_particle_variables {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_measurements==Yes"];
      indent=1;
      flags+=FIELD_MINOR;
    },
    field surface_options_custom_particle_film_persist {
      visible_if = ["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent = 2;
    },
    field surface_options_custom_particle_film_stress{
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_film_thickness {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_film_velocity {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_film_velocity_mag {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mean_particle_dens_inbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mean_particle_dens_outbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mean_particle_diam_inbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mean_particle_diam_outbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_force {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_impulse {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mass_rate_inbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_mass_rate_outbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_rate_inbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field surface_options_custom_particle_rate_outbound {
      visible_if=["surface_measurements==Yes && surface_particle_variables==Custom"];
      indent=2;
    },
    field div_u_measurements {
      label="Divergence of Velocity";
      short_label="DivU";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

// direct, thermal
parameter_set standard_plus_heatflux_meas : standard_meas {
  fields = [
    field fluid_options_custom_std_dev_vel_mag {},
    field fluid_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Fluid:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_force {},
    field body_options_custom_heat_generation {
      // Heat generation is reported with a different label in SRI/PowerVIZ --
      // "Volumetric Heat Generation".. In PowerCASE the word "volumetric" is 
      // redundant and unnecessary. In VIZ, the extra word is helpful because of
      // the way that fluid & surface variables are often interleaved. We do 
      // something similar with the "Force" variable ("Fluid Force" or "Surface
      // Force" in SRI/PowerVIZ).
      label="Heat Generation";
      label_w_details="Heat Generation";
      short_label="H Generation";
      unique_label="Porous:Custom:Heat Generation";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press {},
    field body_options_custom_std_dev_vel_mag {},
    field body_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Porous:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? (body_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel {},
    field surface_variables {},
    field heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Standard:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Standard:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_force {},
    field surface_options_custom_heat_flux {
      label="Heat Flux";
      short_label="H Flux";
      unique_label="Surface:Custom:Heat Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_mass_flux {},
    field surface_options_custom_std_dev_vel_mag {},
    field surface_options_custom_wf_thickness {},
    field surface_options_custom_wv_mass_frac {},
    field surface_options_custom_wv_mass_flux {},
    field surface_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Surface:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {
      label="Thermal Y+";
      short_label="Y+";
      unique_label="Surface:Custom:Thermal Y+";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["(surface_measurements==Yes && surface_variables==Custom) && (surface_options_custom_thermal_yplus==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=2;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set standard_plus_turb_and_heatflux_meas : standard_plus_heatflux_meas {
  fields = [
    field fluid_variables {},
    field turbulence_info {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Standard:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Standard"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_dens {},
    field surface_options_custom_defrost_time {},
    field fluid_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Fluid:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel_mag {},
    field fluid_options_custom_swirl {
      label="Swirl";
      unique_label="Fluid:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_temp {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {},
    field fluid_options_custom_vor {
      label="Vorticity";
      unique_label="Fluid:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Fluid:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_measurements==Yes && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {},
    field body_variables {},
    field body_options_standard_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Porous:Standard:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces==Yes && body_variables==Standard"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_heat_generation{},
    field body_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Porous:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press{},
    field body_options_custom_swirl {
      label="Swirl";
      unique_label="Porous:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_temp {},
    field body_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Porous:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel_mag{},
    field body_options_custom_vor {
      label="Vorticity";
      unique_label="Porous:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Porous:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces=Yes && body_variables==Custom"];
      setvalue_expr=["body_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field heat_xfer_coeffs {},
    field htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Standard:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Standard"];
      enabled_if=["heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=3;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {},
    field surface_options_custom_htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Custom:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
      enabled_if=["surface_options_custom_heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=3;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_std_dev_vel_mag {},
    field surface_options_custom_wf_thickness {},
    field surface_options_custom_wv_mass_frac {},
    field surface_options_custom_wv_mass_flux {},
    field surface_options_custom_thermal_yplus {},
    field surface_options_custom_turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      unique_label="Surface:Custom:Turbulence Kinetic Energy";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom && (surface_options_custom_turb_kinetic_energy==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=2;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, isothermal
parameter_set standard_plus_turb_and_heat_coeff_meas : standard_plus_turb_and_heatflux_meas {
  fields = [
    delete field fluid_options_custom_temp,
    delete field surface_options_custom_defrost_time,
    delete field body_options_custom_heat_generation,
    delete field body_options_custom_temp,
    field heat_xfer_coeffs {
      visible_if=["surface_measurements==Yes && surface_variables==Standard"];
    },
    delete field htc_for_adiabatic_walls,
    field heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && surface_measurements==Yes && surface_variables==Standard"];
    },
    delete field surface_options_custom_heat_flux,
    field surface_options_custom_heat_xfer_coeffs {
      visible_if=["surface_measurements==Yes && surface_variables==Custom"];
    },
    delete field surface_options_custom_htc_for_adiabatic_walls,
    field surface_options_custom_heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && surface_measurements==Yes && surface_variables==Custom"];
    },
    field surface_options_custom_std_dev_vel_mag {},
    delete field surface_options_custom_wf_thickness,
    delete field surface_options_custom_wv_mass_frac,
    delete field surface_options_custom_wv_mass_flux,
    field surface_options_custom_turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      unique_label="Surface:Custom:Turbulence Kinetic Energy";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && surface_variables==Custom && (surface_options_custom_turb_kinetic_energy==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=2;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    delete field surface_options_custom_temp,
    delete field surface_options_custom_thermal_yplus
  ];
};

parameter_set sampled_face_meas : standard_face_meas {
  label="Sampled Face Measurement";
  short_label="Sampled Face Meas";
  fields = [
    field interval {},
    field average_vectors_enclosingframe {},
    // "partition_face" field has been pushed off, probably to release 4.1  -  PV 4/14/06
    //field partition_face {
    //  label="Partition Face Into Disjoint Sections";
    //  short_label="Partition Face";
    //  datatype=FIELD_IS_CHECK_BOX;
    //  default="Yes";
    //  flags=FIELD_INPUT|FIELD_REQUIRED;
    //},
    field measurement_precision {},
    field fluid_variables {
      label="Fluid Variables";
      unique_label="Fluid:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      init_val="None";
      group="Group 1";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_dens {
      label="Density";
      unique_label="Fluid:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_press_and_vel {
      label="Fluid Pressure and Velocity Magnitude only";
      short_label="Press and Vel";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 2";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_press {
      label="Fluid Pressure only";
      short_label="Press";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 2";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_mass_flux {
      label="Mass Flux";
      unique_label="Fluid:Custom:Mass Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_press {
      label="Pressure";
      unique_label="Fluid:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar==Yes) ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_press {
      label="Std Dev Pressure";
      unique_label="Fluid:Custom:Std Dev Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel {
      label="Std Dev Velocity";
      unique_label="Fluid:Custom:Std Dev Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel_mag {
      label="Std Dev Velocity Magnitude";
      unique_label="Fluid:Custom:Std Dev Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel {
      label="Velocity";
      unique_label="Fluid:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Fluid:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {
      label="Water Vapor Mass Fraction";
      unique_label="Fluid:Custom:Water Vapor Mass Fraction";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_particle_variables {
      label="Fluid Particle Variables";
      unique_label="Fluid:Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? None"];
      init_val="None";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_particle_mean_particle_dens {
      label = "Mean Particle Density";
      unique_label = "Fluid:Particle Custom:Mean Particle Density";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_diam {
      label = "Mean Particle Diameter";
      unique_label = "Fluid:Particle Custom:Mean Particle Diameter";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_surface_area {
      label = "Mean Particle Surface Area";
      unique_label = "Fluid:Particle Custom:Mean Surface Area";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_velocity {
      label = "Mean Particle Velocity";
      unique_label = "Fluid:Particle Custom:Mean Particle Velocity";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_volume {
      label = "Mean Particle Volume";
      unique_label = "Fluid:Particle Custom:Mean Volume";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mass_flux {
      label = "Particle Mass Flux";
      unique_label = "Fluid:Particle Custom:Mass Flux";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
      field fluid_options_custom_particle_flux {
      label = "Particle Flux";
      unique_label = "Fluid:Particle Custom:Flux";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    //field screen_custom_variables_label {
    //  label = "Screen Variables:";
    //  datatype = FIELD_IS_LABEL;
    //  visible_if = ["fluid_particle_variables==Custom"];
    //  flags = FIELD_REQUIRED | FIELD_LABEL_BOLD | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    //},
    field fluid_options_custom_particle_mean_particle_dens_inbound {
      label="Mean Particle Density - Inbound";
      unique_label="Fluid:Particle Custom:Density - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_dens_outbound {
      label="Mean Particle Density - Outbound";
      unique_label="Fluid:Particle Custom:Density - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_diam_inbound {
      label="Mean Particle Diameter - Inbound";
      unique_label="Fluid:Particle Custom:Diameter - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_diam_outbound {
      label="Mean Particle Diameter - Outbound";
      unique_label="Fluid:Particle Custom:Mean Particle Diameter - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_surface_area_inbound {
      label = "Mean Particle Surface Area - Inbound";
      unique_label = "Fluid:Particle Custom:Surface Area - Inbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_surface_area_outbound {
      label = "Mean Particle Surface Area - Outbound";
      unique_label = "Fluid:Particle Custom:Mean Particle Surface Area - Outbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_velocity_inbound {
      label = "Mean Particle Velocity - Inbound";
      unique_label = "Fluid:Particle Custom:Velocity - Inbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_velocity_outbound {
      label = "Mean Particle Velocity - Outbound";
      unique_label = "Fluid:Particle Custom:Mean Particle Velocity - Outbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_volume_inbound{
      label = "Mean Particle Volume - Inbound";
      unique_label = "Fluid:Particle Custom:Volume - Inbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_volume_outbound{
      label = "Mean Particle Volume - Outbound";
      unique_label = "Fluid:Particle Custom:Mean Particle Volume - Outbound";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
    field fluid_options_custom_particle_mass_rate_inbound{
      label="Particle Mass Rate - Inbound";
      unique_label="Fluid:Particle Custom:Mass Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mass_rate_outbound {
      label="Particle Mass Rate - Outbound";
      unique_label="Fluid:Particle Custom:Mass Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_rate_inbound {
      label="Particle Rate - Inbound";
      unique_label="Fluid:Particle Custom:Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_rate_outbound {
      label="Particle Rate - Outbound";
      unique_label="Fluid:Particle Custom:Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    // End Deprecated
    delete field surface_options_press,
    delete field surface_options_press_and_vel,
    delete field surface_variables,
    delete field surface_options_custom_defrost_time,
    delete field surface_options_custom_dens,
    delete field surface_options_custom_vel,
    delete field surface_options_custom_std_dev_vel,
    delete field surface_options_custom_vel_mag,
    delete field surface_options_custom_std_dev_vel_mag,
    delete field surface_options_custom_press,
    delete field surface_options_custom_std_dev_press,
    delete field surface_options_custom_mass_flux,
    delete field surface_options_custom_force,
    delete field surface_options_custom_wf_thickness,
    delete field surface_options_custom_wv_mass_frac,
    delete field surface_options_custom_wv_mass_flux,
    delete field surface_particle_variables,
    delete field surface_options_custom_particle_film_persist,
    delete field surface_options_custom_particle_film_stress,
    delete field surface_options_custom_particle_film_thickness,
    delete field surface_options_custom_particle_film_velocity,
    delete field surface_options_custom_particle_film_velocity_mag,
    delete field surface_options_custom_particle_mean_particle_dens_inbound,
    delete field surface_options_custom_particle_mean_particle_dens_outbound,
    delete field surface_options_custom_particle_mean_particle_diam_inbound,
    delete field surface_options_custom_particle_mean_particle_diam_outbound,
    delete field surface_options_custom_particle_force,
    delete field surface_options_custom_particle_impulse,
    delete field surface_options_custom_particle_mass_rate_inbound,
    delete field surface_options_custom_particle_mass_rate_outbound,
    delete field surface_options_custom_particle_rate_inbound,
    delete field surface_options_custom_particle_rate_outbound
  ];
};

// direct, thermal
parameter_set sampled_plus_thermal_face_meas : sampled_face_meas {
  fields = [
    field fluid_options_custom_std_dev_vel_mag {},
    field fluid_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Fluid:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set sampled_plus_turb_and_thermal_face_meas : sampled_plus_thermal_face_meas {
  fields = [
    field fluid_variables {},
    field turbulence_info {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Standard:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Standard"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_temp {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {}
  ];
};

// turb, isothermal
parameter_set sampled_plus_turb_face_meas : sampled_face_meas {
  fields = [
    field fluid_variables {},
    field turbulence_info {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Standard:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Standard"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_std_dev_vel_mag {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

parameter_set probe {
  label="Probe";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field window_name {
      label="Window Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field point {
      label="Point";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field timing_controls {
      label="Timing Controls";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field end_time_via {
      label="End Time Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Start + (Min Cycles / Min Freq)", "Specified Below"];
      visible_if=["timing_controls==Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      indent=1;
      enabled_if=["timing_controls==Standard || end_time_via==Specified Below"];
      setvalue_expr=["timing_controls==Standard ?? indent:=0 :: indent:=1"];
      default="last timestep";
    },
    field min_frequency {
      label="Min Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      default_if=["timing_controls==Acoustics", "no minimum"];
      visible_if=["timing_controls=Acoustics"];
    },
    field max_frequency {
      label="Max Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field min_cycles {
      label="Min Number of Cycles";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="5";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field nyquist_multiplier {
      label="Nyquist Multiplier";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="2";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field period {
      label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Standard"];
      default="1 timestep";
    },
    field period_sync_group {
      label="Period Synchronization Group";
      short_label="Sync. Group";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="period_sync_groups";
      flags=FIELD_INPUT|FIELD_HAS_PSET_CONTROLS;
    },
    field periodAcoustic {
      label="Period ";
      datatype=FIELD_IS_STRING;
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
      visible_if=["timing_controls=Acoustics"];
      default="1 / (Max Freq * Nyquist Mult)";
    },
    field round_period {
      label="Round Period";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Closest", "Down"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="same as period";
    },
    field average_vectors_enclosingframe {
      label="Average Vectors in Enclosing Body-Fixed Reference Frame";
      short_label="Avg Vecs in Encl RF";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["#ni_ref_frames!=0"];
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    // Period and averaging interval are fixed for probes.,
    field diameter {
      label="Probe Diameter";
      short_label="Diam";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field probe_type {
      label="Probe Type";
      short_label="Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Surface", "Fluid"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field measurement_precision {
      label="Precision";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single", "Double"];
      visible_if=["simopts.solver_is_single_precision_sim_option==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
      default="Single";
      init_val="Single";
    },
    field fluid_variables {
      label="Fluid Variables";
      unique_label="Fluid:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      visible_if=["probe_type==Fluid"];
      init_val="Standard";
      group="Group 1";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_dens {
      label="Density";
      unique_label="Fluid:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_press {
      label="Pressure";
      unique_label="Fluid:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar==Yes) ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel {
      label="Velocity";
      unique_label="Fluid:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Fluid:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {
      label="Water Vapor Mass Fraction";
      unique_label="Fluid:Custom:Water Vapor Mass Fraction";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_particle_variables {
      label="Fluid Particle Variables";
      unique_label="Fluid:Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      enabled_if=["probe_type==Fluid && simopts.particle_tracking_sim_option==Yes"];
      visible_if=["probe_type==Fluid && simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["probe_type==ValueChanged ?? (probe_type==Fluid ?? Standard :: None)"];
      collapsible_choices=["Custom"];
      init_val="None";
      indent=0;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_particle_mean_particle_dens {
      label="Mean Particle Density";
      unique_label="Fluid:Particle Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_particle_diam {
      label="Mean Particle Diameter";
      unique_label="Fluid:Particle Custom:Mean Particle Diameter";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mean_surface_area {
      label="Mean Particle Surface Area";
      unique_label="Fluid:Particle Custom:Mean Surface Area";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
      field fluid_options_custom_particle_mean_particle_velocity {
      label = "Mean Particle Velocity";
      unique_label = "Fluid:Particle Custom:Mean Particle Velocity";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["fluid_particle_variables==Custom"];
      setvalue_expr = ["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_MINOR;
    },
      field fluid_options_custom_particle_mean_volume{
      label="Mean Particle Volume";
      unique_label="Fluid:Particle Custom:Mean Volume";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_force {
      label="Particle Force";
      unique_label="Fluid:Particle Custom:Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_mass {
      label="Particle Mass";
      unique_label="Fluid:Particle Custom:Mass";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_particle_number {
      label="Particle Number";
      unique_label="Fluid:Particle Custom:Number";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["fluid_particle_variables==Custom"];
      setvalue_expr=["fluid_particle_variables==ValueChanged ?? (fluid_particle_variables!=None  ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_variables {
      label="Surface Variables";
      unique_label="Surface:Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      visible_if=["probe_type==Surface"];
      choices=["Standard", "Custom", "None"];
      collapsible_choices=["Custom"];
      init_val="Standard";
      group="Group 4";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_defrost_time {
      label="Defrost Time";
      unique_label="Fluid:Custom:Defrost Time";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_dens {
      label="Density";
      unique_label="Surface:Custom:Density";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_force {
      label="Force";
      unique_label="Surface:Custom:Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      enabled_if=["surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_mass_flux {
      label="Mass Flux";
      unique_label="Surface:Custom:Mass Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_press {
      label="Pressure";
      unique_label="Surface:Custom:Pressure";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal && (simopts.mach_regime!=Low || use_active_scalar==Yes) ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_vel {
      label="Velocity";
      unique_label="Surface:Custom:Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_vel_mag {
      label="Velocity Magnitude";
      unique_label="Surface:Custom:Velocity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wf_thickness {
      label="Water Film Thickness";
      unique_label="Fluid:Custom:Water Film Thickness";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wv_mass_frac {
      label="Water Vapor Mass Fraction";
      unique_label="Fluid:Custom:Water Vapor Mass Fraction";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_wv_mass_flux {
      label="Water Vapor Mass Flux";
      unique_label="Fluid:Custom:Water Vapor Mass Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom && simopts.water_vapor_transport==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && simopts.water_vapor_transport==Yes ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_particle_variables {
      label="Surface Particle Variables";
      unique_label="Surface:Particle Variables";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Custom", "None"];
      enabled_if=["probe_type==Surface && simopts.particle_tracking_sim_option==Yes"];
      visible_if=["probe_type==Surface && simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["probe_type==ValueChanged ?? (probe_type==Surface ?? Standard :: None)"];
      collapsible_choices=["Custom"];
      init_val="None";
      indent=0;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_particle_film_persist {
      label = "Film Persistence (Fraction of Time with Film Present)";
      unique_label = "Surface:Particle Custom:Film Persistence";
      datatype = FIELD_IS_CHECK_BOX;
      visible_if = ["surface_particle_variables==Custom"];
      setvalue_expr = ["surface_particle_variables==ValueChanged ?? No"];
      indent = 1;
      flags = FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_stress {
      label="Film Stress";
      unique_label="Surface:Particle Custom:Film Stress";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_thickness {
      label="Film Thickness";
      unique_label="Surface:Particle Custom:Film Thickness";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_velocity {
      label="Film Velocity";
      unique_label="Surface:Particle Custom:Film Velocity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_film_velocity_mag {
      label="Film Velocity Magnitude";
      unique_label="Surface:Particle Custom:Film Velocity Mag";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_dens_inbound {
      label="Mean Particle Density - Inbound";
      unique_label="Surface:Particle Custom:Mean Particle Dens - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_dens_outbound {
      label="Mean Particle Density - Outbound";
      unique_label="Surface:Particle Custom:Mean Particle Dens - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_diam_inbound {
      label="Mean Particle Diameter - Inbound";
      unique_label="Surface:Particle Custom:Mean Particle Diam - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mean_particle_diam_outbound {
      label="Mean Particle Diameter - Outbound";
      unique_label="Surface:Particle Custom:Mean Particle Diam - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_force {
      label="Particle Force";
      unique_label="Surface:Particle Custom:Particle Force";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_impulse {
      label="Particle Impulse";
      unique_label="Surface:Particle Custom:Particle Impulse";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mass_rate_inbound {
      label="Particle Mass Rate - Inbound";
      unique_label="Surface:Particle Custom:Particle Mass Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_mass_rate_outbound {
      label="Particle Mass Rate - Outbound";
      unique_label="Surface:Particle Custom:Particle Mass Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_rate_inbound {
      label="Particle Rate - Inbound";
      unique_label="Surface:Particle Custom:Particle Rate - Inbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? (surface_particle_variables!=None ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_particle_rate_outbound {
      label="Particle Rate - Outbound";
      unique_label="Surface:Particle Custom:Particle Rate - Outbound";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_particle_variables==Custom"];
      setvalue_expr=["surface_particle_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field probe_options_standard {
      label="Standard";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field probe_options_press {
      label="Pressure only";
      short_label="Press";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field probe_options_press_and_vel {
      label="Pressure and Velocity Magnitude only";
      short_label="Press and Vel";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 1";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set probe_plus_thermal : probe {
  fields = [
    field fluid_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Fluid:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? (fluid_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_variables {},
    field heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Standard:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Standard:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Standard"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_vel_mag {},
    field surface_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Surface:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {
      label="Thermal Y+";
      short_label="Y+";
      unique_label="Surface:Custom:Thermal Y+";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["(probe_type==Surface && surface_variables==Custom) && (surface_options_custom_thermal_yplus==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_press {},
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_flux {
      label="Heat Flux";
      short_label="H Flux";
      unique_label="Surface:Custom:Heat Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      setvalue_expr=["surface_variables==ValueChanged ?? (surface_variables!=None && SMD==thermal ?? Yes :: No)"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

parameter_set probe_plus_turb_and_thermal : probe_plus_thermal {
  fields = [
    field fluid_variables {},
    field turbulence_info {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Standard:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Standard"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_dens {},
    field fluid_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Fluid:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_press {},
    field fluid_options_custom_swirl {
      label="Swirl";
      unique_label="Fluid:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom && simopts.dimensionality_is_2d_sim_option==No"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {},
    field fluid_options_custom_vor {
      label="Vorticity";
      unique_label="Fluid:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Fluid:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Fluid && fluid_variables==Custom"];
      setvalue_expr=["fluid_variables==ValueChanged ?? No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_wv_mass_frac {},
    field heat_xfer_coeffs {},
    field htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Standard:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Standard"];
      enabled_if=["heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_INDEPENDENT_OF_COLLAPSIBLE|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {},
    field surface_options_custom_htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Custom:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom"];
      enabled_if=["surface_options_custom_heat_xfer_coeffs==Yes"];
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {},
    field surface_options_custom_turb_kinetic_energy {
      label="Turbulence Kinetic Energy";
      short_label="Turb KE";
      unique_label="Surface:Custom:Turbulence Kinetic Energy";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["probe_type==Surface && surface_variables==Custom && (surface_options_custom_turb_kinetic_energy==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

parameter_set probe_plus_turb : probe_plus_turb_and_thermal {
  fields = [
    delete field fluid_options_custom_temp,
    field heat_xfer_coeffs {
      visible_if=["probe_type==Surface && surface_variables==Standard"];
    },
    delete field htc_for_adiabatic_walls,
    field heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && probe_type==Surface && surface_variables==Standard"];
    },
    delete field surface_options_custom_temp,
    delete field surface_options_custom_thermal_yplus,
    field surface_options_custom_heat_xfer_coeffs {
      visible_if=["probe_type==Surface && surface_variables==Custom"];
    },
    move field surface_options_custom_turb_kinetic_energy,
    delete field surface_options_custom_htc_for_adiabatic_walls,
    field surface_options_custom_heat_xfer_coeffs_local {
      visible_if=["solver_version==4 && probe_type==Surface && surface_variables==Custom"];
    },
    delete field surface_options_custom_heat_flux
  ];
};

parameter_set composite_force_face_meas : standard_face_meas {
  label="Composite Measurements By Face";
  short_label="Composite Meas By Face";
  fields = [
    delete field use_input_mesh,
    delete field width,
    delete field file_per_frame,
    field screen_invalid {
      label="Screen Invalid Measurements";
      short_label="Screen Invalid";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min_cp_range {
      label="Min Cp of Valid Range";
      short_label="Min Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_cp_range {
      label="Max Cp of Valid Range";
      short_label="Max Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field measurement_precision {},
    move field surface_options_custom_force,
    field surface_options_custom_force {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
      delete indent;
      flags-=FIELD_MINOR;
    },
    field surface_options_custom_torque {
      label="Calculate Moments";
      short_label="Calc. Moments";
      unique_label="Surface:Custom:Calculate Moments";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      enabled_if=["surface_options_custom_force=Yes"];
      visible_if=["surface_options_custom_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field default_reference_point {
      label="Default Reference Point";
      short_label="Ref. Point";
      unique_label="Surface:Default Reference Point";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      enabled_if=["surface_options_custom_force=Yes && surface_options_custom_torque=Yes"];
      visible_if=["surface_options_custom_force=Yes && surface_options_custom_torque=Yes"];
      indent=2;
      empty_choice_string="[default_csys origin]";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    delete field surface_variables,
    field surface_options_other_variables {
      label="Other Variables";
      short_label="Others";
      unique_label="Surface:Other Variables";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_defrost_time {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes && simopts.water_vapor_transport==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_dens {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_vel {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_vel_mag {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_press {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_press { // obsolete
      enabled_if=["surface_options_other_variables==Yes"];
      delete visible_if;
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_press_and_vel { // obsolete
      enabled_if=["surface_options_other_variables==Yes"];
      delete visible_if;
      delete setvalue_expr;
      indent=1;
    },
    delete field surface_options_custom_std_dev_press,
    delete field surface_options_custom_std_dev_vel,
    delete field surface_options_custom_std_dev_vel_mag,
    field surface_options_custom_mass_flux {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_wf_thickness {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes && simopts.water_vapor_transport==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_wv_mass_frac {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes && simopts.water_vapor_transport==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field surface_options_custom_wv_mass_flux {
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes && simopts.water_vapor_transport==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    delete field surface_particle_variables,
    field surface_options_particle_variables {
      label="Particle Variables";
      short_label="Particle Variables";
      unique_label="Surface:Options Particle Variables";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_particle_film_persist {
      enabled_if = ["surface_options_particle_variables==Yes"];
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_film_stress{
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_film_thickness {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_film_velocity {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_film_velocity_mag {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mean_particle_dens_inbound {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mean_particle_dens_outbound {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mean_particle_diam_inbound {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mean_particle_diam_outbound {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_impulse {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_force {
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mass_rate_inbound {
      label="Particle Mass Rate - Inbound";
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_mass_rate_outbound {
      label="Particle Mass Rate - Outbound";
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_rate_inbound {
      label="Particle Rate - Inbound";
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field surface_options_custom_particle_rate_outbound {
      label="Particle Rate - Outbound";
      enabled_if=["surface_options_particle_variables==Yes"];
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    }
  ];
};

// direct, thermal
parameter_set composite_force_plus_thermal_face_meas : composite_force_face_meas {
  fields = [
    field surface_options_custom_vel_mag {},
    field surface_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Surface:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {
      label="Thermal Y+";
      short_label="Y+";
      unique_label="Surface:Custom:Thermal Y+";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables==Yes && (surface_options_custom_thermal_yplus==Yes || simopts.expose_adv_meas_vars==Yes)"];
      indent=1;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_press {},
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_flux {
      label="Heat Flux";
      short_label="H Flux";
      unique_label="Surface:Custom:Heat Flux";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set composite_force_plus_turb_and_thermal_face_meas : composite_force_plus_thermal_face_meas {
  fields = [
    field surface_options_custom_heat_xfer_coeffs {},
    field surface_options_custom_htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Custom:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_options_other_variables=Yes"];
      enabled_if=["surface_options_other_variables==Yes && surface_options_custom_heat_xfer_coeffs==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, isothermal
parameter_set composite_force_plus_turb_face_meas : composite_force_face_meas {
  fields = [
    field surface_options_custom_press {},
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["surface_options_other_variables=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["surface_options_other_variables==Yes"];
      visible_if=["solver_version==4 && surface_options_other_variables=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

parameter_set composite_sampled_face_meas : sampled_face_meas {
  label="Composite Sampled Face Measurement";
  short_label="Composite Sampled Face Meas";
  fields = [
    delete field use_input_mesh,
    delete field width,
    delete field file_per_frame,
    field screen_invalid {
      label="Screen Invalid Measurements";
      short_label="Screen Invalid";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min_cp_range {
      label="Min Cp of Valid Range";
      short_label="Min Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_cp_range {
      label="Max Cp of Valid Range";
      short_label="Max Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    delete field fluid_variables,
    field fluid_properties_label {
      label="Fluid Variables";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED|FIELD_COLLAPSIBLE;
    },
    field fluid_options_custom_dens {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_custom_mass_flux {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_press {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_press_and_vel {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_custom_press {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    delete field fluid_options_custom_std_dev_press,
    delete field fluid_options_custom_std_dev_vel,
    delete field fluid_options_custom_std_dev_vel_mag,
    field fluid_options_custom_vel {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_custom_vel_mag {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_options_custom_wv_mass_frac {
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
    },
    field fluid_particle_properties_label {
      label="Fluid Particle Variables";
      datatype=FIELD_IS_LABEL;
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      flags=FIELD_REQUIRED|FIELD_COLLAPSIBLE;
    },
    // Will need to NOT delete the next line to allow "Standard" variable selection, per the spec.
    delete field fluid_particle_variables,
    field fluid_options_custom_particle_mean_particle_dens {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_diam{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_surface_area{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_velocity{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_volume{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mass_flux {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_flux{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_dens_inbound{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_dens_outbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_diam_inbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_diam_outbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_surface_area_inbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_surface_area_outbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_velocity_inbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_velocity_outbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_volume_inbound{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mean_particle_volume_outbound{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mass_rate_inbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_mass_rate_outbound {
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_rate_inbound{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    },
    field fluid_options_custom_particle_rate_outbound{
      visible_if = ["simopts.particle_tracking_sim_option==Yes"];
      delete setvalue_expr;
    }
  ];
};

// direct, thermal
parameter_set composite_sampled_plus_thermal_face_meas : composite_sampled_face_meas {
  fields = [
    field fluid_options_custom_press {},
    field fluid_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Fluid:Custom:Temperature";
      delete enabled_if;
      delete visible_if;
      delete setvalue_expr;
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set composite_sampled_plus_turb_and_thermal_face_meas : composite_sampled_plus_thermal_face_meas {
  fields = [
    field fluid_options_custom_temp {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, isothermal
parameter_set composite_sampled_plus_turb_face_meas : composite_sampled_face_meas {
  fields = [
    field fluid_options_custom_press {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// direct, isothermal
parameter_set composite_force_meas : standard_meas {
  label="Composite Measurements By Region";
  short_label="Composite Meas By Region";
  fields = [
    field average_vectors_enclosingframe {},
    delete field use_input_mesh,
    delete field width,
    delete field file_per_frame,
    delete field building_block,
    field screen_invalid {
      label="Screen Invalid Measurements";
      short_label="Screen Invalid";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min_cp_range {
      label="Min Cp of Valid Range";
      short_label="Min Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_cp_range {
      label="Max Cp of Valid Range";
      short_label="Max Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_measurements {
      flags+=FIELD_COLLAPSIBLE;
    },
    delete field fluid_variables,
    field fluid_options_custom_dens {
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field fluid_options_custom_press {
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    delete field fluid_options_custom_std_dev_press,
    delete field fluid_options_custom_std_dev_vel,
    delete field fluid_options_custom_std_dev_vel_mag,
    field fluid_options_custom_vel {
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field fluid_options_custom_vel_mag {
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    field fluid_options_custom_wv_mass_frac {
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes && simopts.water_vapor_transport==Yes"];
      delete setvalue_expr;
      indent=1;
    },
    delete field fluid_particle_variables,
    field fluid_particle_measurements {
      label="Fluid Particle Measurements";
      short_label="Fluid Particle Meas";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field fluid_options_custom_particle_mean_particle_dens {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_mean_particle_diam {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_mean_particle_velocity {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_mean_surface_area {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_mean_volume {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_force {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_mass {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field fluid_options_custom_particle_number {
      visible_if=["fluid_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["fluid_particle_measurements==Yes"];
      indent=1;
    },
    field body_forces { },
    move field body_options_custom_force,
    field body_options_custom_force {
      init_val="Yes";
      delete setvalue_expr;
      enabled_if=["body_forces=Yes"];
      visible_if=["body_forces=Yes"];
      indent=1;
      flags-=FIELD_MINOR;
    },
    field body_options_custom_torque {
      label="Calculate Moments";
      short_label="Calc. Moments";
      unique_label="Porous:Custom:Calculate Moments";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      enabled_if=["body_forces=Yes && body_options_custom_force=Yes"];
      visible_if=["body_forces=Yes && body_options_custom_force=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field default_reference_point {
      label="Default Reference Point";
      short_label="Ref. Point";
      unique_label="Porous:Default Reference Point";
      enabled_if=["body_forces=Yes && body_options_custom_force=Yes && body_options_custom_torque=Yes"];
      visible_if=["body_forces=Yes && body_options_custom_force=Yes && body_options_custom_torque=Yes"];
      indent=3;
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      empty_choice_string="[default_csys origin]";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    delete field body_variables,
    field body_options_other_variables {
      label="Other Variables";
      short_label="Others";
      unique_label="Porous:Other Variables";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces==Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
      indent=1;
    },
    field body_options_custom_dens {
      visible_if=["body_forces==Yes"];
      delete setvalue_expr;
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
    },
    field body_options_custom_press {
      visible_if=["body_forces==Yes"];
      delete setvalue_expr;
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
    },
    delete field body_options_custom_std_dev_press,
    delete field body_options_custom_std_dev_vel,
    delete field body_options_custom_std_dev_vel_mag,
    field body_options_custom_vel {
      visible_if=["body_forces==Yes"];
      delete setvalue_expr;
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
    },
    field body_options_custom_vel_mag {
      visible_if=["body_forces==Yes"];
      delete setvalue_expr;
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
    },
    field surface_measurements {},
    move field surface_options_custom_force,
    field surface_options_custom_force {
      enabled_if=["surface_measurements=Yes"];
      visible_if=["surface_measurements=Yes"];
      delete setvalue_expr;
      indent=1;
      flags-=FIELD_MINOR;
    },
    field surface_options_custom_torque {
      label="Calculate Moments";
      short_label="Calc. Moments";
      unique_label="Surface:Calculate Moments";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      enabled_if=["surface_measurements=Yes && surface_options_custom_force=Yes"];
      visible_if=["surface_measurements=Yes && surface_options_custom_force=Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field surface_default_reference_point {
      label="Default Reference Point";
      short_label="Ref. Point";
      unique_label="Surface:Default Reference Point";
      enabled_if=["surface_measurements=Yes && surface_options_custom_force=Yes && surface_options_custom_torque=Yes"];
      visible_if=["surface_measurements=Yes && surface_options_custom_force=Yes && surface_options_custom_torque=Yes"];
      indent=3;
      datatype=FIELD_IS_COPY;
      source_field="default_reference_point";
    },
    delete field surface_variables,
    field surface_options_other_variables {
      label="Other Variables";
      short_label="Others";
      unique_label="Surface:Other Variables";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
      indent=1;
    },
    field surface_options_custom_defrost_time {
      visible_if=["surface_measurements==Yes && simopts.water_vapor_transport==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_dens {
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_mass_flux{
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_press {
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    delete field surface_options_custom_std_dev_press,
    delete field surface_options_custom_std_dev_vel,
    delete field surface_options_custom_std_dev_vel_mag,
    field surface_options_custom_vel {
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_vel_mag {
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_wf_thickness {
      visible_if=["surface_measurements==Yes && simopts.water_vapor_transport==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_wv_mass_frac {
      visible_if=["surface_measurements==Yes && simopts.water_vapor_transport==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    field surface_options_custom_wv_mass_flux {
      visible_if=["surface_measurements==Yes && simopts.water_vapor_transport==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
    },
    delete field surface_particle_variables,
    field surface_particle_measurements {
      label="Surface Particle Measurements";
      short_label="Surface Particle Meas";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.particle_tracking_sim_option==Yes"];
      setvalue_expr=["simopts.particle_tracking_sim_option==No ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_COLLAPSIBLE|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_particle_film_persist {
      visible_if = ["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if = ["surface_particle_measurements==Yes"];
      indent = 1;
    },
    field surface_options_custom_particle_film_stress{
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_film_thickness {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_film_velocity {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_film_velocity_mag {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mean_particle_dens_inbound {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mean_particle_dens_outbound {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mean_particle_diam_inbound {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mean_particle_diam_outbound {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_impulse {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_force {
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mass_rate_inbound {
      label="Particle Mass Rate - Inbound";
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_mass_rate_outbound {
      label="Particle Mass Rate - Outbound";
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_rate_inbound {
      label="Particle Rate - Inbound";
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    field surface_options_custom_particle_rate_outbound {
      label="Particle Rate - Outbound";
      visible_if=["simopts.particle_tracking_sim_option==Yes && surface_particle_measurements==Yes"];
      delete setvalue_expr;
      enabled_if=["surface_particle_measurements==Yes"];
      indent=1;
    },
    delete field div_u_measurements
  ];
};


parameter_set development_force_meas {
  label="Force Development Measurements By Region";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS|PSET_ALLOW_INCOMPLETE;
  fields = [
    field window_name {
      label="Window Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field region {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_NON_RECTANGULAR_MESH_PSET_ALLOWED;
    },
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field segment_size {
      label="Integration Segment Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field timing_controls {
      label="Timing Controls";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field end_time_via {
      label="End Time Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Start + (Min Cycles / Min Freq)", "Specified Below"];
      visible_if=["timing_controls==Acoustics"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["timing_controls==Standard || end_time_via==Specified Below"];
      setvalue_expr=["timing_controls==Standard ?? indent:=0 :: indent:=1"];
      default="last timestep";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field min_frequency {
      label="Min Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      default_if=["timing_controls==Acoustics", "no minimum"];
      visible_if=["timing_controls=Acoustics"];
    },
    field max_frequency {
      label="Max Frequency";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field min_cycles {
      label="Min Number of Cycles";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="5";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field nyquist_multiplier {
      label="Nyquist Multiplier";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="2";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Acoustics"];
    },
    field periodAcoustics {
      label="Period";
      datatype=FIELD_IS_STRING;
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
      visible_if=["timing_controls=Acoustics"];
      default="1 / (Max Freq * Nyquist Mult)";
    },
    field period {
      label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
      visible_if=["timing_controls=Standard"];
    },
    field period_sync_group {
      label="Period Synchronization Group";
      short_label="Sync. Group";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="period_sync_groups";
      flags=FIELD_INPUT|FIELD_HAS_PSET_CONTROLS;
    },
    field round_period {
      label="Round Period";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Closest", "Down"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field exclude_coarse_levels {
      label="Exclude Grid Levels Whose Timesteps Exceed Period";
      short_label="Excl. Coarse Levels";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["round_period=Down"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="same as period";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field screen_invalid {
      label="Screen Invalid Measurements";
      short_label="Screen Invalid";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min_cp_range {
      label="Min Cp of Valid Range";
      short_label="Min Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_cp_range {
      label="Max Cp of Valid Range";
      short_label="Max Valid Cp";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["screen_invalid=Yes"];
      indent=1;
      default="PowerFLOW default";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field measurement_precision {
      label="Precision";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single", "Double"];
      visible_if=["simopts.solver_is_single_precision_sim_option==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
      default="Single";
      init_val="Single";
    },
    //field fluid_measurements {
    //  label="Fluid Measurements";
    //  short_label="Fluid Meas";
    //  datatype=FIELD_IS_CHECK_BOX;
    //  init_val="Yes";
    //  flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_COLLAPSIBLE;
    //  },
    field body_forces {
      label="Fan and Porous Media Measurements";
      short_label="Fan + Porous Med Meas";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field body_options_custom_torque {
      label="Calculate Moments";
      short_label="Calc. Moments";
      unique_label="Porous:Custom:Calculate Moments";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      //enabled_if=["body_forces=Yes"];
      visible_if=["body_forces=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field default_reference_point {
      label="Default Reference Point";
      short_label="Ref. Point";
      unique_label="Porous:Default Reference Point";
      //enabled_if=["body_forces=Yes && body_options_custom_torque=Yes"];
      visible_if=["body_forces=Yes && body_options_custom_torque=Yes"];
      indent=2;
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      empty_choice_string="[default_csys origin]";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    field surface_measurements {
      label="Surface Measurements";
      short_label="Surface Meas";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field surface_options_custom_torque {
      label="Calculate Moments";
      short_label="Calc. Moments";
      unique_label="Surface:Calculate Moments";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      //enabled_if=["surface_measurements=Yes"];
      visible_if=["surface_measurements=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field surface_default_reference_point {
      label="Default Reference Point";
      short_label="Ref. Point";
      unique_label="Surface:Default Reference Point";
      //enabled_if=["surface_measurements=Yes && surface_options_custom_torque=Yes"];
      visible_if=["surface_measurements=Yes && surface_options_custom_torque=Yes"];
      indent=2;
      datatype=FIELD_IS_COPY;
      source_field="default_reference_point";
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set development_force_face_meas : development_force_meas {
  label="Force Development Measurements By Face";
  fields = [
    delete field region,
    field face {
      label="Faces";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED;
    },
    delete field body_forces,
    delete field body_options_custom_torque,
    delete field surface_measurements,
    field surface_options_custom_torque {
      delete visible_if;
      delete indent;
    },
    move field default_reference_point,
    field default_reference_point {
      visible_if=["surface_options_custom_torque=Yes"];
      indent=1;
    },
    delete field surface_default_reference_point 
  ];
};

// direct, thermal
parameter_set composite_force_plus_thermal_meas : composite_force_meas {
  fields = [
    field fluid_options_custom_press {},
    field fluid_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Fluid:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_dens {},
    field body_options_custom_heat_generation {
      label="Heat Generation";
      label_w_details="Heat Generation";
      short_label="H Generation";
      unique_label="Porous:Custom:Heat Generation";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces==Yes"];
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press {},
    field body_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Porous:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["body_forces==Yes"];
      enabled_if=["body_options_other_variables==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_dens {},
    field surface_options_custom_heat_flux {
      label="Heat Flux";
      short_label="H Flux";
      unique_label="Surface:Custom:Heat Flux";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_press {},
    field surface_options_custom_temp {
      label="Temperature";
      short_label="Temp";
      unique_label="Surface:Custom:Temperature";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_thermal_yplus {
      label="Thermal Y+";
      short_label="Y+";
      unique_label="Surface:Custom:Thermal Y+";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes && (surface_options_custom_thermal_yplus==Yes || simopts.expose_adv_meas_vars==Yes)"];
      enabled_if=["surface_options_other_variables==Yes"];
      indent=2;
      setvalue_expr=["surface_variables==ValueChanged ?? No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, thermal
parameter_set composite_force_plus_turb_and_thermal_meas : composite_force_plus_thermal_meas {
  fields = [
    field fluid_options_custom_dens {},
    field fluid_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Fluid:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_press {},
    field fluid_options_custom_swirl {
      label="Swirl";
      unique_label="Fluid:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_temp {},
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {},
    field fluid_options_custom_vor {
      label="Vorticity";
      unique_label="Fluid:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Fluid:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_heat_generation{},
    field body_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Porous:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press{},
    field body_options_custom_swirl {
      label="Swirl";
      unique_label="Porous:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_temp {},
    field body_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Porous:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel_mag{},
    field body_options_custom_vor {
      label="Vorticity";
      unique_label="Porous:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Porous:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs {},
    field surface_options_custom_htc_for_adiabatic_walls {
      label="Calculate for Adiabatic Walls";
      short_label="Calc. for Adiabatic Walls";
      unique_label="Surface:Custom:HTC (Char Temp):Calculate for Adiabatic Walls";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_custom_heat_xfer_coeffs==Yes"];
      indent=3;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

// turb, isothermal
parameter_set composite_force_plus_turb_meas : composite_force_meas {
  fields = [
    field fluid_options_custom_dens {},
    field fluid_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Fluid:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_press {},
    field fluid_options_custom_swirl {
      label="Swirl";
      unique_label="Fluid:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Fluid:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vel_mag {},
    field fluid_options_custom_vor {
      label="Vorticity";
      unique_label="Fluid:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field fluid_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Fluid:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["fluid_measurements==Yes"];
      visible_if=["fluid_measurements==Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_dens{},
    field body_options_custom_lambda2 {
      label="Lambda2";
      unique_label="Porous:Custom:Lambda2";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_press {},
    field body_options_custom_swirl {
      label="Swirl";
      unique_label="Porous:Custom:Swirl";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      visible_if=["body_forces==Yes && simopts.dimensionality_is_2d_sim_option==No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_turb {
      label="Turbulence Info";
      short_label="Turb Info";
      unique_label="Porous:Custom:Turbulence Info";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vel_mag{},
    field body_options_custom_vor {
      label="Vorticity";
      unique_label="Porous:Custom:Vorticity";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field body_options_custom_vor_mag {
      label="Vorticity Magnitude";
      unique_label="Porous:Custom:Vorticity Magnitude";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["body_options_other_variables==Yes"];
      visible_if=["body_forces==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_dens {},
    field surface_options_custom_heat_xfer_coeffs {
      label="HTC (Char Temp)";
      unique_label="Surface:Custom:HTC (Char Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      delete setvalue_expr;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    },
    field surface_options_custom_heat_xfer_coeffs_local {
      label="HTC (Near Wall Temp)";
      unique_label="Surface:Custom:HTC (Near Wall Temp)";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["solver_version==4 && surface_measurements==Yes"];
      enabled_if=["surface_options_other_variables==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_MINOR;
    }
  ];
};

parameter_set particle_trajectory_meas {
  label="Particle Trajectory Measurement";
  short_label="Prtcl Trajec Meas";
  flags=PSET_ALLOW_INCOMPLETE;
  visible_if=["simopts.particle_tracking_sim_option==Yes"];
  fields = [
    field window_name {
      label="Window Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field region {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="last timestep";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field particle_trajectories {
      label="Particle Trajectories";
      short_label="Prtcl Trajec";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field record_velocities {
      label="Record Velocities";
      short_label="Record Vel";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["particle_trajectories==Yes"];
      init_val="Yes";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN; // Hidden for 5.4 Beta
    },
    field dynamic_trajectory_decimation {
      label="Dynamic Trajectory Decimation";
      short_label="Dyn Trajec Decim";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["particle_trajectories==Yes"];
      init_val="Yes";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN; // Hidden for 5.4 Beta
    },
    field decimation_error_tolerance {
      label="Decimation Error Tolerance";
      short_label="Decim Err Tol";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["particle_trajectories==Yes"];// for 5.4 Beta && dynamic_trajectory_decimation==Yes"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field period {
      label="Period";
      short_label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["particle_trajectories==Yes && dynamic_trajectory_decimation==No"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_HIDDEN; // Hidden for 5.4 Beta
    },
    field hit_points {
      label="Hit Points";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["None", "All Hits", "Only Hits of Particles Eligible for Trajectory Recording"];
      init_val="All Hits";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field include_adhering_particles_only {
      label="Include Adhering Particles Only";
      short_label="Adhering Particles";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["hit_points==All Hits || hit_points==Only Hits of Particles Eligible for Trajectory Recording"];
      init_val="No";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field record_normal_impulse {
      label="Record Normal Impulse";
      short_label="Record Norm Imp";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["hit_points==All Hits || hit_points==Only Hits of Particles Eligible for Trajectory Recording"];
      init_val="No";
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set averaged_measurement
{
  label="Averaged Measurement";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field window_name {
      label="Window Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field measurement_window {
      label = "Measurement Window";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="measurement";
      // TODO: Replace the following mess with a more elegant filtering mechanism...
      pset_identifier="composite_force_face_meas|composite_force_meas|composite_force_plus_thermal_face_meas|composite_force_plus_thermal_meas|composite_force_plus_turb_and_thermal_face_meas|composite_force_plus_turb_and_thermal_meas|composite_force_plus_turb_face_meas|composite_force_plus_turb_meas|composite_sampled_face_meas|composite_sampled_plus_thermal_face_meas|composite_sampled_plus_turb_and_thermal_face_meas|composite_sampled_plus_turb_face_meas|development_force_face_meas|development_force_meas|probe|probe_plus_thermal|probe_plus_turb|probe_plus_turb_and_thermal|sampled_face_meas|sampled_plus_thermal_face_meas|sampled_plus_turb_and_thermal_face_meas|sampled_plus_turb_face_meas|standard_face_meas|standard_meas|standard_plus_heat_coeff_face_meas|standard_plus_heatflux_face_meas|standard_plus_heatflux_meas|standard_plus_turb_and_heat_coeff_meas|standard_plus_turb_and_heatflux_face_meas|standard_plus_turb_and_heatflux_meas";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field average_fluid {
      label="Fluid Measurement";
      short_label="Fluid";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      enabled_evaluator=["cMEAS_AVG_FLUID_ENABLED"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field average_porous {
      label="Fan and Porous Media Measurements";
      short_label="Fan+Porous";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      enabled_evaluator=["cMEAS_AVG_POROUS_ENABLED"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field average_surface {
      label="Surface Measurements";
      short_label="Surface";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      enabled_evaluator=["cMEAS_AVG_SURFACE_ENABLED"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time_via {
      label="Start Time Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Specified Below", "After Initial Transient"];
      init_val="Specified Below";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field monitors {
      label="Monitors";
      datatype=FIELD_IS_PSET_LIST; 
      pfamily_identifier="monitors";
      enabled_if=["start_time_via==After Initial Transient"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Start Time";
      short_label="Start";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["start_time_via==Specified Below"];
      custom_unit0="Frame";
      default="First frame";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field end_time {
      label="End Time";
      short_label="End";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0="Frame";
      default="Last Frame";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0="Frame";
      default="All Frames";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};



//========================================================================================
//     AUTOSTOP MONITORS
//========================================================================================

parameter_set base_monitor
{
  label="Base Monitor";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field preferred_time_unit {
      label="Preferred Time Unit";
      short_label="Time Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field signal_analysis {
      label = "Signal Analysis";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Record Signal Only", "Detect Initial Transient Only", "Detect Initial Transient and Signal Convergence"];
      init_val = "Detect Initial Transient and Signal Convergence";
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED;
    },
    field automatically_stop_simulation {
      label = "Automatically Stop Simulation";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence"];
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED;
    },
    field analysis_scheme {
      label = "Analysis Scheme";
      datatype = FIELD_IS_CHOICE_LIST;
      choices_evaluator = ["cMONITOR_ANALYSIS_SCHEME_CHOICES"];
      empty_choice_string="[none]";
      enabled_if = ["signal_analysis!=Record Signal Only"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    //field monitor_flow_pass {
    //  label = "Monitor Flow Pass";
    //  datatype=FIELD_IS_UVAL_SCALAR;
    //  unit_class="Time";
    //  indent = 1;
    //  enabled_if = ["signal_analysis != Record Signal Only"];
    //  flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    //},
    field signal_convergence_criteria {
      label = "Signal Convergence Criteria";
      datatype = FIELD_IS_CHOICE_LIST;
      choices_evaluator = ["cSIGNAL_CONVERGENCE_CRITERIA_CHOICES"];
      empty_choice_string = "[none]";  // Should be [select]
      init_val = "Confidence Interval And Stabilization Window";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence"];
      enabled_evaluator = ["cSIGNAL_CONVERGENCE_CRITERIA_ENABLED"];  // Based on specific analysis scheme choices
      value_updater = ["cSIGNAL_CONVERGENCE_CRITERIA_UPDATER"];
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED | FIELD_UI_BREAK;
    },
    field initial_transient_label {
      label="Initial Transient";
      datatype=FIELD_IS_LABEL;
      enabled_if = ["signal_analysis!=Record Signal Only"];
      flags = FIELD_REQUIRED | FIELD_LABEL_BOLD;
    },
    field initial_transient_determined_via {
      label = "End of Initial Transient Determined Via";
      short_label = "End of Init Trans Via";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Automatic", "User Specified"];
      init_val="Automatic";
      enabled_if = ["signal_analysis!=Record Signal Only"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field minimum_initial_transient {
      label = "Minimum Initial Transient";
      short_label="Min Init Trans";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      default="0";
//      enabled_if = ["signal_analysis!=Record Signal Only && initial_transient_determined_via == Automatic"];
      visible_if = ["signal_analysis!=Record Signal Only && initial_transient_determined_via == Automatic"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    },
    field end_of_initial_transient {
      label = "End of Initial Transient";
      short_label="End of Init Trans";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      //      enabled_if = ["signal_analysis!=Record Signal Only && initial_transient_determined_via == User Specified"];
      visible_if = ["signal_analysis!=Record Signal Only && initial_transient_determined_via == User Specified"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    },
    field initial_transient_mean_variance_window {
      label = "Initial Transient Mean/Variance Window";
      short_label="Init Trans Wndw";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      enabled_if = ["signal_analysis!=Record Signal Only && analysis_scheme == Custom"];
      value_updater = ["cINITIAL_TRANSIENT_MEAN_VARIANCE_WINDOW_UPDATER"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_UI_BREAK;
    },
    field signal_convergence_label {
      label="Signal Convergence";
      datatype=FIELD_IS_LABEL;
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence"];
      flags = FIELD_REQUIRED | FIELD_LABEL_BOLD;
    },
    field specify_desired_accuracy_via {
      label = "Specify Desired Accuracy Via";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Percentage of Mean", "Value"];
      init_val="Value";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && (analysis_scheme == Custom || analysis_scheme == Vehicle Confidence Interval)"];
      value_updater = ["cDESIRED_ACCURACY_VIA_UPDATER"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field desired_accuracy_percentage {
      label="Desired Accuracy Percentage";
      short_label="% Dsrd Accy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
//      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && specify_desired_accuracy_via == Percentage of Mean"];
      visible_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && specify_desired_accuracy_via == Percentage of Mean"];
      indent = 1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field desired_accuracy {
      label="Desired Accuracy";
      short_label="Dsrd Accy";
      datatype=FIELD_IS_UVAL_SCALAR;
      // TODO: Dynamically set unit to agree with selected variable
      unit_class = "Dimensionless";
//      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && specify_desired_accuracy_via == Value"];
      visible_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && specify_desired_accuracy_via == Value"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    },
    field desired_confidence_level {
      label = "Desired Confidence Level";
      short_label="Dsrd Conf Lvl";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["68.3% (1 Std Dev)", "95.4% (2 Std Dev)", "Custom"];
      init_val = "68.3% (1 Std Dev)";
      enabled_if = ["signal_analysis == Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Stabilization Window"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field custom_confidence_level {
      label = "Custom Confidence Level (Percentage)";
      short_label = "Cstm Conf Lvl";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Stabilization Window && desired_confidence_level == Custom"];
      indent = 1;
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    },
    field minimum_averaging_time {
      label = "Minimum Averaging Time";
      short_label="Min Avg Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      default = "0";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && analysis_scheme != Vehicle Confidence Interval"];
      value_updater = ["cMINIMUM_AVERAGING_TIME_UPDATER"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    },
    field stabilization_window {
      label = "Stabilization Window";
      short_label="Stabilize Wnd";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && analysis_scheme == Custom"];
      value_updater = ["cSTABILIZATION_WINDOW_UPDATER"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    },
    field enable_stabilization_subwindows {
      label = "Enable Stabilization Subwindows";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && analysis_scheme == Custom"];
      value_updater = ["cENABLE_STABILIZATION_SUBWINDOW_UPDATER"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field subwindow {
      label = "Subwindow";
      short_label="Subwindow";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      custom_unit0 = "Monitor Flow Pass";
      indent = 1;
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && analysis_scheme == Custom"];
      value_updater = ["cSTABILIZATION_SUBWINDOW_UPDATER"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field subwindow_range_limit_via {
      label = "Specify Subwindow Range Limit Via";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Value", "Percentage of Mean", "Percentage of Accuracy"];
      init_val = "Value";
      value_updater = ["cSUBWINDOW_RANGE_LIMIT_VIA_UPDATER"];
      indent = 1;
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && analysis_scheme == Custom"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field subwindow_range_limit {
      label = "Range Limit";
      short_label = "Sbwnd Rng Lmt";
      datatype = FIELD_IS_UVAL_SCALAR;
      // TODO: Dynamically set unit to agree with selected variable
      unit_class = "Dimensionless";
      indent = 2;
//      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && subwindow_range_limit_via == Value"];
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && analysis_scheme == Custom"];
      visible_if = ["subwindow_range_limit_via == Value"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    },
    field subwindow_range_limit_percentage_of_mean {
      label="Range Limit Percentage of Mean";
      short_label="Sbwnd Rng Lmt (% of Mn)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent = 2;
//      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && subwindow_range_limit_via == Percentage of Mean"];
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && analysis_scheme == Custom"];
      visible_if = ["subwindow_range_limit_via == Percentage of Mean"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    },
    field subwindow_range_limit_percentage_of_accuracy {
      label = "Range Limit Percentage of Accuracy";
      short_label = "Sbwnd Rng Lmt (% of Accy)";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      indent = 2;
//      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && subwindow_range_limit_via == Percentage of Accuracy"];
      enabled_if = ["signal_analysis==Detect Initial Transient and Signal Convergence && signal_convergence_criteria != Confidence Interval && enable_stabilization_subwindows==Yes && analysis_scheme == Custom"];
      visible_if = ["subwindow_range_limit_via == Percentage of Accuracy"];
      value_updater = ["cSUBWINDOW_RANGE_LIMIT_PERCENTAGE_OF_ACCURACY_UPDATER"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED | FIELD_REQUIRED;
    }
  ];
};

parameter_set flow_monitor : base_monitor
{
  label="Flow Monitor";
  fields = [
    field preferred_time_unit {
    },
    field measurement_window {
      label = "Measurement Window";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="measurement";
      pset_identifier="composite_force_meas|composite_force_face_meas|composite_sampled_face_meas|probe|composite_force_plus_turb_meas|composite_force_plus_turb_face_meas|composite_sampled_plus_turb_face_meas|probe_plus_turb|composite_force_plus_thermal_meas|composite_force_plus_thermal_face_meas|composite_sampled_plus_thermal_face_meas|probe_plus_thermal|composite_force_plus_turb_and_thermal_meas|composite_force_plus_turb_and_thermal_face_meas|composite_sampled_plus_turb_and_thermal_face_meas|probe_plus_turb_and_thermal|probe";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field variable_source {
      label = "Variable Source";
      datatype = FIELD_IS_CHOICE_LIST;
      choices_evaluator = ["cFLOW_MONITOR_VARIABLE_SOURCE_CHOICES"];
      empty_choice_string="[none]";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field flow_variable {
      label = "Variable";
      datatype = FIELD_IS_CHOICE_LIST;
      choices_evaluator = ["cFLOW_MONITOR_VARIABLE_CHOICES"];
      empty_choice_string="[none]";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coordinate_system {
      label="Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      visibility_evaluator = ["cFLOW_MONITOR_COORDINATE_SYSTEM_VISIBLE"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field reference_point {
      label="Reference Point";
      short_label="Ref Pt";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys|point";
      visibility_evaluator = ["cFLOW_MONITOR_REFERENCE_POINT_VISIBLE"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_region_filter_sense {
      label = "Include/Exclude Fluid Regions";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Include", "Exclude"];
      visible_if=["variable_source==Fluid Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_region_partition {
      label = "Fluid Region Partition";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      visible_if=["variable_source==Fluid Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_fluid_region_partition {
      label="Secondary Fluid Region Partition";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fluid_regions {
      label="Fluid Regions";
      datatype=FIELD_IS_GEOM_MODEL;
      visible_if=["variable_source==Fluid Measurements"];
      flags=FIELD_INPUT;
    },
    field fan_porous_media_region_filter_sense {
     label = "Include/Exclude Fan and Porous Media Regions";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Include", "Exclude"];
      visible_if=["variable_source==Fan and Porous Media Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field fan_porous_media_region_partition {
      label = "Fan and Porous Media Region Partition";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      visible_if=["variable_source==Fan and Porous Media Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_fan_porous_media_region_partition {
      label="Secondary Fan and Porous Media Region Partition";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field fan_porous_media_regions {
      label="Fan and Porous Media Regions";
      datatype=FIELD_IS_GEOM_MODEL;
      visible_if=["variable_source==Fan and Porous Media Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT;
    },
    field solid_face_region_filter_sense {
     label = "Include/Exclude Solid Faces";
     datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Include", "Exclude"];
      visible_if=["variable_source==Surface Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field solid_face_region_partition {
      label = "Solid Face Partition";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Standard", "SECONDARY VALUE"];
      visible_if=["variable_source==Surface Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_solid_face_region_partition {
      label="Secondary Solid Face Partition";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag_type";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field solid_face_regions {
      label="Solid Face Regions";
      datatype=FIELD_IS_GEOM_MODEL;
      visible_if=["variable_source==Surface Measurements || variable_source==Surface + Fan and Porous Media Measurements"];
      flags=FIELD_INPUT;
    },
    field analysis_scheme {
    },
    field flow_monitor_flow_pass {
      label = "Monitor Flow Pass";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent = 1;
      enabled_if = ["signal_analysis != Record Signal Only"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    }
  ];
  dividers = [
    divider div0 {
      label="Select Variable";
      first_field="name";
    },
    divider div1 {
      label="Filter Geometry";
      first_field="fluid_region_filter_sense";
    },
    divider div2 {
      label="Signal Analysis";
      first_field="signal_analysis";
    }
  ];
};

parameter_set heat_exchanger_monitor : base_monitor
{
  label="Heat Exchanger Monitor";
  short_label="Heat Exchgr Mntr";
  fields = [
    field name {
    },
    field heat_exchanger {
      label = "Heat Exchanger";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="fluid_solid";
      pset_identifier="heat_exchanger|heat_exchanger_turbulence|heat_exchanger_amesim|heat_exchanger_amesim_turbulence|heat_exchanger_multipass|heat_exchanger_multipass_turbulence|heat_exchanger_condenser|heat_exchanger_condenser_turbulence|heat_exchanger_curved|heat_exchanger_curved_turbulence|heat_exchanger_multipass_curved|heat_exchanger_multipass_curved_turbulence|heat_exchanger_condenser_curved|heat_exchanger_condenser_curved_turbulence";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field preferred_time_unit {
    },
    field heat_exchanger_variable {
      label = "Variable";
      datatype = FIELD_IS_CHOICE_LIST;
      choices_evaluator = ["cHX_MONITOR_VARIABLE_CHOICES"];
      empty_choice_string="[none]";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field analysis_scheme{
    },
    field heat_exchanger_monitor_flow_pass {
      label = "Monitor Flow Pass";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Time";
      custom_unit0 = "Heat Exchanger Coupling Period";
      indent = 1;
      enabled_if = ["signal_analysis != Record Signal Only"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    }
  ];
  dividers = [
    divider div0 {
      label="Select Variable";
      first_field="name";
    },
    divider div1 {
      label="Signal Analysis";
      first_field="signal_analysis";
    }
  ];
};

parameter_set coupled_powertherm_monitor : base_monitor
{
  label="Coupled PowerTHERM Model Monitor";
  short_label="Cpld PTHERM Mntr";
  fields = [
    field name {
    },
    field coupled_model {
      label = "Coupled Model";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coupling_import_family";
      //pfamily_identifier="coupling_model_family";
      //pset_identifier="coupling_model";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field preferred_time_unit {
    },
    field coupled_powertherm_part {
      label = "PowerTHERM Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coupling_model_family";
      pset_identifier="coupling_model_component";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field side {
      label = "Side";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Front", "Back", "Front and Back", "Not Applicable"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coupled {
      label = "Coupled to PowerFLOW";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_NOT_DISCRETIZED;
    },
    field powertherm_variable {
      label = "Variable";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["Mean HTC", "Max HTC", "Min HTC", "Mean Temperature", "Max Temperature", "Min Temperature"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field analysis_scheme{
    },
    field powertherm_monitor_flow_pass {
      label = "Monitor Flow Pass";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Time";
      custom_unit0 = "PowerTHERM Model Coupling Period";
      indent = 1;
      enabled_if = ["signal_analysis != Record Signal Only"];
      flags = FIELD_INPUT | FIELD_EQUATION_ALLOWED | FIELD_NOT_DISCRETIZED;
    }
  ];
  dividers = [
    divider div0 {
      label="Select Variable";
      first_field="name";
    },
    divider div1 {
      label="Signal Analysis";
      first_field="signal_analysis";
    }
  ];
};


parameter_set simulation_options
{
  label="Simulation Options";
  flags=PSET_ENSURE_CREATED;
  fields = [
    field particle_tracking_sim_option {
      label="Particle Modeling Sim Option";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["ValueAlways=False"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    // This field was added for the purpose of PR 26188
    // Field is true when CASE already has particle tracking options Or non-default particle tracking objects
    field particle_tracking_sim_option_visibility {
      label="Particle Modeling Sim Options Visibility";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["ValueAlways=False"];
      enabled_if=["particle_tracking_sim_option==Yes"];// || (#particle_materials_family!=0 || #emitters_family!=0 || #particle_surface_interactions_family!=0 || #surface_materials_family>1 || #screens_family!=0)"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field solver_is_single_precision_sim_option {
      label="Solver Precision Sim Option";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="Yes";
      init_val="Yes";
    },
    field dimensionality_is_2d_sim_option {
      label="Dimensionality Sim Option";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
      init_val="No";
    },
    field flow_type {
      label="Flow Type Sim Option";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Internal", "External"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="External";
      init_val="External";
    },
    field sim_method_is_turb_model_sim_option {
      label="Simulation Method Sim Option";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="Yes";
      init_val="Yes";
    },
    field expose_adv_meas_vars {
      label="Expose Adv. Measurement Variables";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field mach_regime {
      label="Mach Regime";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Low", "High Subsonic", "Transonic"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field force_std_high_mach_scaling  {
      label="Forcing Std High Mach Scaling";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field heat_transfer {
      label="Heat Transfer Sim Option";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field simulation_fluid {
      label="Simulation Fluid Sim Option";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Ideal Gas", "Liquid"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="Ideal Gas";
      init_val="Ideal Gas";
    },
    field enable_boundary_layer_transition {
      label="Enable Boundary Layer Transition Model";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field vehicle_simulation {
      label="Vehicle Simulation";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field default_boundary_layer_type {
      label="Default New Boundary Layer Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Automatic", "Fully Turbulent", "Laminar"];
      init_val="Automatic";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field water_vapor_transport {
      label="Water Vapor Transport";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      default="No";
    },
    field enable_realistic_looks {
      label="Enable Realistic Looks";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      init_val="No";
    }
  ];
};

// Parameter sets for the global family.

parameter_set literal_global {
  label="Characteristics";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field top_field_placeholder {
     label="Top Field Placeholder";
     datatype=FIELD_IS_LABEL;
     flags=FIELD_HIDDEN;
    },
    field characteristic_pressure {
      label="Characteristic Pressure";
      short_label="Char P";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="StaticPressure";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field characteristic_velocity {
      label="Characteristic Velocity";
      short_label="Char V";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field characteristic_temperature {
      label="Characteristic Temperature";
      short_label="Char T";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field characteristic_viscosity {
      label="Characteristic Viscosity";
      short_label="Char Visc";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="KinematicViscosity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field characteristic_length {
      label="Characteristic Length";
      short_label="Char Len";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field characteristic_area {
      label="Characteristic Area";
      short_label="Char Area";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Area";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field resolution {
      label="Resolution";
      label_w_details="Resolution (cells along char length)";
      short_label="Res";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field mach_mode {
      label="Simulated Mach Number";
      short_label="Mach Mode";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Chosen by PowerFLOW", "Same as Experiment", "Specified Below"];
      visible_if=["simopts.mach_regime=Low || simopts.force_std_high_mach_scaling=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mach {
      label="Simulated Mach Number of Char Velocity";
      short_label="Sim Mach Num";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      enabled_if=["mach_mode=Specified Below"];
      visible_if=["simopts.mach_regime=Low || simopts.force_std_high_mach_scaling=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_expected_velocity {
      label="Max Expected Velocity";
      short_label="Max Exp V";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default = "1.3 * (Char Velocity)";
      indent=1;
      enabled_if=["mach_mode=Chosen by PowerFLOW"];
      visible_if=["simopts.mach_regime=Low || simopts.force_std_high_mach_scaling=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field max_expected_mach_num {
      label="Max Expected Mach Number";
      short_label="Max Exp M";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default = "1.5 * (Char M)";
      visible_if=["simopts.mach_regime!=Low"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field timesteps {
      label="Simulation Time";
      short_label="Sim Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field checkpoint_period {
      label="Simulation Time Between Checkpoints";
      short_label="CP Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="No checkpoints";
    },
    field molecular_weight {
      label="Gas Molecular Weight";
      short_label="MW";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="MolecularWeight";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="28.97 kg/kmol";
    },
    field lattice_gas_constant {
      label="Lattice Gas Constant";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["simopts.mach_regime=Transonic"];
      default="0.4";
    },
    field specific_heat_ratio {
      label="Gas Specific Heat Ratio";
      short_label="gamma";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="1.4";
    },
    field lattice_specific_heat_ratio {
      label="Lattice Gas Specific Heat Ratio";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      visible_if=["simopts.mach_regime=Transonic"];
      default="1.4";
    },
    field specific_heat_cp {
      label="Constant-pressure Specific Heat";
      short_label="Cp";
      datatype=FIELD_IS_UVAL;
      unit_class="SpecificHeat";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="1007 J/(kg*degK)";
    },
    field default_nu_over_t {
      label="Default Nu/T";
      short_label="Def Nu/T";
      datatype=FIELD_IS_UVAL;
      // One could use units of length^2/(sec * temp) for nu/T, but its more convenient
      // to consider it just as a dimensionless parameter.
      unit_class="Dimensionless";
      // This field is hidden; it is calculated by the simulation model.  It exists
      // as a field only because that's the most convenient way to have it serve as
      // a default for the nu/T field of fluid parameter sets when they are written
      // to the CDI file.
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set vehicle {
  label="Vehicle";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  visible_if=["simopts.vehicle_simulation==Yes"];
  fields = [
    field moment_via {
      label="Roll/Pitch/Yaw Moment Via";
      short_label="Moment Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["SAE J1594", "Right-Hand Rule"];
      init_val="SAE J1594";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      default="default_csys";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field centerline_direction {
      label="Vehicle Centerline Direction";
      short_label="Centerline Dir";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["+X", "-X", "+Y", "-Y", "+Z", "-Z"];
      init_val="+X";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field up_direction {
      label="Up Direction";
      short_label="Up Dir";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["+X", "-X", "+Y", "-Y", "+Z", "-Z"];
      init_val="+Z";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field side_force_direction {
      label="Side Force Direction";
      short_label="Side Force Dir";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["+X", "-X", "+Y", "-Y", "+Z", "-Z"];
      init_val="+Y";
      enabled_if=["moment_via!=SAE J1594"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED; 
    },
    field front_axle {
      label="Front Axle";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field rear_axle {
      label="Rear Axle";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field moment_center {
      label="Moment Center";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys|point";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field specify_floor_via {
      label="Specify Floor Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Point", "Part"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field floor_point {
      label="Floor Point";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      enabled_if=["specify_floor_via==Point"];
      visible_if=["specify_floor_via==Point"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field floor_part {
      label="Floor Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      enabled_if=["specify_floor_via==Part"];
      visible_if=["specify_floor_via==Part"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field show_floor_decorations {
      label="Show Floor Decorations";
      short_label="Show Decor";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field user_defined_char {
      label="User Defined Char Values For Dimless Force and Moments";
      short_label="User Defined Char";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field user_char_area {
      label="Char Area";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Area";
      indent=1;
      default="characteristic_area";
      enabled_if=["user_defined_char==Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field user_char_length {
      label="Char Length";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      indent=1;
      default="characteristic_length";
      enabled_if=["user_defined_char==Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set literal_global_2d : literal_global {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_literal_global : literal_global {
  fields = [
    field max_expected_velocity {
      flags+=FIELD_REQUIRED;
      delete default;
    },
    field default_nu_over_t {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set internal_literal_global_2d : internal_literal_global {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set boundary_layer_global : literal_global {
  fields = [
    field default_turb_intensity {
      label="Default Turbulence Intensity";
      short_label="Def Turb I";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      default="0.01";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_turb_length_scale {
      label="Default Turbulence Length Scale";
      short_label="Def Turb Len";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="5 mm";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field anechoic_outer_layer {
      label="Anechoic Outer Layer (high viscosity in outermost fluid region to absorb acoustic waves)";
      short_label="Anechoic Layer";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set boundary_layer_global_2d : boundary_layer_global {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_boundary_layer_global : boundary_layer_global {
  fields = [
    field max_expected_velocity {
      flags+=FIELD_REQUIRED;
      delete default;
    },
    field default_turb_length_scale {
      default="0.1 * (Char. Length)";
    },
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set internal_boundary_layer_global_2d : internal_boundary_layer_global {
  fields = [
    delete field characteristic_area
  ];
};


//-----------------BEGIN thermal stuff---------------------------->
//The following are the same as their non-thermal equivalent
//(e.g. literal_global_thermal is the same as literal_global)
//but with a couple of additional fields at the end.
//
parameter_set literal_global_thermal : literal_global {
  fields = [
    field default_nu_over_t {},
    field fluid_Prandtl_number {
      label="Fluid Prandtl Number";
      short_label="Fl Prandtl";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field use_active_scalar {
      label="Coupled Temperature/Momentum Calculation";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field mean_temperature {
      label="Max Expected Fluid Temperature";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      enabled_if=["simopts.mach_regime!=Low || use_active_scalar=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field use_thermal_acceleration {
      label="Accelerate Thermal Solver";
      label_w_details="Accelerate Thermal Solver (time accuracy reduced during thermal acceleration)";
      short_label="Accel Heat";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_start_time {
      label="Start Acceleration Time";
      short_label="Start Acc Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_end_time {
      label="End Acceleration Time";
      short_label="End Acc Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_period {
      label="Acceleration Period";
      short_label="Acc Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="End Time - Start Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_interval {
      label="Accelerated Interval";
      short_label="Acc Interval";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Period";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field freeze_momentum_field {
      label="Freeze Momentum Field";
      short_label="FM";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field physical_time_scaling {
      label="Physical Time Scaling";
      short_label="Scaling";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      indent=1;
      enabled_if=["freeze_momentum_field=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field accelerate_water_film_thickness {
      label="Accelerate Water Film Thickness Development";
      short_label="Accelerate WFT";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      indent=1;
      enabled_if=["freeze_momentum_field=Yes"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set literal_global_2d_thermal : literal_global_thermal {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_literal_global_thermal : literal_global_thermal {
  fields = [
    field max_expected_velocity {
      flags+=FIELD_REQUIRED;
      delete default;
    },
    field fluid_Prandtl_number {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field use_active_scalar {
      enabled_if=["incompressible=No"];
    },
    field mean_temperature {
      enabled_if=["simopts.mach_regime!=Low || (incompressible=No && use_active_scalar=Yes)"];
    }
  ];
};

parameter_set internal_literal_global_2d_thermal : internal_literal_global_thermal {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set boundary_layer_global_thermal : literal_global_thermal {
  fields = [
    field default_nu_over_t {},
    field default_turb_intensity {
      label="Default Turbulence Intensity";
      short_label="Def Turb I";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      default="0.01";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_turb_length_scale {
      label="Default Turbulence Length Scale";
      short_label="Def Turb Len";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="5 mm";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_Prandtl_number {
      flags-=FIELD_REQUIRED;
      default="0.707";
    },
    field anechoic_outer_layer {
      label="Anechoic Outer Layer (high viscosity in outermost fluid region to absorb acoustic waves)";
      short_label="Anechoic Layer";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set boundary_layer_global_2d_thermal : boundary_layer_global_thermal {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_boundary_layer_global_thermal : boundary_layer_global_thermal {
  fields = [
    field max_expected_velocity {
      flags+=FIELD_REQUIRED;
      delete default;
    },
    field default_turb_length_scale {
      default="0.1 * (Char. Length)";
    },
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field use_active_scalar {
      enabled_if=["incompressible=No"];
    },
    field mean_temperature {
      enabled_if=["simopts.mach_regime!=Low || (incompressible=No && use_active_scalar=Yes)"];
    }
  ];
};

parameter_set internal_boundary_layer_global_2d_thermal : internal_boundary_layer_global_thermal {
  fields = [
    delete field characteristic_area
  ];
};

//----------------------END thermal stuff-------------------------------<

//---------------------BEGIN liquid stuff-------------------------------<
// These are similar to the gas options above, but have additional fields
// for characteristic density, no specific heat ratio, and different
// handling for the Mach number.
parameter_set literal_global_liquid : literal_global {
  fields = [
    field characteristic_pressure {},
    field characteristic_density {
      label="Characteristic Density";
      short_label="Char Rho";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Density";
      default = "1000.0 kg/m^3";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field mach {
      default = "0.15";
      flags-=FIELD_REQUIRED;
      delete indent;
      delete enabled_if;
    },
    field specific_heat_cp {
      default="4183 J/(kg*degK)";
    },
    delete field mach_mode,
    delete field max_expected_velocity,
    delete field molecular_weight,
    delete field specific_heat_ratio
  ];
};

parameter_set literal_global_2d_liquid : literal_global_liquid {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_literal_global_liquid : literal_global_liquid {
  fields = [
    field default_nu_over_t {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set internal_literal_global_2d_liquid : literal_global_2d_liquid {
  fields = [
    field default_nu_over_t {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set boundary_layer_global_liquid : literal_global_liquid {
  fields = [
    field default_turb_intensity {
      label="Default Turbulence Intensity";
      short_label="Def Turb I";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      default="0.01";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_turb_length_scale {
      label="Default Turbulence Length Scale";
      short_label="Def Turb Len";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="5 mm";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field anechoic_outer_layer {
      label="Anechoic Outer Layer (high viscosity in outermost fluid region to absorb acoustic waves)";
      short_label="Anechoic Layer";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set boundary_layer_global_2d_liquid : boundary_layer_global_liquid {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_boundary_layer_global_liquid : boundary_layer_global_liquid {
  fields = [
    field default_turb_length_scale {
      default="0.1 * (Char. Length)";
    },
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set internal_boundary_layer_global_2d_liquid : internal_boundary_layer_global_liquid {
  fields = [
    delete field characteristic_area
  ];
};


//-----------------BEGIN thermal liquid stuff--------------------->
//The following are the same as their non-thermal equivalent
//(e.g. literal_global_thermal is the same as literal_global)
//but with a couple of additional fields at the end.
//
parameter_set literal_global_thermal_liquid : literal_global_liquid {
  fields = [
    field default_nu_over_t {},
    field fluid_Prandtl_number {
      label="Fluid Prandtl Number";
      short_label="Fl Prandtl";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field specific_heat_cp {
      label="Specific Heat";
      short_label="C";
    },
    field use_active_scalar {
      label="Coupled Temperature/Momentum Calculation";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field mean_temperature {
      label="Max Expected Fluid Temperature";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      indent=1;
      enabled_if=["simopts.mach_regime!=Low || use_active_scalar=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field use_thermal_acceleration {
      label="Accelerate Thermal Solver";
      label_w_details="Accelerate Thermal Solver (time accuracy reduced during thermal acceleration)";
      short_label="Accel Heat";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_start_time {
      label="Start Acceleration Time";
      short_label="Start Acc Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_end_time {
      label="End Acceleration Time";
      short_label="End Acc Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_period {
      label="Acceleration Period";
      short_label="Acc Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field thermal_acceleration_interval {
      label="Accelerated Interval";
      short_label="Acc Interval";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      indent=1;
      enabled_if=["use_thermal_acceleration=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_19_STATE_ONLY|FIELD_NOT_DISCRETIZED;
    },
    field freeze_momentum_field {
      label="Freeze Momentum Field";
      short_label="FM";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field physical_time_scaling {
      label="Physical Time Scaling";
      short_label="Scaling";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1.0";
      indent=1;
      enabled_if=["freeze_momentum_field=Yes"];
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field accelerate_water_film_thickness {
      label="Accelerate Water Film Thickness Development";
      short_label="Accelerate WFT";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      indent=1;
      enabled_if=["freeze_momentum_field=Yes"];
      visible_if=["simopts.water_vapor_transport=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set literal_global_2d_thermal_liquid : literal_global_thermal_liquid {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_literal_global_thermal_liquid : literal_global_thermal_liquid {
  fields = [
    field top_field_placeholder {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field liquid_material {
      label="Liquid Material";
      datatype=FIELD_IS_CHOICE_LIST;
      visible_if=["incompressible=Yes"];
      choices=["User-Defined", "Water", "Ethylene Glycol 30%", "Ethylene Glycol 50%", "FC-77"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    move field characteristic_density,
    field characteristic_density {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field characteristic_viscosity,
    field characteristic_viscosity {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field specific_heat_cp,
    field specific_heat_cp {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];    
    },
    move field fluid_Prandtl_number,
    field fluid_Prandtl_number {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    field use_active_scalar {
      enabled_if=["incompressible=No"];
    },
    field mean_temperature {
      enabled_if=["simopts.mach_regime!=Low || (incompressible=No && use_active_scalar=Yes)"];
    }
  ];
};

parameter_set internal_literal_global_2d_thermal_liquid : literal_global_2d_thermal_liquid {
  fields = [
    field top_field_placeholder {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field liquid_material {
      label="Liquid Material";
      datatype=FIELD_IS_CHOICE_LIST;
      visible_if=["incompressible=Yes"];
      choices=["User-Defined", "Water", "Ethylene Glycol 30%", "Ethylene Glycol 50%", "FC-77"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    move field characteristic_density,
    field characteristic_density {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field characteristic_viscosity,
    field characteristic_viscosity {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field specific_heat_cp,
    field specific_heat_cp {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];    
    },
    move field fluid_Prandtl_number,
    field fluid_Prandtl_number {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    field use_active_scalar {
      enabled_if=["incompressible=No"];
    },
    field mean_temperature {
      enabled_if=["simopts.mach_regime!=Low || (incompressible=No && use_active_scalar=Yes)"];
    }
  ];
};

parameter_set boundary_layer_global_thermal_liquid : literal_global_thermal_liquid {
  fields = [
    field default_nu_over_t {},
    field default_turb_intensity {
      label="Default Turbulence Intensity";
      short_label="Def Turb I";
      datatype=FIELD_IS_UVAL;
      unit_class="Dimensionless";
      default="0.01";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_turb_length_scale {
      label="Default Turbulence Length Scale";
      short_label="Def Turb Len";
      datatype=FIELD_IS_UVAL;
      unit_class="Length";
      default="5 mm";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field fluid_Prandtl_number {
      flags-=FIELD_REQUIRED;
      default="6.5";
    },
    field anechoic_outer_layer {
      label="Anechoic Outer Layer (high viscosity in outermost fluid region to absorb acoustic waves)";
      short_label="Anechoic Layer";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set boundary_layer_global_2d_thermal_liquid : boundary_layer_global_thermal_liquid {
  fields = [
    delete field characteristic_area
  ];
};

parameter_set internal_boundary_layer_global_thermal_liquid : boundary_layer_global_thermal_liquid {
  fields = [
    field top_field_placeholder {},
    field incompressible {
      label="Incompressible Solver";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["simopts.mach_regime=Low"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field liquid_material {
      label="Liquid Material";
      datatype=FIELD_IS_CHOICE_LIST;
      visible_if=["incompressible=Yes"];
      choices=["User-Defined", "Water", "Ethylene Glycol 30%", "Ethylene Glycol 50%", "FC-77"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    move field characteristic_density,
    field characteristic_density {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field characteristic_viscosity,
    field characteristic_viscosity {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    move field specific_heat_cp,
    field specific_heat_cp {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];    
    },
    move field fluid_Prandtl_number,
    field fluid_Prandtl_number {
      visible_if=["incompressible=No || (incompressible=Yes && liquid_material=User-Defined)"];
    },
    field default_turb_length_scale {
      default="0.1 * (Char. Length)";
    },
    field use_active_scalar {
      enabled_if=["incompressible=No"];
    },
    field mean_temperature {
      enabled_if=["simopts.mach_regime!=Low || (incompressible=No && use_active_scalar=Yes)"];
    }
  ];
};

parameter_set internal_boundary_layer_global_2d_thermal_liquid : internal_boundary_layer_global_thermal_liquid {
  fields = [
    delete field characteristic_area
  ];
};

//---------------------END thermal liquid stuff------------------------<

//----------------------END liquid stuff-------------------------------<

parameter_set ni_ref_frame {
  label="Global Body-Fixed";
  flags=PSET_NOT_DISCRETIZED|PSET_AT_MOST_ONE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field use_ni_ref_frame {
      label="Use Non-inertial Reference Frame";
      short_label="Use Ref Frame";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },          
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field reference_frame_label {
      label="Reference point defined in body-fixed frame";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field ref_point_pos_x {
      label="Reference Point Position X";
      short_label="Ref Pt. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field ref_point_pos_y {
      label="Reference Point Position Y";
      short_label="Ref Pt. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field ref_point_pos_z {
      label="Reference Point Position Z";
      short_label="Ref Pt. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field reference_frame_label2 {
      label="Motion (relative to the ground-fixed frame) is expressed using body-fixed coordinates";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED;
    },
    field specify_point_motion_via {
      label="Specify Ref Point Motion Via";
      short_label="Motion Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Acceleration", "Velocity"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field ref_point_accel_x {
      label="Ref Point Acceleration X";
      short_label="Ref Pt. Accel. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["specify_point_motion_via=Acceleration"]; 
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_accel_y {
      label="Ref Point Acceleration Y";
      short_label="Ref Pt. Accel. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["specify_point_motion_via=Acceleration"]; 
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_accel_z {
      label="Ref Point Acceleration Z";
      short_label="Ref Pt. Accel. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["specify_point_motion_via=Acceleration"]; 
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_vel_x_t0 {
      label="Initial Ref Point Velocity X";
      short_label="Init Ref Pt. Vel. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Acceleration"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field ref_point_vel_y_t0 {
      label="Initial Ref Point Velocity Y";
      short_label="Init Ref Pt. Vel. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Acceleration"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field ref_point_vel_z_t0 {
      label="Initial Ref Point Velocity Z";
      short_label="Init Ref Pt. Vel. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Acceleration"]; 
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field ref_point_vel_x {
      label="Ref Point Velocity X";
      short_label="Ref Pt. Vel. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Velocity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_vel_y {
      label="Ref Point Velocity Y";
      short_label="Ref Pt. Vel. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Velocity"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field ref_point_vel_z {
      label="Ref Point Velocity Z";
      short_label="Ref Pt. Vel. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      enabled_if=["specify_point_motion_via=Velocity"]; 
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_x {
      label="Angular Velocity X";
      short_label="Ang. Vel. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_y {
      label="Angular Velocity Y";
      short_label="Ang. Vel. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field angular_vel_z {
      label="Angular Velocity Z";
      short_label="Ang. Vel. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    }
  ];
};

parameter_set ni_ref_frame_2d : ni_ref_frame {
  fields = [
    field ref_point_pos_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field ref_point_accel_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    },
    field ref_point_vel_z_t0 {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field ref_point_vel_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    },
    field angular_vel_x {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field angular_vel_y {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    }
  ];
};

parameter_set rotating_ref_frame {
  label="Local Rotating Body-Fixed";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS|PSET_ALLOW_INCOMPLETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field region {
      label="Axisymmetric Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      filters=["create=PSET_TYPE: cylinder, volume_of_revolution, volume_of_revolution_enclosing"];
      flags=FIELD_INPUT|FIELD_AXISYMMETRIC_REGION_REQUIRED|FIELD_UNIQUE;
    },
    field stationary_mesh {
      label="Stationary Mesh (MRF)";
      short_label="Stationary";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      group="Group 1";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }, 
    field sliding_mesh {
      label="Sliding Mesh";
      short_label="Sliding";
      datatype=FIELD_IS_CHECK_BOX;
      group="Group 1";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }, 
    field boundary_definition {
      label="Boundary Definition";
      short_label="Bound Def";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Axisymmetric Part", "Wall-bounded"];
      enabled_if=["sliding_mesh=No"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field bounding_face {
      label="Bounding Face";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      enabled_if=["boundary_definition=Wall-bounded && stationary_mesh=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field ang_velocity_type {
      label="Angular Velocity Via";
      short_label="Vel Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Specified Below","Measured Torque"];
      init_val="Specified Below";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field angular_velocity {
      label="Angular Velocity";
      short_label="Ang Vel";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="AngularVelocity";
      visible_if=["ang_velocity_type==Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field initial_angular_velocity {
      label="Initial Angular Velocity";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="AngularVelocity";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field resistive_torque {
      label="Resistive Torque";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Torque";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="0";
    },
    field external_torque {
      label="External Torque";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Torque";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="0";
    },
    field meas_window {
      label="Measurement Window";
      datatype=FIELD_IS_PSET;
      indent=1;
      pfamily_identifier="measurement";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Time";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="Meas Window Start Time";
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Time";
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="Meas Window End Time";
    },
    field time_accurate{
      label="Time Accurate";
      init_val="Yes";
      indent=1;
      visible_if=["ang_velocity_type!=Specified Below"];        
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    },        
    field moment_of_inertia {
      label="Moment of Inertia";
      unit_class="MomentOfInertia";
      indent=2;
      datatype=FIELD_IS_UVAL_SCALAR;
      enabled_if=["time_accurate==Yes && ang_velocity_type!=Specified Below"];
      visible_if=["ang_velocity_type!=Specified Below"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
      default="0";
    },
    field display_axis {
      label="Display Ref Frame Axis";
      short_label="Disp RF Axis";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field display_size {
      label="Ref Frame Axis Size";
      short_label="Ref Frame Axis Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_axis=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set gravity {
  label="Gravity/Buoyancy";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field use_gravity_force {
      label="Use Gravity Force";
      short_label="Use Grav";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },          
    field coord_sys {
      label="Gravity Force Coordinate System";
      short_label="Gravity Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      indent=1;
      enabled_if=["use_gravity_force=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field gravity_x {
      label="Gravity X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_gravity_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field gravity_y {
      label="Gravity Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_gravity_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field gravity_z {
      label="Gravity Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_gravity_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field use_body_force {
      label="Use General Body Force";
      short_label="Use Body Force";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field body_force_controls {
      label="Body Force Controls";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Global", "Per Fluid Region"];
      enabled_if=["use_body_force=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field body_force_coord_sys {
      label="Body Force Coordinate System";
      short_label="Body Force Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      indent=2;
      enabled_if=["use_body_force=Yes && body_force_controls=Global"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field acceleration_x {
      label="Acceleration X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_body_force=Yes && body_force_controls=Global"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field acceleration_y {
      label="Acceleration Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_body_force=Yes && body_force_controls=Global"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field acceleration_z {
      label="Acceleration Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      enabled_if=["use_body_force=Yes && body_force_controls=Global"];
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    }
  ];
};

parameter_set gravity_2d : gravity {
  fields = [
    field gravity_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    },
    field acceleration_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    }
  ];
};

parameter_set gravity_thermal : gravity {
  fields = [
  field gravity_z{},
    field use_buoyancy_force {
      label="Use Buoyancy Force";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      enabled_if=["use_gravity_force=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field ref_temp {
      label="Reference Temperature";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Temperature";
      indent=2;
      visible_if=["simopts.mach_regime==Low"];
      enabled_if=["use_gravity_force==Yes && use_buoyancy_force==Yes && (!use_active_scalar || use_active_scalar==No)"];
      default="characteristic_temperature";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field therm_exp_coeff {
      label="Thermal Expansion Coefficient";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="InvTemperature";
      indent=2;
      visible_if=["simopts.mach_regime==Low"];
      enabled_if=["use_gravity_force==Yes && use_buoyancy_force==Yes && (!use_active_scalar || use_active_scalar==No)"];
      default="1/(Char Temperature)";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set gravity_2d_thermal : gravity_thermal {
  fields = [
    field gravity_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    },
    field acceleration_z {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
      delete enabled_if;
    }
  ];
};

// Geometry psets
parameter_set import_stl_ascii {
  label="Import STL";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field filename {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED; // if geom changes, other fields will be discretized
      pathname_filter="STL Files (*.stl *.STL);;All Files (*)";
    },
    field filename_abs {
      label="Full Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED; // if geom changes, other fields will be discretized
    },
    field filename_pattern {
      label="Filename Pattern";
      datatype=FIELD_IS_FILENAME_PATTERN;
      flags=FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      //default="<None>";
      visible_if=["#multi_import_option_family!=0 && #multi_import_option_family!=1"];
    },
    field file_timestamp {
      label="Timestamp";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field length_unit {
      label="Length Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_UI_BREAK;
    },
    field origin_x {
      label="Translate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Translate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Translate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_of_scaling {
      label="Origin of Scaling";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      empty_choice_string="[File Origin]";
      flags=FIELD_INPUT;
    },
    field uniform_scaling {
      label="Scale uniformly in all dimensions";
      short_label="Uniform scale";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["uniform_scaling=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale_x {
      label="Scale X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["uniform_scaling=No"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale_y {
      label="Scale Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["uniform_scaling=No"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale_z {
      label="Scale Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      enabled_if=["uniform_scaling=No"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_x {
      label="Rotate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_y {
      label="Rotate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_z {
      label="Rotate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field face_ids {
      label="Face IDs";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single Face", "Face per Shell", "File IDs"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field face_ids_no_file_option {
      label="Face IDs";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single Face", "Face per Shell"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
//    field apply_import_rules {
//      label="Apply Multi-Import Rules to Faces on Reimport";
//      short_label="Apply Import Rules";
//      datatype=FIELD_IS_CHOICE_LIST;
//      choices=["No", "All Faces", "New Faces Only"];
//      default="No";
//      flags=FIELD_INPUT|FIELD_REQUIRED;
//    },
    field use_file_faces {
      label="File Faces";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field face_per_shell {
      label="Face per Shell";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field contains_onesided {
      label="Contains Open Shells";
      short_label="Contains Open Shells";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field create_bside_faces {
      label="Separate Faces for B-Side of Open Shells";
      short_label="B-Side Faces";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["contains_onesided=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field interference_analysis {
      label="Check for Interfering Facets Within Shells";
      short_label="Check Interference";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field solid {
      label="Add as Solid on Fluid/Solid page";
      short_label="Solid at Import";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field build_bodies {
      label="Combine Nested Shells as Bodies";
      datatype=FIELD_IS_CHECK_BOX;
      default="No";
      flags=FIELD_INPUT;            
    }
  ];
};

parameter_set import_file_pset {
  label="Import File";
  fields = [
    field name {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT;
    },
    field tags {
      label="Segments";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="tag_family";
      visible_if=["#tag_family!=0"];
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set import_nastran : import_stl_ascii {
  label="Import NASTRAN";
  fields = [
    field filename {
      pathname_filter="NASTRAN Files (*.nas *.NAS);;All Files (*)";
    }
  ];
};

parameter_set import_patran : import_stl_ascii {
  label="Import PATRAN";
  fields = [
    field filename {
      pathname_filter="PATRAN Files (*.pat *.PAT);;All Files (*)";
    }
  ];
};

parameter_set import_abaqus : import_stl_ascii {
  label="Import ABAQUS";
  fields = [
    field filename {
      pathname_filter="ABAQUS Files (*.inp *.INP);;All Files (*)";
    }
  ];
};

parameter_set import_non_rectangular_region : import_stl_ascii {
  label="Import Volume from Two Quad Mesh Faces";
  fields = [
    field filename {
      label="Front Filename (NASTRAN Only)"; //"Front Filename (NASTRAN Only)";
      pathname_filter="Quad NASTRAN Files (*.nas *.NAS);;All Files (*)";
    },
    field second_filename {
      label="Back Filename (NASTRAN Only)";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED; // if geom changes, other fields will be discretized
      pathname_filter="Quad NASTRAN Files (*.nas *.NAS);;All Files (*)";
    },
    field second_filename_abs {
      label="Second Full Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED; // if geom changes, other fields will be discretized
    },
    field regeneration_hash {
      label="Regeneration Hash";
      datatype=FIELD_IS_STRING;
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field face_ids {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field face_ids_no_file_option {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field use_file_faces {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field face_per_shell {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field invert {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field contains_onesided {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field create_bside_faces {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field interference_analysis {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field solid {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field build_bodies {
      flags-=FIELD_REQUIRED;
      flags+=FIELD_HIDDEN;
    },
    field shift_x {
      label="Back Offset X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field shift_y {
      label="Back Offset Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field shift_z {
      label="Back Offset Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field file_geom_contents {
      label="File Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field second_file_geom_contents {
      label="Second File Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field AC_Rows {
      label="AC Rows";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field BD_Rows {
      label="BD Rows";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
};

parameter_set region_pset {
  label="Part";
  flags=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|
        PSET_NO_USER_COPY|PSET_NOT_DISCRETIZED;
  wt_sync_fields=["_offset_vrs", "color", "display_mode", "tags",
                  "&&", "_generated_geom", "color", "display_mode",
                  "tags", "&&", "_measurement_planes", "color",
                  "display_mode", "&&", "_ref_frame_measurements",
                  "color", "display_mode"];
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    // Either import or create will be filled in
    // depending on how this was created.
    field import {
      label="Import";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="import";
      flags=FIELD_DELETE_IF_PSET_DELETED|FIELD_HIDDEN;
    },
    field create {
      label="Create";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="create";
      flags=FIELD_DELETE_IF_PSET_DELETED|FIELD_HIDDEN;
    },
    field offset {
      label="Offset";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="offset";
      flags=FIELD_DELETE_IF_PSET_DELETED|FIELD_HIDDEN;
    },
    field geometry {
      label="Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN; // ?? make optional, for err if user create
    },
    field transform {
      label="Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field local_bbox {
      label="Local Bounding Box";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field area {
      label="Area";
      datatype=FIELD_IS_UVAL_SCALAR; // in m^2
      unit_class="Area";
      flags=FIELD_INPUT|FIELD_HIDDEN_IN_DIALOG;
    },
    field color {
      label="Look";
      label_w_details="Look (Standard Model View)";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      default="#F5F5D3"; // Default is off-white
    },
    field color_map {
      label="ColorMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field realistic_look {
      label="Realistic Look";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_SHOW_IN_TABLE_IF_DISABLED;
    },
    field realistic_look_map {
      label="RealisticLookMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field transparency {
      label="Fade";
      label_w_details="Fade (Standard Model View)";
      deprecated_labels=["Transparency"];
      datatype=FIELD_IS_TRANSPARENCY;
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      default="0";
    },
    field transparency_map {
      label="TransparencyMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field display_mode {
      label="Display Mode";
      label_w_details="Display Mode (Standard Model View)";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
     field display_map {
      label="DisplayMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field facets_inverted {
      label="Facets Inverted";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field tags {
      label="Segments";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="tag_family";
      visible_if=["#tag_family!=0"];
      flags=FIELD_INPUT;
    },
    field tags_implicit {
      label="Segments_Implicit";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="tag_family";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field closed_shells {
      label="Closed Shells";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_SHOW_IN_TABLE_IF_DISABLED;
    },
    field open_shells {
      label="Open Shells";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_SHOW_IN_TABLE_IF_DISABLED;
    }
  ];
};

parameter_set box_2_corners {
  label="Box via 2 Corners";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field box2_corner_1_x {
      label="Corner 1 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field box2_corner_1_y {
      label="Corner 1 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field box2_corner_1_z {
      label="Corner 1 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field box2_corner_2_x {
      label="Corner 2 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field box2_corner_2_y {
      label="Corner 2 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field box2_corner_2_z {
      label="Corner 2 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set box_size_point {
  label="Box via Size and Point";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field size_x {
      label="Size X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field size_y {
      label="Size Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field size_z {
      label="Size Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field point_x {
      label="Point X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field point_y {
      label="Point Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field point_z {
      label="Point Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field align_x {
      label="Align X";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Center", "Negative", "Positive"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field align_y {
      label="Align Y";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Center", "Negative", "Positive"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field align_z {
      label="Align Z";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Center", "Negative", "Positive"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set box_via_offset {
  label="Box via Offset";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field region {
      label="Part to Offset:";
      short_label="Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field offset {
      label="Offset Distance";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set solid_via_8_corners {
  label="8 Corner Solid";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field corner_1_x {
      label="Corner 1 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_1_y {
      label="Corner 1 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_1_z {
      label="Corner 1 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_2_x {
      label="Corner 2 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_2_y {
      label="Corner 2 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_2_z {
      label="Corner 2 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_3_x {
      label="Corner 3 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_3_y {
      label="Corner 3 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_3_z {
      label="Corner 3 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_4_x {
      label="Corner 4 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_4_y {
      label="Corner 4 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_4_z {
      label="Corner 4 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_5_x {
      label="Corner 5 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_5_y {
      label="Corner 5 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_5_z {
      label="Corner 5 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_6_x {
      label="Corner 6 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_6_y {
      label="Corner 6 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_6_z {
      label="Corner 6 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_7_x {
      label="Corner 7 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_7_y {
      label="Corner 7 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_7_z {
      label="Corner 7 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_8_x {
      label="Corner 8 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_8_y {
      label="Corner 8 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field corner_8_z {
      label="Corner 8 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set sphere {
  label="Sphere";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field center_x {
      label="Center X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field center_y {
      label="Center Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field center_z {
      label="Center Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field radius {
      label="Radius";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field total_n_facets {
      label="Number of Facets";
      short_label="Num Facets";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["512", "2048", "8192", "32768"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set cylinder {
  label="Cylinder";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field endpoint1_x {
      label="Endpoint 1 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field endpoint1_y {
      label="Endpoint 1 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field endpoint1_z {
      label="Endpoint 1 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field radius1 {
      label="Radius 1";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field endpoint2_x {
      label="Endpoint 2 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field endpoint2_y {
      label="Endpoint 2 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field endpoint2_z {
      label="Endpoint 2 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field radius2 {
      label="Radius 2";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="Radius 1 value";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field n_facets {
      label="Number of Facets Around Circumference";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};

parameter_set hollow_cylinder : cylinder {
  label="Hollow Cylinder";
  fields = [
    field radius1 {
      label="Outer Radius 1";
    },
    field inradius1 {
      label="Inner Radius 1";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field radius2 {
      label="Outer Radius 2";
      default="Outer Radius 1 value";
    },
    field inradius2 {
      label="Inner Radius 2";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="Inner Radius 1 value";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set quad_patch {
  label="Rectangular Mesh";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field alignment {
      label="Alignment";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "-X", "Y", "-Y", "Z", "-Z"];
      //choices=["X-Y", "Y-Z", "X-Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field min_x {
      label="Corner 1 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field min_y {
      label="Corner 1 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field min_z {
      label="Corner 1 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field max_x {
      label="Corner 2 X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["alignment!=X && alignment!=-X"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field max_y {
      label="Corner 2 Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["alignment!=Y && alignment!=-Y"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field max_z {
      label="Corner 2 Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["alignment!=Z && alignment!=-Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field num_segments_x {
      label="Num Segments X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["alignment!=X && alignment!=-X"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field num_segments_y {
      label="Num Segments Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["alignment!=Y && alignment!=-Y"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field num_segments_z {
      label="Num Segments Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["alignment!=Z && alignment!=-Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set polyline_pset {
  label="Polyline";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field origin_x {
      label="Translate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Translate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Translate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="1 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_x {
      label="Rotate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_y {
      label="Rotate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_z {
      label="Rotate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field polyline_pointlist {
      label="Polyline Points";
      datatype=FIELD_IS_TEXT_ENTRY;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_READ_FROM_FILE|FIELD_MINOR; 
    },
    field transformed_polyline_pointlist {
      label="Polyline Points";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN; 
    },
    field is_closed {
      label="Polyline is Closed";
      short_label="Closed";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_polyline {
      label="Display Polyline";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field color {
      label="Color";
      datatype=FIELD_IS_COLOR;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["display_polyline=Yes"];
      default="#F5F5D3"; // Default is off-white
    },
    field size {
      label="Displayed Polyline Point Size";
      short_label="DispPSize";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="5% of polyline bbox";
      enabled_if=["display_polyline=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set axis_pset {
  label="Axis";
  flags=PSET_NOT_DISCRETIZED|PSET_NO_USER_DELETE_IF_DEPENDENTS;
  wt_sync_fields=["_rotational_axes", "display_axis", "color", "size"];
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },    
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field unit_vec_x {
      label="Direction X";
      short_label="Axis x";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field unit_vec_y {
      label="Direction Y";
      short_label="Axis y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field unit_vec_z {
      label="Direction Z";
      short_label="Axis z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field transformed_vec {
      label="Transformed Vector";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },    
    field point_x {
      label="Origin X";
      short_label="Axis Ox";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field point_y {
      label="Origin Y";
      short_label="Axis Oy";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field point_z {
      label="Origin Z";
      short_label="Axis Oz";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field transformed_point {
      label="Transformed Point";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },    
    field display_axis {
      label="Display Axis";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field color {
      label="Color";
      datatype=FIELD_IS_COLOR;
      flags=FIELD_INPUT|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["display_axis=Yes"];
      default="#F5F5D3"; // Default is off-white
    },
    field size {
      label="Displayed Size";
      short_label="DispSize";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
      enabled_if=["display_axis=Yes"];
      default="1 m";
    }
  ];
};

parameter_set volume_of_revolution {
  label="Volume of Revolution via Axis & Polyline";
  sublabel0="Volume of Revolution";
  sublabel1="Specified via Axis & Polyline";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field axis_of_revolution {
      label="Axis of Revolution";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    field polyline {
      label="Polyline";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="polyline";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
    },
    field facet_count {
      label="Number of Facets Around Circumference";
      short_label="# Facets";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field invert {
      label="Invert";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field extracted_polyline {
      label="Extracted Polyline";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field extracted_polyline_xform {
      label="Extracted Polyline Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field extracted_halfplane {
      label="Half Plane Definition";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field extracted_hplane_vec {
      label="Half Plane Vector";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field extracted_local_axis_center_point {
      label="CenterPoint on Local Axis";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field extracted_local_axis {
      label="Local Axis";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field auto_regen_mesh_choice {
      label="Regenerate";
      init_val="Automatically";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Automatically", "On Case Regeneration", "Manual"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field force_regen_mesh {
      label="Force Regeneration";
      init_val="No";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    },
    field out_of_date_mesh {
      label="Mesh Out of Date";
      init_val="Yes";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    }
  ];
};

parameter_set volume_of_revolution_enclosing : volume_of_revolution {
  label="Volume of Revolution via Enclosed Geometry";
  sublabel0="Volume of Revolution";
  sublabel1="Specified via Enclosed Geometry";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field reference_frame { //Obsolete in 111
      label="Reference Frame";
      datatype=FIELD_IS_STRING;
      flags=FIELD_HIDDEN;
    },
    field axis_of_revolution {
      flags-=FIELD_INPUT;
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
      flags-=FIELD_DELETE_IF_PSET_DELETED;
    },
    field polyline {
      flags-=FIELD_INPUT;
      flags+=FIELD_HIDDEN;
      flags-=FIELD_REQUIRED;
      flags-=FIELD_DELETE_IF_PSET_DELETED;
    },
    field gen_coord_sys {
      label="Generated Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field name {
    },
    field vrev_name {
      label="Volume of Revolution Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_HIDDEN;
    },
    field enclosed_geometry {
      label="Enclosed Geometry";
      datatype=FIELD_IS_PSET_LIST; // May include segments too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field compute_axis_dir {
      label="Compute Axis of Revolution Direction";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_x {
      label="Axis Direction X";
      unique_label="Axis Direction X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Axis Direction X :: label:=Axis Direction X"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_y {
      label="Axis Direction Y";
      unique_label="Axis Direction Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Axis Direction Y :: label:=Axis Direction Y"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_dir_z {
      label="Axis Direction Z";
      unique_label="Axis Direction Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      setvalue_expr=["compute_axis_dir==Yes ?? label:=Approximate Axis Direction Z :: label:=Axis Direction Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field compute_axis_origin {
      label="Compute Axis of Revolution Origin";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_x {
      label="Axis Origin X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      indent=1;
      visible_if=["compute_axis_origin==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_y {
      label="Axis Origin Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      indent=1;
      visible_if=["compute_axis_origin==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field rotation_axis_origin_z {
      label="Axis Origin Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      indent=1;
      visible_if=["compute_axis_origin==No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field shape {
      label="Volume of Revolution Shape";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Cylinder","Fitted"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field excluded_geometry {
      label="Excluded Geometry";
      datatype=FIELD_IS_PSET_LIST; // May include segments too
      pfamily_identifier="face";
      visible_if=["shape==Fitted"];
      indent=1;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field clearance_tolerance {
      label="Clearance Tolerance (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["shape==Fitted"];
      default="30";
      indent=1;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field gap_midpoint_tolerance {
      label="Gap Midpoint Tolerance (%)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["shape==Fitted"];
      enabled_if=["shape==Fitted"];   
      default="15";
      indent=1;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field radial_clearance {
      label="Radial Clearance";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      setvalue_expr=["shape==Fitted ?? label:=Clearance :: label:=Radial Clearance"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field axial_clearance {
      label="Axial Clearance";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      visible_if=["shape==Cylinder"];
      enabled_if=["shape==Cylinder"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field annular_vrev {   
      label="Annular Volume of Revolution";
      datatype=FIELD_IS_CHECK_BOX;      
      init_val="No";
      indent=1;
      visible_if=["shape==Fitted"];
      enabled_if=["shape==Fitted"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field min_inner_radius {
      label="Minimum Inner Radius";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      indent=2;
      visible_if=["shape==Fitted"];
      enabled_if=["shape=Fitted && annular_vrev==Yes"];
      default="0";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field facet_count {
    },
    field save_construction {
      label="Create Named Construction Geometry";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field gen_axis_name {
      label="Axis of Revolution";
      datatype=FIELD_IS_STRING;
      indent=1;
      enabled_if=["save_construction==Yes"];
      default="Same as Volume of Revolution";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field gen_csys_name {
      label="Coordinate System at Axis Origin";
      datatype=FIELD_IS_STRING;
      indent=1;
      enabled_if=["save_construction==Yes"];
      default="Same as Volume of Revolution";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field gen_polyline_name {
      label="Polyline";
      datatype=FIELD_IS_STRING;
      indent=1;
      enabled_if=["save_construction==Yes"];
      default="Same as Volume of Revolution";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set boundary_portion_part {
  label="Boundary Portion Part";
  short_label="Boundary Portion Part";
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field geometry {
      label="Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field bounded_geom {
      label="Bounded Geometry";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field bounding_geom {
      label="Bounding Geometry";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field expanded_bounded_geom_list {
      label="Expanded Bounded Geom List"; 
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_HIDDEN;
    },
    field expanded_bounding_geom_list {
      label="Expanded Bounding Geom List";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_HIDDEN;
    },
    field auto_regen_mesh {
      label="Automatically Regenerate";
      init_val="Yes";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field force_regen {
      label="Force Regeneration";
      init_val="No";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    }
  ];
};

parameter_set face_offset_geometry {
  label="Geometry By Face Offset";
  short_label="Geom By Face Off";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field name { 
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field face {
      label="Faces";
      datatype=FIELD_IS_PSET_LIST;   // may include part/face segments too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field expanded_face_list {
      label="Expanded Face List"; 
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="face";
      flags=FIELD_HIDDEN;
    },
    field offset {
      label="Offset";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      custom_unit0="Local Voxels";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field previous_offset {
      label="Previous Offset";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_HIDDEN;
    },
    field back_offset {
      label="Back Offset";
      label_w_details="Back Offset (for split faces)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      custom_unit0="Local Voxels";
      default="Same as Offset";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field previous_back_offset {
      label="Previous Back Offset";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_HIDDEN;
    },
    field level_label {
      label="When 'Local Voxels' is used as a unit (above), the following VR level's voxel size is used:";
      datatype=FIELD_IS_LABEL;
      enabled_if=["offset=#:Local Voxels || back_offset=#:Local Voxels"];   // unit check
      indent=1;
      flags=FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field level {
      label="VR Level";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["offset=#:Local Voxels || back_offset=#:Local Voxels"];   // unit check
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field generate_mesh {
      label="Generate Mesh for Visualization";
      short_label="Generate Mesh";
      init_val="Yes";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field auto_regen_mesh_choice {
      label="Regenerate";
      init_val="Automatically";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Automatically", "On Case Regeneration", "Manual"];
      enabled_if=["generate_mesh=Yes"];
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field force_regen_mesh {
      label="Force Regeneration";
      init_val="No";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    },
    field out_of_date_mesh {
      label="Offset Mesh Out of Date";
      init_val="Yes";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN;
    }
  ];
};

parameter_set region_offset_geometry : face_offset_geometry {
  label="Geometry By Part Offset";
  short_label="Geom By Part Off";
  fields = [
    delete field face,
    field region {
      label="Parts";
      datatype=FIELD_IS_PSET_LIST;   // may include part segments too
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    delete field expanded_face_list,
    field expanded_region_list {
      label="Expanded Region List";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="region";
      flags=FIELD_HIDDEN;
    }
  ];
};

parameter_set face_pset {
  label="Entire-part Face";
  flags=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|PSET_NO_USER_COPY;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field region {
      label="Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_OFFSET_PSET_ALLOWED|FIELD_QUAD_PATCH_PSET_ALLOWED;
    },
    field geometry {
      label="Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field resultant_geometry {
      label="Resultant Geometry";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field color {
      label="Look";
      label_w_details="Look (Standard Model View)";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      default="Same as Parent";
    },
    field color_map {
      label="ColorMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field realistic_look {
      label="Realistic Look";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_SHOW_IN_TABLE_IF_DISABLED;
      init_val="Same as Parent";
    },
    field realistic_look_map {
      label="RealisticLookMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field transparency {
      label="Fade";
      label_w_details="Fade (Standard Model View)";
      deprecated_labels=["Transparency"];
      datatype=FIELD_IS_TRANSPARENCY;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_USE_REQUIRED_LABEL_FONT;
      default="Same as Parent";
    },
    field transparency_map {
      label="TransparencyMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field display_mode {
      label="Display Mode";
      label_w_details="Display Mode (Standard Model View)";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Same as Parent", "Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
     field display_map {
      label="DisplayMap";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field precedence {
      label="Precedence";
      label_w_details="Precedence (higher numbers take precedence)";
      short_label="Precedence";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field num_facets {
      label="Num Facets";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN_IN_DIALOG;
    },
    field face_area {
      label="Face Area";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Area";
      flags=FIELD_INPUT|FIELD_HIDDEN_IN_DIALOG;
    },
    field face_bbox {
      label="Face Bounding Box";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field face_local_bbox {
      label="Face Local Bounding Box";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field tags {
      label="Segments";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="tag_family";
      visible_if=["#tag_family!=0"];
      flags=FIELD_INPUT;
    },
    field tags_implicit{
      label="Segments_Implicit";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="tag_family";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
};

parameter_set file_face_pset : face_pset {
  label="Faces Named from File";
  short_label="File Faces";
  fields = [
    field name {
      flags+=FIELD_INPUT;
    },
    field nameinfile {
      label="File ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field region {
      flags-=FIELD_OFFSET_PSET_ALLOWED;
    }
  ];
};

parameter_set shell_face_pset : file_face_pset {
  label="Per Shell Faces";
  short_label="Shell Faces";
  fields = [
    delete field nameinfile
  ];
};

parameter_set group_face_pset : shell_face_pset {
  label="Per Group Faces";
  short_label="Group Faces";
  fields = [
    field groupName {
      label="Group Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    }
  ];
};

parameter_set boundary_portion_face : shell_face_pset {
  label="Boundary Portion";
  delete flags;
  fields = [
    field region { //Bounded Region
      label="Create Face on Part";
      short_label="Region";
      flags-=FIELD_QUAD_PATCH_PSET_ALLOWED;
      flags+=FIELD_INPUT;
    },
    field previous_region {//previous bounded region
      label="Previous Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      flags=FIELD_HIDDEN|FIELD_DELETE_IF_PSET_DELETED|FIELD_OFFSET_PSET_ALLOWED|FIELD_QUAD_PATCH_PSET_ALLOWED;
    },
    field bounding_region {
      label="Bounding Part";
      short_label="Bound";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field geometry {
      flags-=FIELD_REQUIRED;
    }
  ];
};

parameter_set plus_x_face : shell_face_pset {
  label="Plus X Face";
  delete flags;
  fields = [
    field region {
      flags+=FIELD_INPUT;
    },
    field geometry {
      flags-=FIELD_REQUIRED;
    },
    delete field display_mode
  ];
};

parameter_set bside_face_pset : face_pset {
  label="B-Side Face";
  flags-=PSET_NO_USER_DELETE;
  fields = [
    field name {
      flags+=FIELD_INPUT;
    },
    field a_side_face {
      label="Side A";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field region {
      flags-=FIELD_OFFSET_PSET_ALLOWED;
    }
  ];
};

parameter_set point_pset {
  label="Point";
  //flags=PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="With Respect to Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field x {
      label="X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field y {
      label="Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field z {
      label="Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_point {
      label="Display Point";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field color {
      label="Color";
      datatype=FIELD_IS_COLOR;
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["display_point=Yes"];
      default="#F5F5D3"; // Default is off-white
    },
    field size {
      label="Displayed Size";
      short_label="DispSize";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_point=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field transformed_point {
      label="Transformed Point";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    }
  ];
};

parameter_set coord_sys_via_cartesian {
  label="Coordinate System via Cartesian Coordinates";
  sublabel0="Via Cartesian Coordinates";
  short_label="Coord Sys via Cartesian Coords";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field root_csys {
      label="Parent Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field origin_x {
      label="Origin X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Origin Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Origin Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_x {
      label="X-Axis Vector X";
      short_label="X-Axis X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_y {
      label="X-Axis Vector Y";
      short_label="X-Axis Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_z_no_units {
      label="X-Axis Vector Z";
      short_label="X-Axis Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_x {
      label="Y-Axis Vector X";
      short_label="Y-Axis X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_y {
      label="Y-Axis Vector Y";
      short_label="Y-Axis Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_z_no_units {
      label="Y-Axis Vector Z";
      short_label="Y-Axis Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_axes {
      label="Display Axes";
      short_label="Disp Axes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field display_size {
      label="Display Size";
      short_label="Disp Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field display_name {
      label="Display Name";
      short_label="Disp Name";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      init_val="No";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field font_size {
      label="Font Size";
      short_label="Font Size";
      datatype=FIELD_IS_NUMBER;
      default="11";
      enabled_if=["display_axes=Yes && display_name=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field l_to_g_xform {
      label="Local to Global Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field g_to_l_xform {
      label="Global to Local Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    }
  ];
};

parameter_set coord_sys_via_cylindrical {
  label="Coordinate System via Cylindrical Coordinates";
  sublabel0="Via Cylindrical Coordinates";
  short_label="Coord Sys via Cylindrical Coords";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field root_csys {
      label="Parent Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field origin_r {
      label="Origin R";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_theta {
      label="Origin Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Origin Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_r {
      label="X-Axis Vector R";
      short_label="X-Axis R";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_theta {
      label="X-Axis Vector Theta";
      short_label="X-Axis Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_z {
      label="X-Axis Vector Z";
      short_label="X-Axis Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field yaxis_r {
      label="Y-Axis Vector R";
      short_label="Y-Axis R";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_theta {
      label="Y-Axis Vector Theta";
      short_label="Y-Axis Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_z {
      label="Y-Axis Vector Z";
      short_label="Y-Axis Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_DONT_CACHE_VALUE;
    },
    field display_axes {
      label="Display Axes";
      short_label="Disp Axes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_size {
      label="Display Size";
      short_label="Disp Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_name {
      label="Display Name";
      short_label="Disp Name";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      init_val="No";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field font_size {
      label="Font Size";
      short_label="Font Size";
      datatype=FIELD_IS_NUMBER;
      default="11";
      enabled_if=["display_axes=Yes && display_name=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field l_to_g_xform {
      label="Local to Global Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field g_to_l_xform {
      label="Global to Local Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    }
  ];
};

parameter_set coord_sys_via_spherical {
  label="Coordinate System via Spherical Coordinates";
  sublabel0="Via Spherical Coordinates";
  short_label="Coord Sys via Spherical Coords";
  flags=PSET_NO_USER_DELETE_IF_DEPENDENTS;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field root_csys {
      label="Parent Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_POINTS_TO_OWN_FAMILY;
    },
    field origin_rho {
      label="Origin Rho";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_theta {
      label="Origin Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field origin_phi {
      label="Origin Phi";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_theta {
      label="X-Axis Vector Theta";
      short_label="X-Axis Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field xaxis_phi {
      label="X-Axis Vector Phi";
      short_label="X-Axis Phi";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_theta {
      label="Y-Axis Vector Theta";
      short_label="Y-Axis Theta";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field yaxis_phi {
      label="Y-Axis Vector Phi";
      short_label="Y-Axis Phi";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_axes {
      label="Display Axes";
      short_label="Disp Axes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_size {
      label="Display Size";
      short_label="Disp Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_name {
      label="Display Name";
      short_label="Disp Name";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      init_val="No";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field font_size {
      label="Font Size";
      short_label="Font Size";
      datatype=FIELD_IS_NUMBER;
      default="11";
      enabled_if=["display_axes=Yes && display_name=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field l_to_g_xform {
      label="Local to Global Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field g_to_l_xform {
      label="Global to Local Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    }
  ];
};

parameter_set default_coord_sys {
  label="Default Coordinate System";
  short_label="Default Csys";
  flags=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|PSET_NO_USER_COPY;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field display_axes {
      label="Display Axes";
      short_label="Disp Axes";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_size {
      label="Display Size";
      short_label="Disp Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field display_name {
      label="Display Name";
      short_label="Disp Name";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      init_val="No";
      enabled_if=["display_axes=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field font_size {
      label="Font Size";
      short_label="Font Size";
      datatype=FIELD_IS_NUMBER;
      default="11";
      enabled_if=["display_axes=Yes && display_name=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field l_to_g_xform {
      label="Local to Global Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field g_to_l_xform {
      label="Global to Local Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    }
  ];
};

parameter_set symmetry_plane {
  label="Symmetry Plane";
  short_label="Sym Plane";
  fields = [
    field dimension {
      label="Dimension";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "Y", "Z"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
//    field coord_sys {
//      label="With Respect to Coordinate System";
//      short_label="Csys";
//      datatype=FIELD_IS_PSET;
//      pfamily_identifier="coord_sys";
//      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_NOT_DISCRETIZED;
//    },
    field position {
      label="Position";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED;
    },
    field active_side {
      label="Active Side";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Positive", "Negative"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_plane {
      label="Display Plane";
      short_label="Disp Plane";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field color {
      label="Color of Active Side";
      datatype=FIELD_IS_COLOR;
      enabled_if=["display_plane=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      default="#00FF00"; // Default is green
    },
    field inactive_color {
      label="Color of Inactive Side";
      datatype=FIELD_IS_COLOR;
      enabled_if=["display_plane=Yes"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      default="#FF0000"; // Default is red
    }
   ];
};

parameter_set import_coupling_model {
  label="Model Import";
  flags=PSET_NO_USER_MULTI_MODIFY|PSET_NOT_DISCRETIZED|PSET_ALLOW_INCOMPLETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coupling_program {
      label="Couple To";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=[]; // TPI will provide choices in UI
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coupling_units { // should be one for export/import?
      label="Coupling Type";
      short_label="Type";
      datatype=FIELD_IS_UNIT_CLASS_LIST;
      sublabel="Surface Property Units";
      subdatatype=FIELD_IS_UNIT;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field filename {
      label="Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field filename_abs {
      label="Full Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN;
    },
    field file_timestamp {
      label="Timestamp";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field results_filename {
      label="Results Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_INPUT|FIELD_HIDDEN; // only hidden for now
    },
    field results_filename_abs {
      label="Full Results Filename";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN;
    },
    field results_file_timestamp {
      label="Results Timestamp";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field use_partial {
      label="Use Partial Model";
      short_label="Partial";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field load_data {
      label="Load Data for Visualization in PowerCASE";
      short_label="Load Data";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field map_to_assigned_t {
      label="Assigned Temperature Parts are BC Eligible";
      short_label="Assigned T";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field coord_sys {
      label="Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field length_unit {
      label="Length Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_x {
      label="Translate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Translate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Translate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_x {
      label="Rotate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_y {
      label="Rotate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_z {
      label="Rotate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field start_time {
      label="Time of First Calculation";
      short_label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_HIDDEN;
    },
    field period {
      label="Period Between Calculations";
      short_label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_HIDDEN;
    },
    field interval {
      label="Averaging Interval";
      short_label="Avg";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_HIDDEN;
    },
    field delay {
      label="Data Import Delay";
      short_label="Delay";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_HIDDEN;
    },
    field phases {
      label="Phases";
      datatype=FIELD_IS_PSET_LIST;
      layout_class="TABLE";
      pfamily_identifier="coupling_model_import_phases_family";
      pfamily_unique_field="start_time";
      flags=FIELD_INPUT|FIELD_LABEL_BOLD|FIELD_DELETE_IF_PSET_DELETED|FIELD_LABEL_ON_TOP|FIELD_CLONE_ON_PSET_COPY;
    },
    field stop_coupling_after {
      label="Stop Coupling After";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Specified End Time", "Specified Number of Calculations"];
      init_val="Specified Number of Calculations";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      enabled_if=["stop_coupling_after=Specified End Time"];
      default="Infinite";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field iterations {
      label="Number of Calculations";
      short_label="# Calculations";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_if=["stop_coupling_after=Specified Number of Calculations"];
      default="Infinite";
      flags=FIELD_INPUT;
    },
    field partial_list {
      label="Partial Model";
      datatype=FIELD_IS_MODEL;
      flags=FIELD_HIDDEN;
    },
    field model {
      label="Model";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_HIDDEN;
    }
  ];
};

parameter_set coupling_model_import_phases {
  label="Coupling Model Import Phases";
  flags=PSET_DELETE_ON_NO_DEPENDENTS|PSET_NOT_DISCRETIZED;
  fields = [
    field id {
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN|FIELD_RANDOM;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field period {
      label="Period";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field interval {
      label="Averaging Interval";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="Period";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field delay {
      label="Import Delay";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0 timesteps";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set coupling_model {
  label="Coupled Model Component";
  flags=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|PSET_NO_USER_COPY|PSET_NOT_DISCRETIZED; //|PSET_NO_USER_MULTI_MODIFY;
  fields = [
    field fullname {
      label="Full Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field model_item {
      label="Model Item";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_HIDDEN;
    },
    field model_type {
      label="Component Type";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field import {
      label="Model";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coupling_import_family";
      flags=FIELD_DELETE_IF_PSET_DELETED|FIELD_REQUIRED;
    },
    field transform {
      label="Transform";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_HIDDEN;
    },
    field color {
      label="Look";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      default="#C0C0C0"; // Default is light gray
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field back_color {
      label="Back Look";
      deprecated_labels=["Back Color"];
      datatype=FIELD_IS_LOOK;
      default="#808080"; // Default is dark gray
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field display_mode {
      label="Display Mode";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["", "Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid", "Image"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field assign {
      label="Coupled Surface";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["", "Yes", "No"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field side {
      label="Side";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Both", "Front", "Back"];
      indent=1;
      enabled_if=["assign=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field max_match_distance {
      label="Max Match Distance";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="2% part size";
      indent=1;
      enabled_if=["assign=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field max_match_angle {
      label="Max Match Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="45 deg";
      indent=1;
      enabled_if=["assign=Yes"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field constraints {
      label="Data Sources";
      datatype=FIELD_IS_GEOM_MODEL;
      indent=1;
      enabled_if=["assign=Yes"];
      flags=FIELD_INPUT;
    },
    field percent_match {
      label="% Match";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN_IN_DIALOG;
    },
    field surface_data {
      label="Surface Data";
      datatype=FIELD_IS_OPAQUE;
      flags=FIELD_HIDDEN;
    },
    field num_facets {
      label="Num Facets";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_INPUT|FIELD_HIDDEN_IN_DIALOG;
    },
    field has_children {
      label="Has Children";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_HIDDEN|FIELD_REQUIRED;
    }
  ];
};

parameter_set coupling_model_component : coupling_model {
  fields = [
    field color {
      default="";
      flags-=FIELD_REQUIRED;
    },
    field back_color {
      default="";
      flags-=FIELD_REQUIRED;
    },
    field display_mode {
      choices=["Same as Parent", "Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid", "Image"];
    },
    // 2010/04/02 - scope - The following two fields had their polarity
    // reversed.  They used to be negative (Ineligible rather than Eligible)
    // and their pfield ids still reflect that.
    field target_ineligible {
      label="Eligible for CFD Boundary Condition";
      short_label="BC Eligible";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field source_ineligible {
      label="Results Available During Simulation";
      short_label="Results Avail";
      datatype=FIELD_IS_STRING;
      flags=FIELD_REQUIRED;
    },
    field assign {
      choices=["Same as Parent", "Yes", "No"];
    },
    field group {
      label="Parent Model";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coupling_model_family";
      flags=FIELD_DELETE_IF_PSET_DELETED|FIELD_HIDDEN;
    }
  ];
};

parameter_set import_mapping {
  label="PowerFLOW Model Coupled Face";
  flags=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|PSET_NO_USER_COPY|PSET_NOT_DISCRETIZED;//|PSET_NO_USER_MULTI_MODIFY;
  fields = [
    field face {
      label="Face";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="face";
      flags=FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field region {
      label="Part";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      flags=FIELD_REQUIRED;
    },
    field import {
      label="Source Model";
      short_label="Source";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coupling_import_family";
      flags=FIELD_INPUT;
    },
    field initial_conditions {
      label="Initial Boundary Conditions";
      datatype=FIELD_IS_UNIT_CLASS_LIST;
      subdatatype=FIELD_IS_UVAL_SCALAR;
      source_field="import:coupling_units:$tpi_import";
      enabled_if=["import!="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field prefer_initial_conditions_in_model {
      label="Use Results in Source Model as Initial Boundary Conditions";
      label_w_details="Use Results in Source Model as Initial Boundary Conditions (if available)";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["import!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field max_match_distance {
      label="Max Match Distance";
      short_label="Max Match Dist";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="2% face size";
      enabled_if=["import!="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field max_match_angle {
      label="Max Match Angle";
      short_label="Max Match Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="45 deg";
      enabled_if=["import!="];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field constraints {
      label="Data Sources";
      datatype=FIELD_IS_MODEL;
      source_field="import:partial_list:$front_back";
      enabled_if=["import!="];
      flags=FIELD_INPUT;
    },
    field percent_match {
      label="% Match";
      datatype=FIELD_IS_NUMBER;
      flags=FIELD_HIDDEN_IN_DIALOG;
    },
    field coupled_surface {
      label="Coupled Surface";
      short_label="Surface";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface";
      flags=FIELD_HIDDEN|FIELD_DELETE_IF_PSET_DELETED;
    }
  ];
};

parameter_set viewer_settings {
  label="Viewer Settings";
  flags=PSET_NOT_DISCRETIZED|PSET_ENSURE_CREATED;
  fields = [
    field variable {
      label="Variable";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=[]; // TPI will provide choices in UI
      flags=FIELD_INPUT;//|FIELD_REQUIRED;
    },
    field available_variables {
      label="Variable";
      datatype=FIELD_IS_OPAQUE; // a std::set of tpi var types
      flags=FIELD_HIDDEN;
    },
    field unit {
      label="Unit";
      datatype=FIELD_IS_UNIT;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_NO_CHANGEABLE_UNITS;
    },
    field minimum {
      label="Minimum";
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER_ENTRY;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field maximum {
      label="Maximum";
      datatype=FIELD_IS_NUMBER;
      display_mode=FIELD_DISPLAY_AS_SLIDER_ENTRY;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field hard_minimum {
      label="Hard Minimum";
      datatype=FIELD_IS_NUMBER;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field hard_maximum {
      label="Hard Maximum";
      datatype=FIELD_IS_NUMBER;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_HIDDEN;
    },
    field show_legend {
      label="Show Legend";
      datatype=FIELD_IS_CHECK_BOX;
      enabled_if=["variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NO_SWITCH_WARNING;
    },
    field orientation {
      label="Orientation";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Horizontal", "Vertical"];
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field ticks {
      label="Number of Ticks";
      short_label="Ticks";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      default="4";
      flags=FIELD_INPUT;
    },
    field font_size {
      label="Font Size";
      short_label="Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      default="12";
      flags=FIELD_INPUT;
    },
    field font_color {
      label="Font Color";
      short_label="Color";
      datatype=FIELD_IS_COLOR;
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      default="#ffffff";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field label_format {
      label="Label Format";
      short_label="Format";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Fixed", "Scientific (e)", "Scientific (E)", "Adjusted (e)", "Adjusted (E)"];
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field sig_figs {
      label="Significant Figures";
      short_label="Sig Figs";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      indent=1;
      enabled_if=["show_legend=Yes && variable!="];
      default="3";
      flags=FIELD_INPUT;
    },
    field background_color {
      label="Background Color";
      short_label="Background Color";
      datatype=FIELD_IS_COLOR;
      init_val="#0f0f0f";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field bottom_background_color {
      label="Bottom Background Color";
      short_label="Bottom Background Color";
      datatype=FIELD_IS_COLOR;
      init_val="#464646";
      flags=FIELD_INPUT|FIELD_HIDDEN;
    },
    field invalid_color {
      label="Missing-Data Color";
      datatype=FIELD_IS_COLOR;
      default="#bebebe"; // gray
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NO_SWITCH_WARNING;
    }
   ];
};

parameter_set multi_import_option {
  label="Import Option";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field pattern {
      label="Filename Pattern";
      short_label="Pattern";
      default="*";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT;
    },
    field case_sensitive {
      label="Use Case Sensitive Pattern Matching";
      short_label="Case Sens";
      init_val="Yes";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    },
    field tag {
      label="Segment";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      flags=FIELD_INPUT;
    },
    field color {
      label="Look";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      flags=FIELD_INPUT;
      default="[none]";
      empty_choice_string=" ";
    },
    field transparency {
      label="Fade";
      deprecated_labels=["Transparency"];
      datatype=FIELD_IS_TRANSPARENCY;
      flags=FIELD_INPUT;
      default="[none]";
      empty_choice_string=" ";
    },
    field display_mode {
      label="Display Mode";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field face_ids {
      label="Face IDs";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Single Face", "Face per Shell", "File IDs"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field invert {
      label="Invert";
      short_label="I";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field contains_onesided {
      label="Contains Open Shells";
      short_label="O";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field create_bside_faces {
      label="Separate Faces for B-Side of Open Shells";
      short_label="B";
      enabled_if=["contains_onesided=Yes"];
      indent=1;
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field interference_analysis {
      label="Check for Interfering Facets Within Shells";
      short_label="C";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field solid {
      label="Add as Solid on Fluid/Solid page";
      short_label="S";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field build_bodies {
      label="Combine Nested Shells as Bodies";
      short_label="Combine Nested";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["No", "Yes"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;            
    },
    field coord_sys {
      label="Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    },
    field origin_of_scaling {
      label="Origin of Scaling";
      short_label="OoS";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["[File Origin]", "SECONDARY VALUE"];
      empty_choice_string=" ";
      flags=FIELD_INPUT|FIELD_HAS_SECONDARY_FIELD|FIELD_NOT_DISCRETIZED;
    },
    field secondary_origin_of_scaling {
      label="Secondary Origin of Scaling";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      flags=FIELD_INPUT|FIELD_HIDDEN|FIELD_NOT_DISCRETIZED;
    },
    field length_unit {
      label="Length Unit";
      short_label="Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT;
    },
    field scale {
      label="Scale X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      layout_class="XYZ";
      enabled_if=["length_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale_y {
      label="Scale Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      layout_class="XYZ";
      enabled_if=["length_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field scale_z {
      label="Scale Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      layout_class="XYZ";
      enabled_if=["length_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_unit {
      label="Translation Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT;
    },
    field origin_x {
      label="Translate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      layout_class="XYZ";
      enabled_if=["origin_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Translate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      layout_class="XYZ";
      enabled_if=["origin_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Translate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      layout_class="XYZ";
      enabled_if=["origin_unit!="];
      indent=1;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set multi_import_option_default : multi_import_option {
  flags+=PSET_NO_USER_DELETE|PSET_NO_USER_MOVE;
  fields = [
    field pattern {
      flags-=FIELD_INPUT;
      flags+=FIELD_REQUIRED;
    },
    field color {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
      default="#F5F5D3"; // Default is off-white
    },
    field transparency {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
      default="0";
    },
    field display_mode {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
      default="Solid";
    },
    field face_ids {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field invert {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field contains_onesided {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field create_bside_faces {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field interference_analysis {
      default="Yes";
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field solid {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field build_bodies {
      default="No";
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field coord_sys {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field origin_of_scaling {
      delete empty_choice_string;
      flags+=FIELD_REQUIRED;
    },
    field length_unit {
      flags+=FIELD_REQUIRED;
    },
    field scale {
      delete enabled_if;
      //indent=0;
    },
    field scale_y {
      delete enabled_if;
      //indent=0;
    },
    field scale_z {
      delete enabled_if;
      //indent=0;
    },
    field origin_x {
      default="0";
    },
    field origin_y {
      default="0";
    },
    field origin_z {
      default="0";
    },
    field origin_unit {
      flags+=FIELD_REQUIRED;
    }
  ];
};

parameter_set multi_import_positioning {
  label="Positioning";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field coord_sys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field length_unit {
      label="Length Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field scale {
      label="Scale";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_x {
      label="Translate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_y {
      label="Translate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field origin_z {
      label="Translate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      default="0 m";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_x {
      label="Rotate X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_y {
      label="Rotate Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field rotate_z {
      label="Rotate Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    }
  ];
};

parameter_set multi_import_face_option {
  label="Face Tagging Option";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field tag_via {
      label="Partition Face Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Pattern", "File ID Range"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field pattern {
      label="Face Name Pattern";
      datatype=FIELD_IS_STRING;
      default="*";
      indent=1;
      enabled_if=["tag_via=Pattern"];
      flags=FIELD_INPUT;
    },
    field case_sensitive {
      label="Use Case Sensitive Pattern Matching";
      short_label="Case Sens";
      init_val="Yes";
      indent=1;
      enabled_if=["tag_via=Pattern"];
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT;
    },
    field min_pid {
      label="Min File ID";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="No minimum";
      indent=1;
      enabled_if=["tag_via=File ID Range"];
      flags=FIELD_INPUT;
    },
    field max_pid {
      label="Max File ID";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="No maximum";
      indent=1;
      enabled_if=["tag_via=File ID Range"];
      flags=FIELD_INPUT;
    },
    field tag {
      label="Segment";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="tag_family";
      pset_identifier="tag";
      filters=["subtype=face"];
      flags=FIELD_INPUT|FIELD_DELETE_IF_PSET_DELETED;
    },
    field color {
      label="Look";
      deprecated_labels=["Color"];
      datatype=FIELD_IS_LOOK;
      flags=FIELD_INPUT;
      default="[none]";
      empty_choice_string=" ";
    },
    field transparency {
      label="Fade";
      deprecated_labels=["Transparency"];
      datatype=FIELD_IS_TRANSPARENCY;
      flags=FIELD_INPUT;
      default="[none]";
      empty_choice_string=" ";
    },
    field display_mode {
      label="Display Mode";
      short_label="Display";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Same as Parent", "Hidden", "Wireframe", "Outline", "Solid + Wireframe", "Solid"];
      empty_choice_string=" ";
      flags=FIELD_INPUT;
    }
  ];
};

parameter_set multi_import_file_info {
  label="Import File Info";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field directory {
      label="Directory";
      datatype=FIELD_IS_PATHNAME;
      default="Case directory";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_IS_DIRECTORY;
      //pathname_filter="*";
    },
    field directory_abs {
      label="Full Directory";
      datatype=FIELD_IS_PATHNAME;
      flags=FIELD_HIDDEN;
    },
    field files {
      label="Files";
      datatype=FIELD_IS_PATHNAME;
      default="";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_IS_SAVE_FILENAME;
      //pathname_filter="*";
    }
  ];
};

parameter_set realistic_look {
  label="Realistic Look";
  flags=PSET_NOT_DISCRETIZED|PSET_NO_USER_CREATE|PSET_NO_USER_COPY;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_SHOW_IN_TABLE_IF_DISABLED;
      enabled_if=["name!=Default SPS && name!=Default Look && name!=Emissive SPS"];
    },
    field type {
      label="Type";
      datatype=FIELD_IS_STRING;
      flags=FIELD_NOT_DISCRETIZED;
    },
    field origin {
      label="Origin";
      datatype=FIELD_IS_STRING;
      flags=FIELD_NOT_DISCRETIZED;
    },
    field serialized_look {
      label="Look String";
      datatype=FIELD_IS_STRING; // Base64-encoded serialized look
      flags=FIELD_HIDDEN;
    }
  ];
};

parameter_set viewpoint {
  label="Viewpoint";
  flags=PSET_NOT_DISCRETIZED;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field coord_sys {
      label="Coordinate System";
      short_label="Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field preserve_location {
      label="Preserve Location on Coordinate System Change";
      short_label="Preserve Loc.";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field camera_position_unit {
      label="Camera Position Unit";
      short_label="Pos. Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field camera_position_x {
      label="Camera Position X";
      short_label="Pos. X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field camera_position_y {
      label="Camera Position Y";
      short_label="Pos. Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field camera_position_z {
      label="Camera Position Z";
      short_label="Pos. Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field view_direction_x {
      label="View Direction X";
      short_label="View Dir X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field view_direction_y {
      label="View Direction Y";
      short_label="View Dir Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field view_direction_z {
      label="View Direction Z";
      short_label="View Dir Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field up_direction_x {
      label="Up Direction X";
      short_label="Up Dir X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field up_direction_y {
      label="Up Direction Y";
      short_label="Up Dir Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field up_direction_z {
      label="Up Direction Z";
      short_label="Up Dir Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field projection_type {
      label="Projection Type";
      short_label="Proj. Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Orthographic", "Perspective"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field orthographic_fov {
      label="Orthographic Field of View";
      short_label="Ortho. View";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      //enabled_if=["projection_type=Orthographic"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field perspective_fov {
      label="Perspective Field of View";
      short_label="Per. View";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      //enabled_if=["projection_type=Perspective"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spin_center_unit {
      label="Spin Center Unit";
      short_label="Center Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spin_center_x {
      label="Spin Center X";
      short_label="Center X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spin_center_y {
      label="Spin Center Y";
      short_label="Center Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spin_center_z {
      label="Spin Center Z";
      short_label="Center Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      layout_class="XYZ";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set clipping_plane {
  label = "Clipping Plane";
  flags = PSET_NOT_DISCRETIZED | PSET_NO_USER_MULTI_MODIFY;
  fields = [
    field name {
      label = "Name";
      datatype = FIELD_IS_STRING;
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field enabled {
      label = "Enabled";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "Yes";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field csys {
      label = "Coordinate System";
      short_label = "Csys";
      datatype = FIELD_IS_PSET;
      pfamily_identifier = "coord_sys";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field direction {
      label = "Direction";
      datatype = FIELD_IS_CHOICE_LIST;
      choices = ["X", "Y", "Z"];
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_HIDDEN;
    },
    field orientation {
      label = "Orientation";
      datatype = FIELD_IS_NUMBER;
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_HIDDEN;
    },
    field position_unit {
      label="Position Unit";
      datatype=FIELD_IS_UNIT;
      unit_class="Length";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field position_x {
      label = "Position X";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field position_y {
      label = "Position Y";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field position_z {
      label = "Position Z";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field normal_x {
      label = "Normal X";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field normal_y {
      label = "Normal Y";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field normal_z {
      label = "Normal Z";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      layout_class = "XYZ";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field enable_slice {
      label = "Enable Slice";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field slice_thickness {
      label = "Slice Thickness";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      enabled_if = ["enable_slice = Yes"];
      default = "0.1";
      flags = FIELD_INPUT;
      indent = 1;
    },
    field show_clip_plane {
      label = "Show Clipping Plane";
      short_label = "Show Plane";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "Yes";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field clip_plane_color {
      label = "Clipping Plane Color";
      short_label = "Plane Color";
      datatype = FIELD_IS_COLOR;
      enabled_if = ["show_clip_plane = Yes"];
      default = "#eeeeee";
      flags = FIELD_INPUT;
      indent = 1;
    },
    field clip_plane_transparency {
      label = "Clipping Plane Transparency";
      short_label = "Transparency";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      enabled_if = ["show_clip_plane = Yes"];
      default = "90.0";
      flags = FIELD_INPUT;
      indent = 1;
    },
    field show_cut_lines {
      label = "Show Cut Lines";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field cut_lines_color {
      label = "Cut Lines Color";
      datatype = FIELD_IS_COLOR;
      enabled_if = ["show_cut_lines = Yes"];
      default = "#ffffff";
      flags = FIELD_INPUT;
      indent = 1;
    },
    field show_end_caps {
      label = "Show End Caps";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "No";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field end_caps_color {
      label = "End Caps Color";
      datatype = FIELD_IS_COLOR;
      enabled_if = ["show_end_caps = Yes"];
      default = "#ffffff";
      flags = FIELD_INPUT;
      indent = 1;
    },
    field show_jack {
      label = "Show Jack";
      datatype = FIELD_IS_CHECK_BOX;
      init_val = "Yes";
      flags = FIELD_INPUT | FIELD_REQUIRED;
    },
    field jack_size_relative_to_window {
      label = "Size Relative to Window (%)";
      shortlabel = "Jack Size (%)";
      datatype = FIELD_IS_UVAL_SCALAR;
      unit_class = "Dimensionless";
      enabled_if = ["show_jack = Yes"];
      default = "20.0";
      flags = FIELD_INPUT;
      indent = 1;
    }
  ];
};

parameter_set particle_globals {
  label="Globals";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field dispersion_box {
      label="Dispersion Box";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="region";
      filters=["create=PSET_TYPE: box_*"];
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field apply_gravity {
      label="Apply Gravity";
      datatype=FIELD_IS_CHECK_BOX;
      default="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field gravity_csys {
      label="Gravity Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      indent=1;
      enabled_if=["apply_gravity=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field gravity_x {
      label="Gravity X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      indent=1;
      enabled_if=["apply_gravity=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED;
    },
    field gravity_y {
      label="Gravity Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      indent=1;
      enabled_if=["apply_gravity=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED;
    },
    field gravity_z {
      label="Gravity Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Acceleration";
      indent=1;
      enabled_if=["apply_gravity=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED;
    },
    field coupled_momentum_solver {
      label="Coupled Particle/Momentum Solver";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field default_emitter_start {
      label="Default Emitter Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_emitter_end {
      label="Default Emitter End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="last timestep";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_max_particle_age {
      label="Default Max Particle Age";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="unlimited";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_max_num_reflections {
      label="Default Max Num Reflections";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="unlimited";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field default_min_particle_velocity {
      label="Default Min Particle Velocity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="0";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set liquid_particle_material {
  label="Liquid Particle Material";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field viscosity {
      label="Dynamic Viscosity";
      short_label="Vis";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Viscosity";
      default=0;
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field surface_tension {
      label="Surface Tension";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="TorquePerArea";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field density_distribution {
      label="Density Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
      init_val="None";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_density {
      label="Mean Value";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Density";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field density_range {
      label="Range";
      unique_label="Density:Standard Dev/Range";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Density";
      visible_if=["density_distribution==Uniform || density_distribution==Gaussian"];
      setvalue_expr=["density_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field density_shape_parameter {
      label="Shape Parameter";
      indent=1;
      unique_label="Density:Shape Param";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Dimensionless";
      visible_if=["density_distribution==Gamma"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field enable_breakup_model {
      label="Enable Breakup Model";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set solid_particle_material : liquid_particle_material {
  label="Solid Particle Material";
  fields = [
    delete field viscosity,
    delete field surface_tension,
    delete field enable_breakup_model
  ];
};

// Particle Emitter Configurations =======================================================

parameter_set base_emitter_config {
  label="Base Emitter Configuration";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field particle_material {
      label="Particle Material";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="particle_materials_family";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_DELETE_IF_PSET_DELETED|FIELD_REQUIRED;
    },
    field emission_rate_via {
      label="Emission Rate Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Mass Flow Rate", "Particle Rate", "Volumetric Flow Rate", ""];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field emission_rate_massflow {
      label="Emission Rate";
      unique_label="Mass Flow Rate:Emission Rate";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent = 1;
      unit_class="MassFlow";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
      visible_if=["emission_rate_via==Mass Flow Rate"];
    }, 
    field emission_rate_particle {
      label="Emission Rate";
      unique_label="Particle Rate:Emission Rate";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent = 1;
      unit_class="Frequency";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
      visible_if=["emission_rate_via==Particle Rate"];
    }, 
    field emission_rate_volumetric {
      label="Emission Rate";
      unique_label="Volumetric Flow Rate:Emission Rate";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent = 1;
      unit_class="VolumeFlow";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
      visible_if=["emission_rate_via==Volumetric Flow Rate"];
    }, 
    field emission_rate_depth {
      label="Emission Rate";
      unique_label="Depth Rate:Emission Rate";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent = 1;
      unit_class="AccumulationRate";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
      visible_if=["emission_rate_via==Depth Rate"];
    }
  ];
};

parameter_set nozzle_emitter_config : base_emitter_config {
  label="Nozzle Emitter Configuration";
  fields = [
    field particle_material {
    },
    field nozzle_type {
      label="Nozzle Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Full Cone", "Hollow Cone", "Elliptic Cone (Flat Fan)"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field angle_distribution {
      label="Angle Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
      init_val="Uniform";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field mean_angle {
      label="Mean Angle";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      visible_if=["nozzle_type==Hollow Cone"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field cone_half_angle {
      label="Cone Half Angle";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      visible_if=["nozzle_type==Full Cone && angle_distribution!=None"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field major_half_angle {
      label="Major Half Angle";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      visible_if=["nozzle_type==Elliptic Cone (Flat Fan) && angle_distribution!=None"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field minor_half_angle {
      label="Minor Half Angle";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      visible_if=["nozzle_type==Elliptic Cone (Flat Fan) && angle_distribution!=None"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field angle_range {
      label="Range";
      indent=1;
      unique_label="Angle:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Angle";
      visible_if=["nozzle_type==Hollow Cone && angle_distribution!=None"];
      setvalue_expr=["angle_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field velocity_distribution {
      label="Velocity Magnitude Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
        init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_velocity_magnitude {
      label="Mean Value";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field velocity_range {
      label="Range";
      unique_label="Velocity:Standard Dev/Range";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      visible_if=["velocity_distribution==Uniform || velocity_distribution==Gaussian"];
      setvalue_expr=["velocity_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field velocity_shape_parameter {
      label="Shape Parameter";
      unique_label="Velocity:Shape Param";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["velocity_distribution==Gamma"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_distribution {
      label="Particle Diameter Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "Rosin-Rammler", "Log-Normal", "None"];
        init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_particle_diameter {
      label="Mean Diameter";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      setvalue_expr=["particle_diameter_distribution==Rosin-Rammler ?? label:=Characteristic Value :: label:=Mean Value"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_range {
      label="Range";
      unique_label="Diameter:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      visible_if=["particle_diameter_distribution==Uniform || particle_diameter_distribution==Gaussian || particle_diameter_distribution==Log-Normal"];
      setvalue_expr=["particle_diameter_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_dimless_param {
      label="Shape Parameter";
      unique_label="Diameter:Shape Param/Exp.";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Dimensionless";
      visible_if=["particle_diameter_distribution==Gamma || particle_diameter_distribution==Rosin-Rammler"];
      setvalue_expr=["particle_diameter_distribution==Gamma ?? label:=Shape Parameter :: label:=Exponent"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    // These are declared in the base PSet, but re-declared here to ensure proper display order in the UI
    field emission_rate_volumetric {
    }, 
    field emission_rate_depth {
    }
  ];
};

parameter_set rain_emitter_config : base_emitter_config {
  label="Rain Emitter Configuration";
  fields = [
    field particle_material {
    },
    field particle_diameter_distribution {
      label="Particle Diameter Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "Rosin-Rammler", "Log-Normal", "None"];
        init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_particle_diameter {
      label="Mean Diameter";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      setvalue_expr=["particle_diameter_distribution==Rosin-Rammler ?? label:=Characteristic Value :: label:=Mean Value"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_range {
      label="Range";
      unique_label="Diameter:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      visible_if=["particle_diameter_distribution==Uniform || particle_diameter_distribution==Gaussian || particle_diameter_distribution==Log-Normal"];
      setvalue_expr=["particle_diameter_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_dimless_param {
      label="Shape Parameter";
      unique_label="Diameter:Shape Param/Exp.";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Dimensionless";
      visible_if=["particle_diameter_distribution==Gamma || particle_diameter_distribution==Rosin-Rammler"];
      setvalue_expr=["particle_diameter_distribution==Gamma ?? label:=Shape Parameter :: label:=Exponent"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field emission_rate_via {
      label="Emission Rate Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Mass Flow Rate", "Particle Rate", "Volumetric Flow Rate", "Depth Rate"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};

parameter_set tire_emitter_config : base_emitter_config {
  label="Tire Emitter Configuration";
  fields = [
    field spatial_emission_distribution {
      label="Spatial Emission Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Gaussian", "Linear", "(1-x)^n", "1/2*(1+cos(PI*x^n))"];
        init_val="Linear";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spatial_emission_std_deviation {
      label="Standard Deviation";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      visible_if=["spatial_emission_distribution==Gaussian"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spatial_emission_exponent {
      label="Exponent";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      visible_if=["spatial_emission_distribution==(1-x)^n || spatial_emission_distribution==1/2*(1+cos(PI*x^n))"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field emission_rate_ratio {
      label="Emission Rate Ratio (Max/Min Angle)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED;
    },
    field tire_arc_nozzle_properties_field {
      label="Nozzle Properties Along Tire Arc";
      datatype=FIELD_IS_PSET_LIST;
      layout_class="TABLE";
      pfamily_identifier="tire_arc_nozzle_properties_family";
      pfamily_unique_field="tire_arc_position";
      flags=FIELD_INPUT|FIELD_LABEL_BOLD|FIELD_LABEL_ON_TOP|FIELD_CLONE_ON_PSET_COPY;
    }
  ];
};


parameter_set tire_arc_nozzle_properties {
  label="Tire Arc Nozzle Properties";
  flags=PSET_DELETE_ON_NO_DEPENDENTS;
  fields = [
    field id {  
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_RANDOM;
    },
    field tire_arc_position {
      label="Position (Angle)";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field offset_angle_distribution {
      label="Offset Angle Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
        init_val="None";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
    },
    field emission_offset_angle {
      label="Emission Offset Angle";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED;
    },
    field cone_half_angle {
      label="Cone Half Angle";
      indent=1;
      unique_label="Angle:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      enabled_if=["offset_angle_distribution!=None"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field transverse_stretch_factor {
      label="Transverse Stretch Factor";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED|FIELD_TIME_VARYING_ALLOWED;
    },
    field velocity_distribution {
      label="Velocity Magnitude Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
      init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_velocity_magnitude {
      label="Mean Value";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field velocity_range {
      label="Range";
      indent=1;
      unique_label="Velocity:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      visible_if=["velocity_distribution==Uniform || velocity_distribution==Gaussian"];
      setvalue_expr=["velocity_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field velocity_shape_parameter {
      label="Shape Parameter";
      unique_label="Velocity:Shape Param";
      indent=1;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      visible_if=["velocity_distribution==Gamma"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED;
    },
    field particle_diameter_distribution {
      label="Particle Diameter Distribution";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "Rosin-Rammler", "Log-Normal", "None"];
      init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_particle_diameter {
      label="Mean Diameter";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      setvalue_expr=["particle_diameter_distribution==Rosin-Rammler ?? label:=Characteristic Value :: label:=Mean Value"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_range {
      label="Range";
      unique_label="Diameter:Standard Dev/Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      visible_if=["particle_diameter_distribution==Uniform || particle_diameter_distribution==Gaussian || particle_diameter_distribution==Log-Normal"];
      setvalue_expr=["particle_diameter_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field particle_diameter_dimless_param {
      label="Shape Parameter";
      unique_label="Diameter:Shape Param/Exp.";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Dimensionless";
      visible_if=["particle_diameter_distribution==Gamma || particle_diameter_distribution==Rosin-Rammler"];
      setvalue_expr=["particle_diameter_distribution==Gamma ?? label:=Shape Parameter :: label:=Exponent"];
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field parent {
      //this field is just temporary and can't be relied on after case open
      label="Parent";
      flags=FIELD_HIDDEN;
      datatype=FIELD_IS_PSET;
      pfamily_identifier="emitter_configs_family";
    }
  ];
};


// Particle Emitters =====================================================================

parameter_set standard_emitter {
  label="Standard Emitter";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field emitter_configuration {
      label="Configuration";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="emitter_configs_family";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field geometry_faces {
      label="Geometry";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED|FIELD_HIDDEN;
    },
    field geometry_parts {
      label="Geometry";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="region";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED|FIELD_HIDDEN;
    },
    field points {
      label="Points";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="point";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED|FIELD_HIDDEN;
    },
    field spray_direction_csys {
      label="Coordinate System";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field mean_spray_direction_x {
      label="Mean Emission Direction X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field mean_spray_direction_y {
      label="Mean Emission Direction Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field mean_spray_direction_z {
      label="Mean Emission Direction Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field elliptical_nozzle_label {
      label="Elliptical Nozzle:";
      datatype=FIELD_IS_LABEL;
      enabled_evaluator=["cEMITTER_MAJOR_ELLIPSE_DIRECTION_ENABLED"];
      flags=FIELD_REQUIRED;
    },
    field major_ellipse_direction_x {
      label="Major Ellipse Direction X";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_evaluator=["cEMITTER_MAJOR_ELLIPSE_DIRECTION_ENABLED"];
      indent = 1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field major_ellipse_direction_y {
      label="Major Ellipse Direction Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_evaluator=["cEMITTER_MAJOR_ELLIPSE_DIRECTION_ENABLED"];
      indent = 1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field major_ellipse_direction_z {
      label="Major Ellipse Direction Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      enabled_evaluator=["cEMITTER_MAJOR_ELLIPSE_DIRECTION_ENABLED"];
      indent = 1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field fixed_release_points {
      label="Fixed Release Points";
      datatype=FIELD_IS_CHECK_BOX;
      default="No";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field particles_per_parcel {
      label="Particles per Parcel";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="1";
      flags=FIELD_INPUT|FIELD_IS_INTEGER|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED;
    },
    field subject_to_dispersion_box {
      label="Subject to Dispersion Box";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field subject_to_gravity {
      label="Subject to Gravity";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field start_time {
      label="Start Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="default_emitter_start";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field end_time {
      label="End Time";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="default_emitter_end";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field fraction_trajectory_recording {
      label="Fraction of Particles Eligible for Trajectory Recording";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="0.001";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field max_particle_age {
      label="Max Particle Age";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="default_max_particle_age";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field max_num_reflections {
      label="Max Num Reflections";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      default="default_max_num_reflections";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field min_particle_velocity {
      label="Min Particle Velocity";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      default="default_min_particle_velocity";
      flags=FIELD_INPUT|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field visible {
      label="Visible";
      datatype=FIELD_IS_CHECK_BOX;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field visibility_options_label {
      label="Visibility Settings";
      datatype=FIELD_IS_LABEL;
      flags=FIELD_REQUIRED|FIELD_LABEL_BOLD;
    },
    field nozzle_show {
      label="Show Nozzle";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field nozzle_cone_look {
      label="Nozzle Cone Look";
      datatype=FIELD_IS_LOOK;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["nozzle_show=Yes"];
      default="#00FF00"; // Default is Green
   },
    field nozzle_body_color {
      label="Nozzle Body Color";
      datatype=FIELD_IS_COLOR;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["nozzle_show=Yes"];
      default="#0000FF"; // Default is Blue
    },
    field nozzle_arrow_look {
      label="Nozzle Arrow Look";
      datatype=FIELD_IS_LOOK;
       indent=2;
     flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["nozzle_show=Yes"];
      default="#FF0000"; // Default is Red
    },
    field nozzle_size {
      label="Nozzle Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=2;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
      enabled_if=["nozzle_show=Yes"];
    }
  ];
};

parameter_set standard_surface_emitter : standard_emitter {
  label="Surface Emitter";
  fields = [
    field emitter_configuration {
      pset_identifier="nozzle_emitter_config";
    },
    field geometry_faces {
      flags-=FIELD_HIDDEN;
    },
    field mean_spray_direction_via {
      label="Mean Emission Direction Via";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Surface Normal", "Specified Below"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field spray_direction_csys {
      //enabled_evaluator=["cEMITTER_MAJOR_ELLIPSE_DIRECTION_ENABLED"];
      enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 1;
    },
    field mean_spray_direction_x {
      enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 1;
    },
    field mean_spray_direction_y {
      enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 1;
    },
    field mean_spray_direction_z {
      enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 1;
    },
    field elliptical_nozzle_label {
      //enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 1;
    },
    field major_ellipse_direction_x {
      //enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 2;
    },
    field major_ellipse_direction_y {
      //enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 2;
    },
    field major_ellipse_direction_z {
      //enabled_if=["mean_spray_direction_via==Specified Below"];
      indent = 2;
    },
    field visible {}
  ];
};

parameter_set standard_volume_emitter : standard_emitter {
  label="Volume Emitter";
  fields = [
    field geometry_parts {
      filters=["create=PSET_TYPE: cylinder, box_*"];
      flags-=FIELD_HIDDEN;
    },
    field emitter_configuration {
      pset_identifier="nozzle_emitter_config";
    },
    field spray_direction_csys {
    },
    field fixed_release_points {
    },
    field release_point_spacing_x {
      label="Release Point Spacing X";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      enabled_if=["fixed_release_points=Yes"];
    },
    field release_point_spacing_y {
      label="Release Point Spacing Y";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      enabled_if=["fixed_release_points=Yes"];
    },
    field release_point_spacing_z {
      label="Release Point Spacing Z";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      enabled_if=["fixed_release_points=Yes"];
    },
    field visible {},
    field visibility_options_label {},
    field nozzle_show {},
    field nozzle_cone_look {},
    field nozzle_body_color {},
    field nozzle_arrow_look {},
    field nozzle_size {},
    field emission_boundary_show {
      label="Show Emission Boundary";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field emission_boundary_look {
      label="Emission Boundary Look";
      datatype=FIELD_IS_LOOK;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["emission_boundary_show=Yes"];
      default="#F5F5D3"; // Default is off-white
    },
    field emission_boundary_size {
      label="Emission Boundary Size";
      indent=2;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
      enabled_if=["emission_boundary_show=Yes"];
    }
  ];
};

parameter_set standard_point_emitter : standard_emitter {
  label="Point Emitter";
  fields = [
    field points {
      flags-=FIELD_HIDDEN;
    },
    field emitter_configuration {
      pset_identifier="nozzle_emitter_config";
	  },
    field fixed_release_points {
      flags+=FIELD_HIDDEN;
    },
    field visible {}
  ];
};


parameter_set rain_emitter : standard_emitter {
  label="Rain Emitter";
  fields = [
    field emitter_configuration {
      pset_identifier="rain_emitter_config";
	},
    field geometry_parts {
      filters=["create=PSET_TYPE: cylinder, box_*"];
      flags-=FIELD_HIDDEN;
    },
    field spray_direction_csys {
      flags+=FIELD_HIDDEN;
    },
    delete field mean_spray_direction_x,
    delete field mean_spray_direction_y,
    delete field mean_spray_direction_z,
    delete field elliptical_nozzle_label,
    delete field major_ellipse_direction_x,
    delete field major_ellipse_direction_y,
    delete field major_ellipse_direction_z,
    field fixed_release_points {
      flags+=FIELD_HIDDEN;
    },
    field subject_to_gravity {
      flags+=FIELD_HIDDEN;
    },
    delete field visibility_options_label,
    delete field nozzle_show,
    delete field nozzle_cone_look,
    delete field nozzle_body_color,
    delete field nozzle_arrow_look,
    delete field nozzle_size
  ];
};


parameter_set tire_emitter : standard_emitter {
  label="Tire Emitter";
  fields = [
    field emitter_configuration {
      pset_identifier="tire_emitter_config";
    },
    field geometry_parts {
      filters=["create=PSET_TYPE: cylinder"];
      flags-=FIELD_HIDDEN;
    },
    field zero_angle_direction_csys {
      label="Zero Angle Direction Csys";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="coord_sys";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field zero_angle_direction {
      label="Zero Angle Direction";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "-X", "Y", "-Y", "Z", "-Z"];
      empty_choice_string = "[none]";
      value_updater = ["cTIRE_EMITTER_ZERO_ANGLE_DIR_UPDATER"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;  
    },
    field approx_rotation_axis_dir {
      label = "Approx. Rotation Axis Direction";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["X", "-X", "Y", "-Y", "Z", "-Z"];
      empty_choice_string = "[none]";
      value_updater = ["cTIRE_EMITTER_ROTATION_AXIS_DIR_UPDATER"];
      flags = FIELD_INPUT | FIELD_REQUIRED | FIELD_NOT_DISCRETIZED;
    },
    field spray_direction_csys {
      flags+=FIELD_HIDDEN;
    },
    delete field mean_spray_direction_x,
    delete field mean_spray_direction_y,
    delete field mean_spray_direction_z,
    delete field elliptical_nozzle_label,
    delete field major_ellipse_direction_x,
    delete field major_ellipse_direction_y,
    delete field major_ellipse_direction_z,
    field fixed_release_points {
      flags+=FIELD_HIDDEN;
    },
    field visible {},
    field visibility_options_label {},
    field tire_tread_show {
      label="Show Tire Tread";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field tire_tread_look {
      label="Tire Tread Look";
      datatype=FIELD_IS_LOOK;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["tire_tread_show=Yes"];
      default="#C0C0C0"; // Default is light gray
    },
    field nozzle_show {},
    field nozzle_cone_look {},
    field nozzle_body_color {},
    field nozzle_arrow_look {},
    field nozzle_size {},
    field emission_boundary_show {
      label="Show Emission Boundary";
      datatype=FIELD_IS_CHECK_BOX;
      indent=1;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field emission_boundary_look {
      label="Emission Boundary Look";
      datatype=FIELD_IS_LOOK;
      indent=2;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_USE_REQUIRED_LABEL_FONT;
      enabled_if=["emission_boundary_show=Yes"];
      default="#F5F5D3"; // Default is off-white
   },
   field emission_boundary_size {
      label="Emission Boundary Size";
      indent=2;
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_REQUIRED;
      enabled_if=["emission_boundary_show=Yes"];
   }
  ];
};


parameter_set surface_material_options {
  label="Surface Material Options";
  flags=PSET_ALLOW_INCOMPLETE;
  fields = [
    field default_surface_material {
      label="Default Surface Material";
      short_label="Surf Mat";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface_materials_family";
      required_if=["#emitters_family!=0 && #surface_materials_family!=1"];
      flags=FIELD_INPUT|FIELD_REQUIRED;
    }
  ];
};


parameter_set particle_surface_material {
  label="Surface Material";
  flags=PSET_UPDATE_ON_SMD_CHANGE|PSET_ALLOW_INCOMPLETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field enable_reentrainment_model {
      label="Enable Re-entrainment Model";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="No";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field reentrainment_length {
      label="Re-entrainment Length";
      datatype=FIELD_IS_UVAL_SCALAR;
      indent=1;
      unit_class="Length";
      enabled_if=["enable_reentrainment_model=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
    },
    field particle_interactions {
      label="Particle Interactions";
      datatype=FIELD_IS_PSET_LIST;
      layout_class="TABLE";
      pfamily_identifier="particle_surface_interactions_family";
      pfamily_unique_field="particle_material";
      flags=FIELD_INPUT|FIELD_LABEL_BOLD|FIELD_LABEL_ON_TOP|FIELD_CLONE_ON_PSET_COPY;
    }
  ];
};

parameter_set default_particle_surface_material : particle_surface_material {
  label="Default Surface Material";
  flags+=PSET_NO_USER_CREATE|PSET_NO_USER_CHANGE_TYPE|PSET_NO_USER_DELETE|PSET_NO_USER_COPY;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      default="<default>";
      flags=FIELD_USE_REQUIRED_LABEL_FONT;
    },
    field enable_reentrainment_model {
      flags-=FIELD_REQUIRED;
    },
    field reentrainment_length {
      flags-=FIELD_REQUIRED;
    },
    field particle_interactions {
      flags=FIELD_INPUT|FIELD_LABEL_BOLD|FIELD_LABEL_ON_TOP;
    }
  ];
};


parameter_set particle_surface_material_interaction {
  label="Particle Surface Material Interaction";
  flags=PSET_DELETE_ON_NO_DEPENDENTS;
  fields = [
    field id {  
      label="ID";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_HIDDEN|FIELD_RANDOM;
    },
    field particle_material {
      label="Particle Material";
      short_label="Part Mat";
      datatype=FIELD_IS_PSET; 
      pfamily_identifier="particle_materials_family";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_DELETE_IF_PSET_DELETED;
    },
    field enable_splash_model {
      label="Enable Splash Model";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      visible_if=["particle_material==PSET_TYPE:liquid_particle_material"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field enable_reflection {
      label="Enable Reflection";
      short_label = "Refl";
      datatype=FIELD_IS_CHECK_BOX;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field reflection_threshold_momentum {
      label="Minimum Reflection Momentum";
      short_label="Min Refl Momentum";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Momentum";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field minimum_normal_velocity {
      label="Minimum Normal Velocity";
      short_label="Min Norm Vel";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Velocity";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field minimum_reflection_angle {
      label="Minimum Reflection Angle";
      short_label="Min Refl Ang";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field normal_restitution_coefficient {
      label="Normal Restitution Coefficient";
      short_label="Norm Rest Coeff";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field tangential_restitution_coefficient {
      label="Tangential Restitution Coefficient";
      short_label="Tang Rest Coeff";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field scatter_angle_distribution {
      label="Scatter Angle Distribution";
      short_label="Scat Ang Dist";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Uniform", "Gaussian", "Gamma", "None"];
        init_val="Uniform";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection=Yes"];
    },
    field scatter_angle_range {
      label="Scatter Angle Deviation";
      unique_label="Angle:Standard Dev/Range";
      indent=1;
      short_label = "Scat Ang Range";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_EQUATION_ALLOWED;
      visible_if=["particle_material==PSET_TYPE:solid_particle_material"];
      enabled_if=["enable_reflection==Yes && scatter_angle_distribution!=None"];
      setvalue_expr=["scatter_angle_distribution==Uniform ?? label:=Range :: label:=Standard Deviation"];
    },
    field parent {
      //this field is just temporary and can't be relied on after case open
      label="Parent";
      flags=FIELD_HIDDEN;
      datatype=FIELD_IS_PSET;
      pfamily_identifier="surface_materials_family";
    }
  ];
};


parameter_set particle_screens {
  label="Particle Screen";
  flags=PSET_UPDATE_ON_SMD_CHANGE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT;
    },
    field geometry {
      label="Geometry";
      datatype=FIELD_IS_PSET_LIST; // May include tags too
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_DELETE_IF_PSET_DELETED|FIELD_QUAD_PATCH_PSET_ALLOWED;
    },
    field opening_size {
      label="Opening Size";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Length";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field pass_thru_fraction {
      label="Pass Through Fraction";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Dimensionless";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED|FIELD_NOT_DISCRETIZED|FIELD_TIME_VARYING_ALLOWED|FIELD_SPACE_VARYING_ALLOWED;
    },
    field surface_material {
      label="Surface Material";
      datatype=FIELD_IS_PSET; 
      pfamily_identifier="surface_materials_family";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED|FIELD_DELETE_IF_PSET_DELETED;
    }
  ];
};


parameter_set wipers {
  label="Wiper";
  flags=PSET_UPDATE_ON_SMD_CHANGE|PSET_ALLOW_INCOMPLETE;
  fields = [
    field name {
      label="Name";
      datatype=FIELD_IS_STRING;
      flags=FIELD_INPUT|FIELD_REQUIRED;
    },
    field wiper_blade {
      label="Wiper Blade";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wiped_surface {
      label="Wiped Surface";
      datatype=FIELD_IS_PSET_LIST;
      pfamily_identifier="face";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field use_avg_normal {
      label="Use Average Normal of Wiped Surface as Wiper Rotation Axis Direction";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wiper_pin_point {
      label="Wiper Pin Point";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="point";
      enabled_if=["use_avg_normal=Yes"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wiper_axis {
      label="Wiper Axis";
      datatype=FIELD_IS_PSET;
      pfamily_identifier="axis";
      enabled_if=["use_avg_normal=No"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field wiper_type {
      label="Wiper Type";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Pivot", "Pantograph"];
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    },
    field positive_dir {
      label="Positive Rotation Direction";
      datatype=FIELD_IS_CHOICE_LIST;
      choices=["Counterclockwise", "Clockwise"];
      init_val="Counterclockwise";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }, 
    field import_angle {
      label="Import Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      default="0 deg";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field start_angle {
      label="Start Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field end_angle {
      label="End Angle";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Angle";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field stroke_duration {
      label="Stroke Duration";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_EQUATION_ALLOWED;
    },
    field delay {
      label="Delay";
      datatype=FIELD_IS_UVAL_SCALAR;
      unit_class="Time";
      default="0 timestep";
      flags=FIELD_INPUT|FIELD_EQUATION_ALLOWED;
    },
    field show_decorations {
      label="Show Decorations";
      datatype=FIELD_IS_CHECK_BOX;
      init_val="Yes";
      flags=FIELD_INPUT|FIELD_REQUIRED|FIELD_NOT_DISCRETIZED;
    }
  ];
};


parameter_set_group wipers_group {
  parameter_sets = [
    wipers
  ];
};

parameter_set_group simulation_options_group {
  parameter_sets = [
    simulation_options
  ];
};

parameter_set_group global_group {
  parameter_sets = [
    literal_global,
    literal_global_2d,
    internal_literal_global,
    internal_literal_global_2d,
    boundary_layer_global,
    boundary_layer_global_2d,
    internal_boundary_layer_global,
    internal_boundary_layer_global_2d,
    literal_global_thermal,
    literal_global_2d_thermal,
    internal_literal_global_thermal,
    internal_literal_global_2d_thermal,
    boundary_layer_global_thermal,
    boundary_layer_global_2d_thermal,
    internal_boundary_layer_global_thermal,
    internal_boundary_layer_global_2d_thermal,

    literal_global_liquid,
    literal_global_2d_liquid,
    internal_literal_global_liquid,
    internal_literal_global_2d_liquid,
    boundary_layer_global_liquid,
    boundary_layer_global_2d_liquid,
    internal_boundary_layer_global_liquid,
    internal_boundary_layer_global_2d_liquid,
    literal_global_thermal_liquid,
    literal_global_2d_thermal_liquid,
    internal_literal_global_thermal_liquid,
    internal_literal_global_2d_thermal_liquid,
    boundary_layer_global_thermal_liquid,
    boundary_layer_global_2d_thermal_liquid,
    internal_boundary_layer_global_thermal_liquid,
    internal_boundary_layer_global_2d_thermal_liquid
  ];
};

parameter_set_group vehicle_group {
  parameter_sets = [
    vehicle
  ];
};

parameter_set_group ni_ref_frame_group {
  parameter_sets = [
    ni_ref_frame,
    ni_ref_frame_2d
  ];
};

parameter_set_group rotating_ref_frame_group {
  parameter_sets = [
    rotating_ref_frame
  ];
};

parameter_set_group gravity_group {
  parameter_sets = [
    gravity,
    gravity_2d,
    gravity_thermal,
    gravity_2d_thermal
  ];
};

parameter_set_group import_stl_ascii_group {
  parameter_sets = [
    import_stl_ascii
  ];
};

parameter_set_group import_file_pset_group {
  parameter_sets = [
    import_file_pset
  ];
};

parameter_set_group import_nastran_group {
  parameter_sets = [
    import_nastran
  ];
};

parameter_set_group import_non_rectangular_region_group {
  parameter_sets = [
    import_non_rectangular_region
  ];                    
};

parameter_set_group import_patran_group {
  parameter_sets = [
    import_patran
  ];
};

parameter_set_group import_abaqus_group {
  parameter_sets = [
    import_abaqus
  ];
};

parameter_set_group coupling_model_group {
  parameter_sets = [
    coupling_model
  ];
};

parameter_set_group coupling_model_component_group {
  parameter_sets = [
    coupling_model_component
  ];
};

parameter_set_group import_coupling_model_group {
  parameter_sets = [
    import_coupling_model
  ];
};

parameter_set_group coupling_model_import_phases_group {
  parameter_sets = [
    coupling_model_import_phases
  ];
};

parameter_set_group import_mapping_group {
  parameter_sets = [
    import_mapping
  ];
};

parameter_set_group create_box_2_corners_group {
  parameter_sets = [
        box_2_corners
  ];

};

parameter_set_group create_box_size_point_group {
  parameter_sets = [
        box_size_point
  ];
};

parameter_set_group create_box_via_offset_group {
  parameter_sets = [
    box_via_offset
  ];
};

parameter_set_group create_sphere_group {
  parameter_sets = [
    sphere
  ];
};

parameter_set_group create_cylinder_group {
  parameter_sets = [
    cylinder
  ];
};

parameter_set_group create_hollow_cylinder_group {
  parameter_sets = [
    hollow_cylinder
  ];
};

parameter_set_group create_quad_patch_group {
  parameter_sets = [
    quad_patch
  ];
};

parameter_set_group create_vrev_group {
  parameter_sets = [
    volume_of_revolution
  ];
};

parameter_set_group create_vrev_enclosing_group {
  parameter_sets = [
    volume_of_revolution_enclosing
  ];
};

parameter_set_group create_boundary_portion_part {
  parameter_sets = [
    boundary_portion_part
  ];
};
parameter_set_group coord_sys_via_cartesian_group {
  parameter_sets = [
    coord_sys_via_cartesian
  ];
};

parameter_set_group coord_sys_via_cylindrical_group {
  parameter_sets = [
    coord_sys_via_cylindrical
  ];
};

parameter_set_group coord_sys_via_spherical_group {
  parameter_sets = [
    coord_sys_via_spherical
  ];
};

parameter_set_group default_coord_sys_group {
  parameter_sets = [
    default_coord_sys
  ];
};

parameter_set_group symmetry_plane_group {
  parameter_sets = [
    symmetry_plane
  ];
};

parameter_set_group create_solid_via_8_corners_group {
  parameter_sets = [
        solid_via_8_corners
  ];
};

parameter_set_group face_offset_geometry_group {
  parameter_sets = [
        face_offset_geometry
  ];
};

parameter_set_group region_offset_geometry_group {
  parameter_sets = [
        region_offset_geometry
  ];
};

parameter_set_group region_group {
  parameter_sets = [
        region_pset
  ];
};

parameter_set_group face_pset_group {
  parameter_sets = [
        face_pset
  ];
};

parameter_set_group bside_face_group {
  parameter_sets = [
        bside_face_pset
  ];
};

parameter_set_group face_file_group {
  parameter_sets = [
        file_face_pset
  ];
};

parameter_set_group shell_face_group {
  parameter_sets = [
        shell_face_pset
  ];
};

parameter_set_group group_face_group {
  parameter_sets = [
        group_face_pset
  ];
};


parameter_set_group face_boundary_portion_group {
  parameter_sets = [
        boundary_portion_face
  ];
};

parameter_set_group face_plus_x_group {
  parameter_sets = [
        plus_x_face
  ];
};

parameter_set_group point_group {
  parameter_sets = [
    point_pset
  ];
};

parameter_set_group polyline_group {
  parameter_sets = [
    polyline_pset
  ];
};

parameter_set_group axis_group {
  parameter_sets = [
    axis_pset
  ];
};

parameter_set_group vr_group {
  parameter_sets = [
    vr
  ];
};

parameter_set_group period_sync_group_group {
  parameter_sets = [
    period_sync_group
  ];
};

parameter_set_group uval_case_variable_group {
  parameter_sets = [
    uval_case_variable
  ];
};

parameter_set_group boolean_case_variable_group {
  parameter_sets = [
    boolean_case_variable
  ];
};

parameter_set_group model_view_container_group {
  parameter_sets = [
    model_view_container
  ];
};

parameter_set_group model_view_group {
  parameter_sets = [
    model_view
  ];
};

parameter_set_group coarse_variant_group {
  parameter_sets = [
    coarse_variant,
    coarse_variant_thermal
  ];
};

parameter_set_group turb_generator_group {
  parameter_sets = [
    turb_generator
  ];
};

parameter_set_group context_info_group {
  parameter_sets = [
    context_info
  ];
};

parameter_set_group part_export_group {
  parameter_sets = [
    part_export
  ];
};

parameter_set_group multipart_export_group {
  parameter_sets = [
    multipart_export
  ];
};

parameter_set_group vr_thickness_options_group {
  parameter_sets = [
    vr_thickness_options
  ];
};

parameter_set_group vr_thickness_group {
  parameter_sets = [
    vr_thickness
  ];
};

parameter_set_group fluid_solid_options_group {
  parameter_sets = [
    fluid_solid_options
  ];
};

parameter_set_group vr_family_options_group {
  parameter_sets = [
    vr_family_options
  ];
};

parameter_set_group bc_options_group {
  parameter_sets = [
    bc_options
  ];
};

parameter_set_group model_view_options_group {
  parameter_sets = [
    model_view_options
  ];
};

parameter_set_group tag_type_group {
  parameter_sets = [
    tag_type
  ];
};

parameter_set_group tag_group {
  parameter_sets = [
    tag
  ];
};

parameter_set_group table_group {
  parameter_sets = [
    table
  ];
};

// parameter_set_group fluid_group {
//  parameter_sets = [
//    fluid,
//    fluid_2d,
//    turbulence_model_fluid,
//    turbulence_model_fluid_2d,
//    fluid_thermal,
//    fluid_2d_thermal,
//    turbulence_model_fluid_thermal,
//    turbulence_model_fluid_2d_thermal
//  ];
//};
//
//parameter_set_group fluid_solid_fluid_group {
//  parameter_sets = [
//    fluid,                    // *
//    fluid_thermal,
//    fluid_2d_thermal,
//    turbulence_model_fluid, // *
//    turbulence_model_fluid_thermal,
//    turbulence_model_fluid_2d_thermal
//  ];
//};

parameter_set_group fluid_solid_fluid_group {
  parameter_sets = [
        fluid,
        fluid_2d,
        turbulence_model_fluid,
        turbulence_model_fluid_2d,
        fluid_thermal,
        fluid_2d_thermal,
        turbulence_model_fluid_thermal,
        turbulence_model_fluid_2d_thermal
  ];
};

parameter_set_group fluid_solid_none_group {
  parameter_sets = [
    fluid_solid_none
  ];
};

parameter_set_group fluid_solid_solid_group {
  parameter_sets = [
    solid
  ];
};

parameter_set_group fluid_solid_tire_group {
  parameter_sets = [
    rotating_tire
  ];
};

parameter_set_group fluid_solid_porous_group {
  parameter_sets = [
    porous,
    porous_2d,
    porous_adiabatic,
    porous_2d_adiabatic,
    porous_turbulence,
    porous_2d_turbulence,
    porous_adiabatic_turbulence,
    porous_2d_adiabatic_turbulence
  ];
};

parameter_set_group fluid_solid_porous_acoustic_group {
  parameter_sets = [
    porous_acoustic,
    porous_2d_acoustic,
    porous_adiabatic_acoustic,
    porous_2d_adiabatic_acoustic,
    porous_turbulence_acoustic,
    porous_2d_turbulence_acoustic,
    porous_adiabatic_turbulence_acoustic,
    porous_2d_adiabatic_turbulence_acoustic
  ];
};

parameter_set_group fluid_solid_porous_acoustic_curved_group {
  parameter_sets = [
    porous_curved_acoustic,
    porous_curved_2d_acoustic,
    porous_curved_adiabatic_acoustic,
    porous_curved_2d_adiabatic_acoustic,
    porous_curved_turbulence_acoustic,
    porous_curved_2d_turbulence_acoustic,
    porous_curved_adiabatic_turbulence_acoustic,
    porous_curved_2d_adiabatic_turbulence_acoustic
  ];
};

parameter_set_group fluid_solid_porous_thermal_group {
  parameter_sets = [
    porous,
    porous_2d,
    porous_thermal,
    porous_2d_thermal,
    porous_turbulence,
    porous_2d_turbulence,
    porous_thermal_turbulence,
    porous_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_heat_exchanger_group {
  parameter_sets = [
    heat_exchanger,
    heat_exchanger_turbulence,
    porous,
    porous_2d,
    porous_2d_thermal,
    porous_turbulence,
    porous_2d_turbulence,
    porous_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_heat_exchanger_curved_group {
  parameter_sets = [
    heat_exchanger_curved,
    heat_exchanger_curved_turbulence,
    porous_curved,
    porous_curved_2d,
    porous_curved_2d_thermal,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_2d_thermal_turbulence
  ];
};


parameter_set_group fluid_solid_heat_exchanger_multipass_group {
  parameter_sets = [
    heat_exchanger_multipass,
    heat_exchanger_multipass_turbulence,
    porous,
    porous_2d,
    porous_2d_thermal,
    porous_turbulence,
    porous_2d_turbulence,
    porous_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_heat_exchanger_multipass_curved_group {
  parameter_sets = [
    heat_exchanger_multipass_curved,
    heat_exchanger_multipass_curved_turbulence,
    porous_curved,
    porous_curved_2d,
    porous_curved_2d_thermal,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_2d_thermal_turbulence
  ];
};


parameter_set_group fluid_solid_heat_exchanger_amesim_group {
  parameter_sets = [
    heat_exchanger_amesim,
    heat_exchanger_amesim_turbulence,
    porous,
    porous_2d,
    porous_2d_thermal,
    porous_turbulence,
    porous_2d_turbulence,
    porous_2d_thermal_turbulence
  ];
};


parameter_set_group fluid_solid_condenser_group {
  parameter_sets = [
    heat_exchanger_condenser,
    heat_exchanger_condenser_turbulence,
    porous,
    porous_2d,
    porous_2d_thermal,
    porous_turbulence,
    porous_2d_turbulence,
    porous_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_condenser_curved_group {
  parameter_sets = [
    heat_exchanger_condenser_curved,
    heat_exchanger_condenser_curved_turbulence,
    porous_curved,
    porous_curved_2d,
    porous_curved_2d_thermal,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_porous_fixed_temp_group {
  parameter_sets = [
    porous,
    porous_2d,
    porous_fixed_temp,
    porous_2d_fixed_temp,
    porous_turbulence,
    porous_2d_turbulence,
    porous_fixed_temp_turbulence,
    porous_2d_fixed_temp_turbulence
  ];
};

parameter_set_group fluid_solid_porous_curved_group {
  parameter_sets = [
    porous_curved,
    porous_curved_2d,
    porous_curved_adiabatic,
    porous_curved_2d_adiabatic,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_adiabatic_turbulence,
    porous_curved_2d_adiabatic_turbulence
  ];
};

parameter_set_group fluid_solid_porous_curved_thermal_group {
  parameter_sets = [
    porous_curved,
    porous_curved_2d,
    porous_curved_thermal,
    porous_curved_2d_thermal,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_thermal_turbulence,
    porous_curved_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_porous_curved_fixed_temp_group {
  parameter_sets = [
    porous_curved,
    porous_curved_2d,
    porous_curved_fixed_temp,
    porous_curved_2d_fixed_temp,
    porous_curved_turbulence,
    porous_curved_2d_turbulence,
    porous_curved_fixed_temp_turbulence,
    porous_curved_2d_fixed_temp_turbulence
  ];
};

parameter_set_group fluid_solid_fan_group {
  parameter_sets = [
    inline_fan,
    inline_fan_2d,
    inline_fan_thermal,
    inline_fan_2d_thermal,
    inline_fan_turbulence,
    inline_fan_2d_turbulence,
    inline_fan_thermal_turbulence,
    inline_fan_2d_thermal_turbulence
  ];
};

parameter_set_group fluid_solid_table_fan_group {
  parameter_sets = [
    inline_table_fan,
    inline_table_fan_2d,
    inline_table_fan_thermal,
    inline_table_fan_2d_thermal,
    inline_table_fan_turbulence,
    inline_table_fan_2d_turbulence,
    inline_table_fan_thermal_turbulence,
    inline_table_fan_2d_thermal_turbulence
  ];
};

parameter_set_group particle_global_group {
  parameter_sets = [
    particle_globals
  ];
};

parameter_set_group liquid_particle_materials_group {
  parameter_sets = [
    liquid_particle_material
  ];
};

parameter_set_group solid_particle_materials_group {
  parameter_sets = [
    solid_particle_material
  ];
};
    
parameter_set_group nozzle_emitter_config_group {
  parameter_sets = [
     nozzle_emitter_config
  ];
};

parameter_set_group rain_emitter_config_group {
  parameter_sets = [
     rain_emitter_config
  ];
};

parameter_set_group tire_emitter_config_group {
  parameter_sets = [
     tire_emitter_config
  ];
};

parameter_set_group tire_arc_nozzle_properties_group {
  parameter_sets = [
    tire_arc_nozzle_properties
  ];
};

parameter_set_group surface_emitter_group {
  parameter_sets = [
    standard_surface_emitter
  ];
};

parameter_set_group volume_emitter_group {
  parameter_sets = [
    standard_volume_emitter
  ];
};

parameter_set_group point_emitter_group {
  parameter_sets = [
    standard_point_emitter
  ];
};

parameter_set_group tire_emitter_group {
  parameter_sets = [
    tire_emitter
  ];
};

parameter_set_group rain_emitter_group {
  parameter_sets = [
    rain_emitter
  ];
};

parameter_set_group particle_surface_material_group {
  parameter_sets = [
    particle_surface_material
  ];
};

parameter_set_group surface_group {
  parameter_sets = [
    surface_material_options
  ];
};


parameter_set_group default_particle_surface_material_group {
  parameter_sets = [
    default_particle_surface_material
  ];
};

parameter_set_group particle_surface_material_interaction_group {
  parameter_sets = [
    particle_surface_material_interaction
  ];
};

//parameter_set_group particle_surface_material_interaction_default_group {
//  parameter_sets = [
//    particle_surface_material_interaction_default
//  ];
//};

parameter_set_group particle_screens_group {
  parameter_sets = [
    particle_screens
  ];
};


parameter_set_group surface_wall_group {
  parameter_sets = [
    auto_slip,
    noslip
  ];
};

parameter_set_group surface_frictionless_wall_group {
  parameter_sets = [
    frictionless_wall
  ];
};

parameter_set_group surface_frictionless_wall_fixed_temp_group {
  parameter_sets = [
    frictionless_wall_fixed_temp,
    frictionless_wall_turbulence_fixed_temp,
    frictionless_wall
  ];
};

parameter_set_group surface_frictionless_wall_thermal_resist_group {
  parameter_sets = [
    frictionless_wall_thermal_resist,
    frictionless_wall_turbulence_thermal_resist,
    frictionless_wall
  ];
};

parameter_set_group surface_frictionless_wall_fixed_flux_group {
  parameter_sets = [
    frictionless_wall_fixed_flux,
    frictionless_wall_turbulence_fixed_flux,
    frictionless_wall
  ];
};

parameter_set_group surface_frictionless_wall_coupled_surface_group {
  parameter_sets = [
    frictionless_wall_coupled_surface,
    frictionless_wall
  ];
};

parameter_set_group surface_selectable_wall_group {
  parameter_sets = [
    const_slip,
    noslip
  ];
};

parameter_set_group surface_selectable_wall_fixed_temp_group {
  parameter_sets = [
    const_slip_fixed_temp,
    const_slip,
    noslip_fixed_temp,
    noslip
  ];
};

parameter_set_group surface_selectable_wall_thermal_resist_group {
  parameter_sets = [
    const_slip_thermal_resist,
    const_slip,
    noslip_thermal_resist,
    noslip
  ];
};

parameter_set_group surface_selectable_wall_fixed_flux_group {
  parameter_sets = [
    const_slip_fixed_flux,
    const_slip,
    noslip_fixed_flux,
    noslip
  ];
};

parameter_set_group surface_selectable_wall_coupled_surface_group {
  parameter_sets = [
    const_slip_coupled_surface,
    const_slip,
    noslip_coupled_surface,
    noslip
  ];
};

parameter_set_group surface_sliding_wall_group {
  parameter_sets = [
    linear_auto_slip_2d,
    linear_auto_slip,
    linear_noslip_2d,
    linear_noslip
  ];
};

parameter_set_group surface_velocity_group {
  parameter_sets = [
    velocity_auto_slip_2d,
    velocity_auto_slip,
    velocity_noslip_2d,
    velocity_noslip
  ];
};

parameter_set_group surface_noslip_fixed_temp_group {
  parameter_sets = [
    noslip_fixed_temp,
    auto_slip_fixed_temp,
    noslip,
    auto_slip
  ];
};

parameter_set_group surface_noslip_thermal_resist_group {
  parameter_sets = [
    noslip_thermal_resist,
    auto_slip_thermal_resist,
    noslip,
    auto_slip
  ];
};

parameter_set_group surface_noslip_fixed_flux_group {
  parameter_sets = [
    noslip_fixed_flux,
    auto_slip_fixed_flux,
    noslip,
    auto_slip
  ];
};

parameter_set_group surface_noslip_coupled_surface_group {
  parameter_sets = [
    noslip_coupled_surface,
    auto_slip_coupled_surface,
    noslip,
    auto_slip
  ];
};

parameter_set_group surface_rotating_wall_group {
  parameter_sets = [
    angular_noslip_2d,
    angular_noslip,
    angular_auto_slip_2d,
    angular_auto_slip
  ];
};

parameter_set_group rotating_wall_fixed_temp_group {
  parameter_sets = [
    angular_noslip_2d_fixed_temp,
    angular_noslip_fixed_temp,
    angular_auto_slip_2d_fixed_temp,
    angular_auto_slip_fixed_temp,
    angular_noslip_2d,
    angular_noslip,
    angular_auto_slip_2d,
    angular_auto_slip
  ];
};

parameter_set_group rotating_wall_thermal_resist_group {
  parameter_sets = [
    angular_noslip_2d_thermal_resist,
    angular_noslip_thermal_resist,
    angular_auto_slip_2d_thermal_resist,
    angular_auto_slip_thermal_resist,
    angular_noslip_2d,
    angular_noslip,
    angular_auto_slip_2d,
    angular_auto_slip
  ];
};

parameter_set_group sliding_wall_fixed_temp_group {
  parameter_sets = [
    linear_noslip_2d_fixed_temp,
    linear_noslip_fixed_temp,
    linear_auto_slip_2d_fixed_temp,
    linear_auto_slip_fixed_temp,
    linear_noslip_2d,
    linear_noslip,
    linear_auto_slip_2d,
    linear_auto_slip
  ];
};

parameter_set_group sliding_wall_thermal_resist_group {
  parameter_sets = [
    linear_noslip_2d_thermal_resist,
    linear_noslip_thermal_resist,
    linear_auto_slip_2d_thermal_resist,
    linear_auto_slip_thermal_resist,
    linear_noslip_2d,
    linear_noslip,
    linear_auto_slip_2d,
    linear_auto_slip
  ];
};

parameter_set_group rotating_wall_fixed_flux_group {
  parameter_sets = [
    angular_noslip_2d_fixed_flux,
    angular_noslip_fixed_flux,
    angular_auto_slip_2d_fixed_flux,
    angular_auto_slip_fixed_flux,
    angular_noslip_2d,
    angular_noslip,
    angular_auto_slip_2d,
    angular_auto_slip
  ];
};

parameter_set_group sliding_wall_fixed_flux_group {
  parameter_sets = [
    linear_noslip_2d_fixed_flux,
    linear_noslip_fixed_flux,
    linear_auto_slip_2d_fixed_flux,
    linear_auto_slip_fixed_flux,
    linear_noslip_2d,
    linear_noslip,
    linear_auto_slip_2d,
    linear_auto_slip
  ];
};

parameter_set_group rotating_wall_coupled_surface_group {
  parameter_sets = [
    //angular_noslip_2d_coupled_surface,
    angular_noslip_coupled_surface,
    //angular_auto_slip_2d_coupled_surface,
    angular_auto_slip_coupled_surface,
    angular_noslip_2d,
    angular_noslip,
    angular_auto_slip_2d,
    angular_auto_slip
  ];
};

parameter_set_group sliding_wall_coupled_surface_group {
  parameter_sets = [
    //linear_noslip_2d_coupled_surface,
    linear_noslip_coupled_surface,
    //linear_auto_slip_2d_coupled_surface,
    linear_auto_slip_coupled_surface,
    linear_noslip_2d,
    linear_noslip,
    linear_auto_slip_2d,
    linear_auto_slip
  ];
};

parameter_set_group surface_pressure_velocity_Tfixed_inlet_group {
  parameter_sets = [
    pressure_velocity_2d_inlet,
    pressure_velocity_inlet,
    pressure_velocity_2d_Tfixed_inlet,
    pressure_velocity_Tfixed_inlet,
    pressure_velocity_2d_turbulence_inlet,
    pressure_velocity_turbulence_inlet,
    pressure_velocity_2d_Tfixed_turbulence_inlet,
    pressure_velocity_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_mass_flux_Tfixed_inlet_group {
  parameter_sets = [
    mass_flux_2d_inlet,
    mass_flux_inlet,
    mass_flux_2d_Tfixed_inlet,
    mass_flux_Tfixed_inlet,
    mass_flux_2d_turbulence_inlet,
    mass_flux_turbulence_inlet,
    mass_flux_2d_Tfixed_turbulence_inlet,
    mass_flux_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_mass_flow_Tfixed_inlet_group {
  parameter_sets = [
    mass_flow_2d_inlet,
    mass_flow_inlet,
    mass_flow_2d_Tfixed_inlet,
    mass_flow_Tfixed_inlet,
    mass_flow_2d_turbulence_inlet,
    mass_flow_turbulence_inlet,
    mass_flow_2d_Tfixed_turbulence_inlet,
    mass_flow_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_fixed_velocity_Tfixed_inlet_group {
  parameter_sets = [
    fixed_velocity_2d_inlet,
    fixed_velocity_inlet,
    fixed_velocity_2d_Tfixed_inlet,
    fixed_velocity_Tfixed_inlet,
    fixed_velocity_2d_turbulence_inlet,
    fixed_velocity_turbulence_inlet,
    fixed_velocity_2d_Tfixed_turbulence_inlet,
    fixed_velocity_Tfixed_turbulence_inlet
  ];
};

parameter_set_group transient_velocity_turbulence_inlet_group {
  parameter_sets = [
    fixed_velocity_2d_inlet,
    transient_velocity_inlet,
    fixed_velocity_2d_Tfixed_inlet,
    transient_velocity_Tfixed_inlet,
    fixed_velocity_2d_turbulence_inlet,
    transient_velocity_turbulence_inlet,
    fixed_velocity_2d_Tfixed_turbulence_inlet,
    transient_velocity_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_static_pressure_fixed_Tfixed_inlet_group {
  parameter_sets = [
    static_pressure_fixed_2d_inlet,
    static_pressure_fixed_inlet,
    static_pressure_fixed_2d_Tfixed_inlet,
    static_pressure_fixed_Tfixed_inlet,
    static_pressure_fixed_2d_turbulence_inlet,
    static_pressure_fixed_turbulence_inlet,
    static_pressure_fixed_2d_Tfixed_turbulence_inlet,
    static_pressure_fixed_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_stag_pressure_fixed_Tfixed_inlet_group {
  parameter_sets = [
    stag_pressure_fixed_2d_inlet,
    stag_pressure_fixed_inlet,
    stag_pressure_fixed_2d_Tfixed_inlet,
    stag_pressure_fixed_Tfixed_inlet,
    stag_pressure_fixed_2d_turbulence_inlet,
    stag_pressure_fixed_turbulence_inlet,
    stag_pressure_fixed_2d_Tfixed_turbulence_inlet,
    stag_pressure_fixed_Tfixed_turbulence_inlet
  ];
};

parameter_set_group surface_pressure_velocity_Tfloat_outlet_group {
  parameter_sets = [
    pressure_velocity_2d_outlet,
    pressure_velocity_outlet,
    pressure_velocity_2d_Tfloat_outlet,
    pressure_velocity_Tfloat_outlet,
    pressure_velocity_2d_turbulence_outlet,
    pressure_velocity_turbulence_outlet,
    pressure_velocity_2d_Tfloat_turbulence_outlet,
    pressure_velocity_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_mass_flux_Tfloat_outlet_group {
  parameter_sets = [
    mass_flux_2d_outlet,
    mass_flux_outlet,
    mass_flux_2d_Tfloat_outlet,
    mass_flux_Tfloat_outlet,
    mass_flux_2d_turbulence_outlet,
    mass_flux_turbulence_outlet,
    mass_flux_2d_Tfloat_turbulence_outlet,
    mass_flux_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_mass_flow_Tfloat_outlet_group {
  parameter_sets = [
    mass_flow_2d_outlet,
    mass_flow_outlet,
    mass_flow_2d_Tfloat_outlet,
    mass_flow_Tfloat_outlet,
    mass_flow_2d_turbulence_outlet,
    mass_flow_turbulence_outlet,
    mass_flow_2d_Tfloat_turbulence_outlet,
    mass_flow_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_fixed_velocity_Tfloat_outlet_group {
  parameter_sets = [
    fixed_velocity_2d_outlet,
    fixed_velocity_outlet,
    fixed_velocity_2d_Tfloat_outlet,
    fixed_velocity_Tfloat_outlet,
    fixed_velocity_2d_turbulence_outlet,
    fixed_velocity_turbulence_outlet,
    fixed_velocity_2d_Tfloat_turbulence_outlet,
    fixed_velocity_Tfloat_turbulence_outlet
  ];
};


parameter_set_group surface_static_pressure_fixed_Tfloat_outlet_group {
  parameter_sets = [
    static_pressure_fixed_2d_outlet,
    static_pressure_fixed_outlet,
    static_pressure_fixed_2d_Tfloat_outlet,
    static_pressure_fixed_Tfloat_outlet,
    static_pressure_fixed_2d_turbulence_outlet,
    static_pressure_fixed_turbulence_outlet,
    static_pressure_fixed_2d_Tfloat_turbulence_outlet,
    static_pressure_fixed_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_static_pressure_free_Tfloat_outlet_group {
  parameter_sets = [
    static_pressure_free_outlet,
    static_pressure_free_Tfloat_outlet,
    static_pressure_free_turbulence_outlet,
    static_pressure_free_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_stag_pressure_fixed_Tfloat_outlet_group {
  parameter_sets = [
    stag_pressure_fixed_2d_outlet,
    stag_pressure_fixed_outlet,
    stag_pressure_fixed_2d_Tfloat_outlet,
    stag_pressure_fixed_Tfloat_outlet,
    stag_pressure_fixed_2d_turbulence_outlet,
    stag_pressure_fixed_turbulence_outlet,
    stag_pressure_fixed_2d_Tfloat_turbulence_outlet,
    stag_pressure_fixed_Tfloat_turbulence_outlet
  ];
};

parameter_set_group surface_stag_pressure_free_Tfloat_outlet_group {
  parameter_sets = [
    stag_pressure_free_Tfloat_outlet,
    stag_pressure_free_outlet,
    stag_pressure_free_Tfloat_turbulence_outlet,
    stag_pressure_free_turbulence_outlet
  ];
};

parameter_set_group measurement_group {
  parameter_sets = [
    standard_meas,
    standard_plus_turb_and_heatflux_meas,
    standard_plus_turb_and_heat_coeff_meas,
    standard_plus_heatflux_meas
  ];
};

parameter_set_group face_measurement_group {
  parameter_sets = [
    standard_face_meas,
    standard_plus_turb_and_heatflux_face_meas,
    standard_plus_heat_coeff_face_meas,
    standard_plus_heatflux_face_meas
  ];
};

parameter_set_group sampled_face_measurement_group {
  parameter_sets = [
    sampled_face_meas,
    sampled_plus_turb_and_thermal_face_meas,
    sampled_plus_turb_face_meas,
    sampled_plus_thermal_face_meas
  ];
};

parameter_set_group composite_sampled_face_measurement_group {
  parameter_sets = [
    composite_sampled_face_meas,
    composite_sampled_plus_turb_and_thermal_face_meas,
    composite_sampled_plus_turb_face_meas,
    composite_sampled_plus_thermal_face_meas
  ];
};

parameter_set_group measurement_composite_force_group {
  parameter_sets = [
    composite_force_meas,
    composite_force_plus_turb_and_thermal_meas,
    composite_force_plus_turb_meas,
    composite_force_plus_thermal_meas
  ];
};

parameter_set_group measurement_force_development_group {
  parameter_sets = [
    development_force_meas
  ];                    
};

parameter_set_group measurement_force_face_development_group {
  parameter_sets = [
    development_force_face_meas
  ];                    
};


parameter_set_group face_measurement_composite_force_group {
  parameter_sets = [
    composite_force_face_meas,
    composite_force_plus_turb_and_thermal_face_meas,
    composite_force_plus_turb_face_meas,
    composite_force_plus_thermal_face_meas
  ];
};

parameter_set_group measurement_probe_group {
  parameter_sets = [
    probe,
    probe_plus_turb_and_thermal,
    probe_plus_turb,
    probe_plus_thermal
  ];
};

parameter_set_group measurement_particle_group {
  parameter_sets = [
    particle_trajectory_meas
  ];
};

parameter_set_group averaged_measurement_group {
  parameter_sets = [
    averaged_measurement
  ];
};

parameter_set_group flow_monitor_group {
  parameter_sets = [
    flow_monitor
  ];
};

parameter_set_group heat_exchanger_monitor_group {
  parameter_sets = [
    heat_exchanger_monitor
  ];
};

parameter_set_group coupled_powertherm_monitor_group {
  parameter_sets = [
    coupled_powertherm_monitor
  ];
};

parameter_set_group viewer_settings_group {
  parameter_sets = [
    viewer_settings
  ];
};

parameter_set_group multi_import_option_group {
  parameter_sets = [
    multi_import_option
  ];
};

parameter_set_group multi_import_option_default_group {
  parameter_sets = [
    multi_import_option_default
  ];
};

parameter_set_group multi_import_positioning_group {
  parameter_sets = [
    multi_import_positioning
  ];
};

parameter_set_group multi_import_face_option_group {
  parameter_sets = [
    multi_import_face_option
  ];
};

parameter_set_group multi_import_file_info_group {
  parameter_sets = [
    multi_import_file_info
  ];
};

parameter_set_group realistic_look_group {
  parameter_sets = [
    realistic_look
  ];
};

parameter_set_group viewpoint_group {
  parameter_sets = [
    viewpoint
  ];
};

parameter_set_group clipping_plane_group {
  parameter_sets = [
    clipping_plane
  ];
};

// simulation model layout
layout standard_smd_layout {
  type=LAYOUT_IS_GROUP;
  label="Case";
  group_children=[
    layout {
       type=LAYOUT_IS_SPECIAL;
       label="Model";
       identifier=["modelview"];
    },
    layout {
       type=LAYOUT_IS_SPECIAL;
       label="Case Variables";
       identifier=["case_variables"];
    },
    layout {
      type=LAYOUT_IS_GROUP;
      label="Geometry";
      group_children=[
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["coord_sys"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["import"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["create"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["offset"];
        },                
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["point"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["polyline"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["axis"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["symmetry_planes"];
        }
      ];
    },
    layout {
      type=LAYOUT_IS_GROUP;
      label="Parameters";
      group_children=[
        layout {
          type=LAYOUT_IS_GROUP;
          label="Globals";
          group_children=[
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["global"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["vehicle_family"];
              visible_if=["simopts.vehicle_simulation==Yes"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["gravity"];
            }
          ];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["ni_ref_frames"];
        },
        layout {
          type=LAYOUT_IS_GROUP;
          label="VR";
          group_children=[
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["vr_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["vr_thickness_family"];
            }
          ];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["fluid_solid"];
        },
        layout {
          type=LAYOUT_IS_GROUP;
          label="Particle Modeling";
          visible_if=["simopts.particle_tracking_sim_option==Yes"];
          group_children=[
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["particle_globals_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["particle_materials_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["emitter_configs_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["emitters_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["surface_materials_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["screens_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["wipers_family"];
            }
          ];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["surface"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["measurement"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["monitors"];
        }
      ];
    },
    layout {
      type=LAYOUT_IS_GROUP;
      label="Calculations";
      group_children=[
        layout {
          type=LAYOUT_IS_SPECIAL;
          label="Equations";
          identifier=["equations"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["table_family"];
        },
        layout {
          type=LAYOUT_IS_GROUP;
          label="Coupled Surfaces";
          group_children=[
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["coupling_import_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["coupling_model_family"];
            },
            layout {
              type=LAYOUT_IS_MEMBER;
              identifier=["import_mapping_family"];
            }
          ];
        }
      ];
    },
    layout {
      type=LAYOUT_IS_GROUP;
      label="Viewer";
      group_children=[
        layout {
          visible_if=["simopts.enable_realistic_looks==Yes"];
          type=LAYOUT_IS_MEMBER;
          identifier=["realistic_look_family"];
        },
        layout {
          type=LAYOUT_IS_MEMBER;
          identifier=["viewpoint_family"];
        },
        layout {
          type = LAYOUT_IS_MEMBER;
          identifier = ["clipping_plane_family"];
        }
      ];
    },
    layout {
      type=LAYOUT_IS_SPECIAL;
      label="Summary";
      identifier=["summary"];
    }
  ];
};


// Simulation models. 
simulation_model literal {
  label="3-D, External Flow, Direct Simulation";
  layout=standard_smd_layout;
  families=[
    family simopts {
      label = "Simulation Options";
      flags=PFAMILY_SINGLETON;
      parameter_sets = [
        simulation_options
      ];
    },
    family realistic_look_family {
      label="Realistic Looks";
      tabulation_field="name";
      parameter_sets = [
        realistic_look
      ];
    },
    family global {
      label="Characteristics";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        literal_global
      ];
    },
    family case_variable_family {
      label="Case Variables";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        uval_case_variable
        //boolean_case_variable
      ];
    },
    family tag_family {
      label="Segments";
      tabulation_field="id";
      display_name_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        tag,
        tag_type
      ];
    },
    family coord_sys {
      label="Coord Systems";
      tabulation_field="name";
      parameter_sets = [
        coord_sys_via_cartesian,
        coord_sys_via_cylindrical,
        coord_sys_via_spherical,
        default_coord_sys
      ];
    },
    family gravity {
      label="Body Forces";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        gravity
      ];
    },
    family symmetry_planes {
      label="Symmetry Planes";
      tabulation_field="dimension";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        symmetry_plane
      ];
    },
    family import {
      label="Import";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        import_stl_ascii,
        import_nastran,
        import_non_rectangular_region,
//        import_abaqus,
        import_patran
      ];
    },
    family multi_import_file_info_family {
      label="Multi Import File Info";
      flags=PFAMILY_SINGLETON|PFAMILY_HELPER_PSETS|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        multi_import_file_info
      ];
    },
    family import_files {
      label="Import Files";
      tabulation_field="name";
      flags=PFAMILY_SINGLETON;
      parameter_sets = [
        import_file_pset
      ];
    },
    // polyline family must appear before volume_of_revolution family in case file
    family polyline {
      label="Polylines";
      tabulation_field="name";
      parameter_sets = [
        polyline_pset
      ];
    },
    family create {
      label="Create";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        box_2_corners,
        box_size_point,
        box_via_offset,
        solid_via_8_corners,
        sphere,
        cylinder,
        hollow_cylinder,
        quad_patch,
        volume_of_revolution,
        volume_of_revolution_enclosing,
        boundary_portion_part
      ];
    },
    family offset {
      label="Offset";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        face_offset_geometry,
        region_offset_geometry
      ];
    },
    family region {
      label="Parts";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        region_pset
      ];
    },
    family part_export {
      label="Part Export";
      // A bit of a flag overload here: set as template policy MODEL so we do
      // not copy this pset from the new template during a switch.
      flags=PFAMILY_SINGLETON|PFAMILY_HELPER_PSETS|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        part_export
      ];
    },
    family multipart_export {
      label="Part Export";
      // A bit of a flag overload here: set as template policy MODEL so we do
      // not copy this pset from the new template during a switch.
      flags=PFAMILY_SINGLETON|PFAMILY_HELPER_PSETS|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        multipart_export
      ];
    },
    family face {
      label="Faces";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        face_pset,
        bside_face_pset,
        file_face_pset,
        shell_face_pset,
        group_face_pset,
        boundary_portion_face
      ];
    },
    family point {
      label="Points";
      tabulation_field="name";
      parameter_sets = [
        point_pset
      ];
    },
    family axis {
      label="Axes";
      tabulation_field="name";
      parameter_sets = [
        axis_pset
      ];
    },
    family ni_ref_frames {
      label="Reference Frames";
      tabulation_field="name";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        rotating_ref_frame,
        ni_ref_frame
      ];
    },
    family coarse_variant {
      label="Coarse Variant";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        coarse_variant
      ];
    },
    family period_sync_groups {
      label="Sync. Groups";
      tabulation_field="name";
      flags=PFAMILY_HELPER_PSETS;
      parameter_sets = [
        period_sync_group
      ];
    },
    family model_view_family {
      label="Model Views";
      tabulation_field="id";
      display_name_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        model_view
      ];
    },
    family model_view_container_family {
      label="Model View Container";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        model_view_container
      ];
    },
    family turb_generator {
      label="Generate Turbulence";
      flags=PFAMILY_HELPER_PSETS|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        turb_generator
      ];
    },
    family context_info_family {
      label="Context Info";
      tabulation_field="id";
      flags=PFAMILY_HELPER_PSETS;
      parameter_sets = [
        context_info
      ];
    },
    family vr_family {
      label="VR Region";
      tabulation_field="region";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        vr
      ];
    },
    family vr_thickness_options_family {
      label="Minimum VR Thickness Options";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        vr_thickness_options
      ];
    },
    family vr_thickness_family {
      label="Minimum VR Thickness";
      tabulation_field="level";
      parameter_sets = [
        vr_thickness
      ];
    },
    family vr_family_options_family {
      label="VR Options:";
      flags=PFAMILY_SINGLETON;
      parameter_sets = [
        vr_family_options
      ];
    },
    family fluid_solid_options_family {
      label="Fluid Solid Options:";
      flags=PFAMILY_SINGLETON;
      parameter_sets = [
        fluid_solid_options
      ];
    },
    family bc_options_family {
      label="BC Options:";
      flags=PFAMILY_SINGLETON;
      parameter_sets = [
        bc_options
      ];
    },
    family model_view_options_family {
      label="Model View Options";
      flags=PFAMILY_SINGLETON|PFAMILY_HELPER_PSETS|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        model_view_options
      ];
    },
    family fluid_solid {
      label="Fluid/Solid";
      tabulation_field="region";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        solid,
        rotating_tire,
        fluid,
        porous,
        porous_acoustic,
        porous_curved,
        porous_curved_acoustic,
        inline_fan,
        inline_table_fan,
        fluid_solid_none
      ];
    },
    family particle_globals_family {
      label="Globals";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        particle_globals
      ];
    },
    family particle_materials_family {
      label="Particle Materials";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        liquid_particle_material,
        solid_particle_material
      ];
    },
    family tire_arc_nozzle_properties_family {
      label="Tire Arc Nozzle Properties";
      tabulation_field="id";
      // NECESSARY?
//      display_name_field="tire_arc_position";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        tire_arc_nozzle_properties
      ];
    },
    family emitter_configs_family {
      label="Emitter Configurations";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        nozzle_emitter_config,
        rain_emitter_config,
        tire_emitter_config
      ];
    },
    family emitters_family {
      label="Emitters";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        standard_surface_emitter,
        standard_volume_emitter,
        standard_point_emitter,
        rain_emitter,
        tire_emitter
      ];
    },
    family particle_surface_interactions_family {
      label="Surface Material Interactions";
      tabulation_field="id";
      display_name_field="particle_material";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        particle_surface_material_interaction
      ];
    },
    family surface_materials_family {
      label="Surface Materials";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        particle_surface_material,
        default_particle_surface_material
      ];
    },
    family surface_material_options_family {
      label="Surface Material Options";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        surface_material_options
      ];
    },
    family screens_family {
      label="Screens";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        particle_screens
      ];
    },
    family wipers_family {
      label="Wipers";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        wipers
      ];
    },
    family surface {
      label="BCs";
      tabulation_field="face";
      flags=PFAMILY_CORE_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        noslip,                 // Wall
        frictionless_wall,      // Frictionless Wall
        linear_noslip,          // Sliding Wall
        angular_noslip,         // Rotating Wall
        velocity_noslip,        // Velocity Wall

        fixed_velocity_inlet,        // Fixed Velocity
        transient_velocity_inlet,    // Transient Velocity from Upstream
        pressure_velocity_inlet,     // Pressure and Velocity
        mass_flux_inlet,             // Mass Flux
        mass_flow_inlet,             // Mass Flow
        static_pressure_fixed_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_outlet,   // Static Pressure, Free Direction
        static_pressure_fixed_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_outlet,     // Total Pressure, Free Direction
        stag_pressure_fixed_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_outlet,      // Pressure and Velocity
        mass_flux_outlet,              // Mass Flux
        mass_flow_outlet,              // Mass Flow
        fixed_velocity_outlet          // Fixed Velocity
      ];
    },
    family measurement {
      label="Measurements";
      tabulation_field="window_name";
      flags=PFAMILY_USER_CAN_DISABLE|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT|PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        standard_meas,
        standard_face_meas,
        sampled_face_meas,
        composite_force_meas, 
        composite_force_face_meas, 
        composite_sampled_face_meas,
        probe,
        particle_trajectory_meas,
        development_force_meas,
        development_force_face_meas,
        averaged_measurement
      ];
    },
    family monitors {
      label="Monitors";
      tabulation_field="name";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        flow_monitor,
        heat_exchanger_monitor,
        coupled_powertherm_monitor
      ];
    },
    family table_family {
      label="Tables";
      tabulation_field="name";
      parameter_sets = [
        table
      ];
    },
    family coupling_model_import_phases_family {
      label="Import Coupling Model Phases";
      tabulation_field="id";
      display_name_field="start_time";
      parameter_sets = [
        coupling_model_import_phases
      ];
    },
    family coupling_import_family {
      label="Model Import";
      tabulation_field="name";
      parameter_sets = [
        import_coupling_model
      ];
    },
    family coupling_model_family {
      label="Coupled Models";
      tabulation_field="fullname";
      parameter_sets = [
        coupling_model,
        coupling_model_component
      ];
    },
    family import_mapping_family {
      label="PowerFLOW Model";
      tabulation_field="face";
      flags=PFAMILY_TEMPLATE_ELEMENTS_AUTOMATIC;
      parameter_sets = [
        import_mapping
      ];
    },
    family viewer_settings_family {
      label="Viewer Settings";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        viewer_settings
      ];
    },
    family multi_import_option_family {
      label="Import Options";
      flags=PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        multi_import_option,
        multi_import_option_default
      ];
    },
    family multi_import_positioning_family {
      label="Positioning";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        multi_import_positioning
      ];
    },
    family multi_import_face_option_family {
      label="Face Partitioning Options";
      flags=PFAMILY_TEMPLATE_ELEMENTS_MODEL;
      parameter_sets = [
        multi_import_face_option
      ];
    },
    family viewpoint_family {
      label="Viewpoints";
      flags=PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      tabulation_field="name";
      parameter_sets = [
        viewpoint
      ];
    },
    family vehicle_family {
      label="Vehicle";
      flags=PFAMILY_SINGLETON|PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      parameter_sets = [
        vehicle
      ];
    },
    family clipping_plane_family {
      label = "Clipping Planes";
      flags = PFAMILY_TEMPLATE_ELEMENTS_EXPLICIT;
      tabulation_field = "name";
      parameter_sets = [
        clipping_plane
      ];
    }
  ];
};

simulation_model literal_2d : literal {
  label="2-D, External Flow, Direct Simulation";
  families=[
    family global {
      parameter_sets = [
        literal_global_2d
      ];
    },
    family gravity {
      parameter_sets = [
        gravity_2d
      ];
    },
    family ni_ref_frames {
      parameter_sets = [
        rotating_ref_frame,
        ni_ref_frame_2d
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        fluid_2d,
        porous_2d,
        porous_2d_acoustic,
        porous_curved_2d,
        porous_curved_2d_acoustic,
        inline_fan_2d,
        inline_table_fan_2d,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        noslip,                  // Wall
        frictionless_wall,       // Frictionless Wall
        linear_noslip_2d,        // Sliding Wall
        angular_noslip_2d,       // Rotating Wall
        velocity_noslip_2d,      // Velocity Wall

        fixed_velocity_2d_inlet,        // Fixed Velocity
        pressure_velocity_2d_inlet,     // Pressure and Velocity
        mass_flux_2d_inlet,             // Mass Flux
        mass_flow_2d_inlet,             // Mass Flow
        static_pressure_fixed_2d_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_2d_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_outlet,      // Static Pressure, Free Direction
        static_pressure_fixed_2d_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_outlet,        // Total Pressure, Free Direction
        stag_pressure_fixed_2d_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_2d_outlet,      // Pressure and Velocity
        mass_flux_2d_outlet,              // Mass Flux
        mass_flow_2d_outlet,              // Mass Flow
        fixed_velocity_2d_outlet          // Fixed Velocity
      ];
    }
  ];
};

simulation_model internal_literal : literal {
  label="3-D, Internal Flow, Direct Simulation";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global
      ];
    }
  ];
};

simulation_model internal_literal_2d : literal_2d {
  label="2-D, Internal Flow, Direct Simulation";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_2d
      ];
    }
  ];
};

simulation_model boundary_layer : literal {
  label="3-D, External Flow, Turbulent Wall Model";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        turbulence_model_fluid,
        porous_turbulence,
        porous_turbulence_acoustic,
        porous_curved_turbulence,
        porous_curved_turbulence_acoustic,
        inline_fan_turbulence,
        inline_table_fan_turbulence,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        auto_slip,               // Wall
        frictionless_wall,       // Frictionless Wall
        const_slip,              // Selectable Wall
        linear_auto_slip,        // Sliding Wall
        angular_auto_slip,       // Rotating Wall
        velocity_auto_slip,      // Velocity Wall

        fixed_velocity_turbulence_inlet,        // Fixed Velocity
        transient_velocity_turbulence_inlet,    // Transient Velocity from Upstream
        pressure_velocity_turbulence_inlet,     // Pressure and Velocity
        mass_flux_turbulence_inlet,             // Mass Flux
        mass_flow_turbulence_inlet,             // Mass Flow
        static_pressure_fixed_turbulence_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_turbulence_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_turbulence_outlet,   // Static Pressure, Free Direction
        static_pressure_fixed_turbulence_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_turbulence_outlet,     // Total Pressure, Free Direction
        stag_pressure_fixed_turbulence_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_turbulence_outlet,      // Pressure and Velocity
        mass_flux_turbulence_outlet,              // Mass Flux
        mass_flow_turbulence_outlet,              // Mass Flow
        fixed_velocity_turbulence_outlet          // Fixed Velocity
      ];
    },
    family measurement {
      parameter_sets = [
        standard_plus_turb_and_heat_coeff_meas,
        standard_plus_heat_coeff_face_meas,
        sampled_plus_turb_face_meas,
        composite_force_plus_turb_meas,
        composite_force_plus_turb_face_meas,
        composite_sampled_plus_turb_face_meas,
        probe_plus_turb,
        particle_trajectory_meas,
        development_force_meas,
        development_force_face_meas,
        averaged_measurement
      ];
    }
  ];
};

simulation_model boundary_layer_2d : boundary_layer {
  label="2-D, External Flow, Turbulent Wall Model";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_2d
      ];
    },
    family gravity {
      parameter_sets = [
        gravity_2d
      ];
    },
    family ni_ref_frames {
      parameter_sets = [
        rotating_ref_frame,
        ni_ref_frame_2d
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        turbulence_model_fluid_2d,
        porous_2d_turbulence,
        porous_2d_turbulence_acoustic,
        porous_curved_2d_turbulence,
        porous_curved_2d_turbulence_acoustic,
        inline_fan_2d_turbulence,
        inline_table_fan_2d_turbulence,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        auto_slip,                  // Wall
        frictionless_wall,          // Frictionless Wall
        const_slip,                 // Selectable Wall
        linear_auto_slip_2d,        // Sliding Wall
        angular_auto_slip_2d,       // Rotating Wall
        velocity_auto_slip_2d,      // Velocity Wall

        fixed_velocity_2d_turbulence_inlet,         // Fixed Velocity
        pressure_velocity_2d_turbulence_inlet,      // Pressure and Velocity
        mass_flux_2d_turbulence_inlet,              // Mass Flux
        mass_flow_2d_turbulence_inlet,              // Mass Flow
        static_pressure_fixed_2d_turbulence_inlet,  // Static Pressure, Fixed Direction
        stag_pressure_fixed_2d_turbulence_inlet,    // Total Pressure, Fixed Direction

        static_pressure_free_turbulence_outlet,     // Static Pressure, Free Direction
        static_pressure_fixed_2d_turbulence_outlet, // Static Pressure, Fixed Direction
        stag_pressure_free_turbulence_outlet,       // Total Pressure, Free Direction
        stag_pressure_fixed_2d_turbulence_outlet,   // Total Pressure, Fixed Direction
        pressure_velocity_2d_turbulence_outlet,     // Pressure and Velocity
        mass_flux_2d_turbulence_outlet,             // Mass Flux
        mass_flow_2d_turbulence_outlet,             // Mass Flow
        fixed_velocity_2d_turbulence_outlet         // Fixed Velocity
      ];
    }
  ];
};

simulation_model internal_boundary_layer : boundary_layer {
  label="3-D, Internal Flow, Turbulent Wall Model";
  families=[
    family global {
      parameter_sets = [
        internal_boundary_layer_global
      ];
    }
  ];
};

simulation_model internal_boundary_layer_2d : boundary_layer_2d {
  label="2-D, Internal Flow, Turbulent Wall Model";
  families=[
    family global {
      parameter_sets = [
        internal_boundary_layer_global_2d
      ];
    }
  ];
};

simulation_model cpc_test_model : literal {
  label="CPC Test Model";
  families=[
    family face {
      parameter_sets = [
        face_pset,
        bside_face_pset,
        file_face_pset,
        shell_face_pset,
        boundary_portion_face,
        plus_x_face
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        fluid,
        inline_fan,
        inline_table_fan,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        // const_slip not available for literal simulations.
        noslip,
        linear_noslip,
        angular_noslip,
        velocity_noslip,

        fixed_velocity_inlet,
        transient_velocity_inlet,
        static_pressure_fixed_inlet,
        stag_pressure_fixed_inlet,
        mass_flux_inlet,
        mass_flow_inlet,

        static_pressure_free_outlet,
        static_pressure_fixed_outlet,
        stag_pressure_free_outlet,
        stag_pressure_fixed_outlet,
        mass_flux_outlet,
        mass_flow_outlet,
        fixed_velocity_outlet
      ];
    }           
  ];
};

//--------------------BEGIN thermal stuff----------------------------->
simulation_model literal_thermal : literal {
  label="3-D, External Flow, Direct Simulation, Non-Isothermal";
  families=[
    family global {
      parameter_sets = [
        literal_global_thermal
      ];
    },
    family gravity {
      parameter_sets = [
        gravity_thermal
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        fluid_thermal,
        porous_thermal,
        porous_fixed_temp,
        porous_adiabatic,
        porous_adiabatic_acoustic,
        porous_curved_thermal,
        porous_curved_fixed_temp,
        porous_curved_adiabatic,
        porous_curved_adiabatic_acoustic,
        heat_exchanger,
        heat_exchanger_curved,
        heat_exchanger_multipass,
        heat_exchanger_multipass_curved,
        heat_exchanger_condenser,
        heat_exchanger_condenser_curved,
        heat_exchanger_amesim,
        inline_fan_thermal,
        inline_table_fan_thermal,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        noslip,                         // Wall
        frictionless_wall,              // Frictionless Wall
        linear_noslip,                  // Sliding Wall
        angular_noslip,                 // Rotating Wall
        velocity_noslip,                // Velocity Wall

        noslip_fixed_temp,              // Wall
        frictionless_wall_fixed_temp,   // Frictionless Wall
        linear_noslip_fixed_temp,       // Sliding Wall
        angular_noslip_fixed_temp,      // Rotating Wall

        noslip_thermal_resist,              // Wall
        frictionless_wall_thermal_resist,   // Frictionless Wall
        linear_noslip_thermal_resist,       // Sliding Wall
        angular_noslip_thermal_resist,      // Rotating Wall

        noslip_fixed_flux,              // Wall
        frictionless_wall_fixed_flux,   // Frictionless Wall
        linear_noslip_fixed_flux,       // Sliding Wall
        angular_noslip_fixed_flux,      // Rotating Wall

        noslip_coupled_surface,               // Wall
        frictionless_wall_coupled_surface,    // Frictionless Wall
        linear_noslip_coupled_surface,        // Sliding Wall
        angular_noslip_coupled_surface,       // Rotating Wall

        fixed_velocity_Tfixed_inlet,        // Fixed Velocity
        transient_velocity_Tfixed_inlet,    // Transient Velocity from Upstream
        pressure_velocity_Tfixed_inlet,     // Pressure and Velocity
        mass_flux_Tfixed_inlet,             // Mass Flux
        mass_flow_Tfixed_inlet,             // Mass Flow
        static_pressure_fixed_Tfixed_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_Tfixed_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_Tfloat_outlet,   // Static Pressure, Free Direction
        static_pressure_fixed_Tfloat_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_Tfloat_outlet,     // Total Pressure, Free Direction
        stag_pressure_fixed_Tfloat_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_Tfloat_outlet,      // Pressure and Velocity
        mass_flux_Tfloat_outlet,              // Mass Flux
        mass_flow_Tfloat_outlet,              // Mass Flow
        fixed_velocity_Tfloat_outlet          // Fixed Velocity
      ];
    },
    family measurement {
      parameter_sets = [
        standard_plus_heatflux_meas,
        standard_plus_heatflux_face_meas,
        sampled_plus_thermal_face_meas,
        composite_force_plus_thermal_meas,
        composite_force_plus_thermal_face_meas,
        composite_sampled_plus_thermal_face_meas,
        probe_plus_thermal,
        particle_trajectory_meas,
        development_force_meas,
        development_force_face_meas,
        averaged_measurement
      ];
    },
    family coarse_variant {
      parameter_sets = [
        coarse_variant_thermal
      ];
    }
  ];
};

simulation_model literal_2d_thermal : literal_thermal {
  label="2-D, External Flow, Direct Simulation, Non-Isothermal";
  families=[
    family global {
      parameter_sets = [
        literal_global_2d_thermal
      ];
    },
    family gravity {
      parameter_sets = [
        gravity_2d_thermal
      ];
    },
    family ni_ref_frames {
      parameter_sets = [
        rotating_ref_frame,
        ni_ref_frame_2d
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        fluid_2d_thermal,
        porous_2d_thermal,
        porous_2d_fixed_temp,
        porous_2d_adiabatic,
        porous_2d_adiabatic_acoustic,
        porous_curved_2d_thermal,
        porous_curved_2d_fixed_temp,
        porous_curved_2d_adiabatic,
        porous_curved_2d_adiabatic_acoustic,
        inline_fan_2d_thermal,
        inline_table_fan_2d_thermal,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        noslip,                          // Wall
        frictionless_wall,               // Frictionless Wall
        linear_noslip_2d,                // Sliding Wall
        angular_noslip_2d,               // Rotating Wall
        velocity_noslip_2d,              // Velocity Wall

        noslip_fixed_temp,               // Wall
        frictionless_wall_fixed_temp,    // Frictionless Wall
        linear_noslip_2d_fixed_temp,     // Sliding Wall
        angular_noslip_2d_fixed_temp,    // Rotating Wall

        noslip_thermal_resist,               // Wall
        frictionless_wall_thermal_resist,    // Frictionless Wall
        linear_noslip_2d_thermal_resist,     // Sliding Wall
        angular_noslip_2d_thermal_resist,    // Rotating Wall

        noslip_fixed_flux,               // Wall
        frictionless_wall_fixed_flux,    // Frictionless Wall
        linear_noslip_2d_fixed_flux,     // Sliding Wall
        angular_noslip_2d_fixed_flux,    // Rotating Wall

        //noslip_coupled_surface,                  // Wall
        //frictionless_wall_coupled_surface,       // Frictionless Wall
        //linear_noslip_2d_coupled_surface,        // Sliding Wall
        //angular_noslip_2d_coupled_surface,       // Rotating Wall

        fixed_velocity_2d_Tfixed_inlet,        // Fixed Velocity
        pressure_velocity_2d_Tfixed_inlet,     // Pressure and Velocity
        mass_flux_2d_Tfixed_inlet,             // Mass Flux
        mass_flow_2d_Tfixed_inlet,             // Mass Flow
        static_pressure_fixed_2d_Tfixed_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_2d_Tfixed_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_Tfloat_outlet,      // Static Pressure, Free Direction
        static_pressure_fixed_2d_Tfloat_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_Tfloat_outlet,        // Total Pressure, Free Direction
        stag_pressure_fixed_2d_Tfloat_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_2d_Tfloat_outlet,      // Pressure and Velocity
        mass_flux_2d_Tfloat_outlet,              // Mass Flux
        mass_flow_2d_Tfloat_outlet,              // Mass Flow
        fixed_velocity_2d_Tfloat_outlet          // Fixed Velocity
      ];
    }
  ];
};

simulation_model internal_literal_thermal : literal_thermal {
  label="3-D, Internal Flow, Direct Simulation, Non-Isothermal";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_thermal
      ];
    }
  ];
};

simulation_model internal_literal_2d_thermal : literal_2d_thermal {
  label="2-D, Internal Flow, Direct Simulation, Non-Isothermal";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_2d_thermal
      ];
    }
  ];
};

simulation_model boundary_layer_thermal : literal_thermal {
  label="3-D, External Flow, Turbulent Wall Model, Non-Isothermal";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_thermal
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        turbulence_model_fluid_thermal,
        porous_thermal_turbulence,
        porous_fixed_temp_turbulence,
        porous_adiabatic_turbulence,
        porous_adiabatic_turbulence_acoustic,
        porous_curved_thermal_turbulence,
        porous_curved_fixed_temp_turbulence,
        porous_curved_adiabatic_turbulence,
        porous_curved_adiabatic_turbulence_acoustic,
        heat_exchanger_turbulence,
        heat_exchanger_curved_turbulence,
        heat_exchanger_multipass_turbulence,
        heat_exchanger_multipass_curved_turbulence,
        heat_exchanger_condenser_turbulence,
        heat_exchanger_condenser_curved_turbulence,
        heat_exchanger_amesim_turbulence,
        inline_fan_thermal_turbulence,
        inline_table_fan_thermal_turbulence,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        auto_slip,               // Wall
        frictionless_wall,       // Frictionless Wall
        const_slip,              // Selectable Wall
        linear_auto_slip,        // Sliding Wall
        angular_auto_slip,       // Rotating Wall
        velocity_auto_slip,      // Velocity Wall

        auto_slip_fixed_temp,          // Wall
        frictionless_wall_turbulence_fixed_temp,  // Frictionless Wall
        const_slip_fixed_temp, // Selectable Wall
        linear_auto_slip_fixed_temp,    // Sliding Wall
        angular_auto_slip_fixed_temp,    // Rotating Wall

        auto_slip_thermal_resist,          // Wall
        frictionless_wall_turbulence_thermal_resist,  // Frictionless Wall
        const_slip_thermal_resist, // Selectable Wall
        linear_auto_slip_thermal_resist,    // Sliding Wall
        angular_auto_slip_thermal_resist,    // Rotating Wall

        auto_slip_fixed_flux,          // Wall
        frictionless_wall_turbulence_fixed_flux,  // Frictionless Wall
        const_slip_fixed_flux, // Selectable Wall
        linear_auto_slip_fixed_flux,    // Sliding Wall
        angular_auto_slip_fixed_flux,    // Rotating Wall

        auto_slip_coupled_surface,                // Wall
        frictionless_wall_coupled_surface,        // Frictionless Wall
        const_slip_coupled_surface,               // Selectable Wall
        linear_auto_slip_coupled_surface,         // Sliding Wall
        angular_auto_slip_coupled_surface,        // Rotating Wall

        fixed_velocity_Tfixed_turbulence_inlet,        // Fixed Velocity
        transient_velocity_Tfixed_turbulence_inlet,    // Transient Velocity from Upstream
        pressure_velocity_Tfixed_turbulence_inlet,     // Pressure and Velocity
        mass_flux_Tfixed_turbulence_inlet,             // Mass Flux
        mass_flow_Tfixed_turbulence_inlet,             // Mass Flow
        static_pressure_fixed_Tfixed_turbulence_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_Tfixed_turbulence_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_Tfloat_turbulence_outlet,   // Static Pressure, Free Direction
        static_pressure_fixed_Tfloat_turbulence_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_Tfloat_turbulence_outlet,     // Total Pressure, Free Direction
        stag_pressure_fixed_Tfloat_turbulence_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_Tfloat_turbulence_outlet,      // Pressure and Velocity
        mass_flux_Tfloat_turbulence_outlet,              // Mass Flux
        mass_flow_Tfloat_turbulence_outlet,              // Mass Flow
        fixed_velocity_Tfloat_turbulence_outlet          // Fixed Velocity
      ];
    },
    family measurement {
      parameter_sets = [
        standard_plus_turb_and_heatflux_meas,
        standard_plus_turb_and_heatflux_face_meas,
        sampled_plus_turb_and_thermal_face_meas,
        composite_force_plus_turb_and_thermal_meas,
        composite_force_plus_turb_and_thermal_face_meas,
        composite_sampled_plus_turb_and_thermal_face_meas,
        probe_plus_turb_and_thermal,
        particle_trajectory_meas,
        development_force_meas,
        development_force_face_meas,
        averaged_measurement
      ];
    }
  ];
};

simulation_model boundary_layer_2d_thermal : boundary_layer_thermal {
  label="2-D, External Flow, Turbulent Wall Model, Non-Isothermal";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_2d_thermal
      ];
    },
    family gravity {
      parameter_sets = [
        gravity_2d_thermal
      ];
    },
    family ni_ref_frames {
      parameter_sets = [
        rotating_ref_frame,
        ni_ref_frame_2d
      ];
    },
    family fluid_solid {
      parameter_sets = [
        solid,
        rotating_tire,
        turbulence_model_fluid_2d_thermal,
        porous_2d_thermal_turbulence,
        porous_2d_fixed_temp_turbulence,
        porous_2d_adiabatic_turbulence,
        porous_2d_adiabatic_turbulence_acoustic,
        porous_curved_2d_thermal_turbulence,
        porous_curved_2d_fixed_temp_turbulence,
        porous_curved_2d_adiabatic_turbulence,
        porous_curved_2d_adiabatic_turbulence_acoustic,
        inline_fan_2d_thermal_turbulence,
        inline_table_fan_2d_thermal_turbulence,
        fluid_solid_none
      ];
    },
    family surface {
      parameter_sets = [
        auto_slip,                  // Wall
        frictionless_wall,          // Frictionless Wall
        const_slip,                 // Selectable Wall
        linear_auto_slip_2d,        // Sliding Wall
        angular_auto_slip_2d,       // Rotating Wall
        velocity_auto_slip_2d,      // Velocity Wall

        auto_slip_fixed_temp,          // Wall
        frictionless_wall_turbulence_fixed_temp,  // Frictionless Wall
        const_slip_fixed_temp,  // Selectable Wall
        linear_auto_slip_2d_fixed_temp,    // Sliding Wall
        angular_auto_slip_2d_fixed_temp,   // Rotating Wall

        auto_slip_thermal_resist,          // Wall
        frictionless_wall_turbulence_thermal_resist,  // Frictionless Wall
        const_slip_thermal_resist,  // Selectable Wall
        linear_auto_slip_2d_thermal_resist,    // Sliding Wall
        angular_auto_slip_2d_thermal_resist,   // Rotating Wall

        auto_slip_fixed_flux,          // Wall
        frictionless_wall_turbulence_fixed_flux,  // Frictionless Wall
        const_slip_fixed_flux, // Selectable Wall
        linear_auto_slip_2d_fixed_flux,    // Sliding Wall
        angular_auto_slip_2d_fixed_flux,    // Rotating Wall

        //auto_slip_coupled_surface,                // Wall
        //frictionless_wall_coupled_surface,        // Frictionless Wall
        //const_slip_coupled_surface,               // Selectable Wall
        //linear_auto_slip_2d_coupled_surface,      // Sliding Wall
        //angular_auto_slip_2d_coupled_surface,     // Rotating Wall

        fixed_velocity_2d_Tfixed_turbulence_inlet,        // Fixed Velocity
        pressure_velocity_2d_Tfixed_turbulence_inlet,     // Pressure and Velocity
        mass_flux_2d_Tfixed_turbulence_inlet,             // Mass Flux
        mass_flow_2d_Tfixed_turbulence_inlet,             // Mass Flow
        static_pressure_fixed_2d_Tfixed_turbulence_inlet, // Static Pressure, Fixed Direction
        stag_pressure_fixed_2d_Tfixed_turbulence_inlet,   // Total Pressure, Fixed Direction

        static_pressure_free_Tfloat_turbulence_outlet,      // Static Pressure, Free Direction
        static_pressure_fixed_2d_Tfloat_turbulence_outlet,  // Static Pressure, Fixed Direction
        stag_pressure_free_Tfloat_turbulence_outlet,        // Total Pressure, Free Direction
        stag_pressure_fixed_2d_Tfloat_turbulence_outlet,    // Total Pressure, Fixed Direction
        pressure_velocity_2d_Tfloat_turbulence_outlet,      // Pressure and Velocity
        mass_flux_2d_Tfloat_turbulence_outlet,              // Mass Flux
        mass_flow_2d_Tfloat_turbulence_outlet,              // Mass Flow
        fixed_velocity_2d_Tfloat_turbulence_outlet          // Fixed Velocity
      ];
    }
  ];
};

simulation_model internal_boundary_layer_thermal : boundary_layer_thermal {
  label="3-D, Internal Flow, Turbulent Wall Model, Non-Isothermal";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_thermal
      ];
    }
  ];
};

simulation_model internal_boundary_layer_2d_thermal : boundary_layer_2d_thermal {
  label="2-D, Internal Flow, Turbulent Wall Model, Non-Isothermal";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_2d_thermal
      ];
    }
  ];
};

//--------------------END thermal stuff------------------------------<

//--------------------BEGIN liquid stuff----------------------------->
simulation_model literal_liquid : literal {
  label="3-D, External Flow, Direct Simulation, Liquid";
  families=[
    family global {
      parameter_sets = [
        literal_global_liquid
      ];
    }
  ];
};

simulation_model literal_2d_liquid : literal_2d {
  label="2-D, External Flow, Direct Simulation, Liquid";
  families=[
    family global {
      parameter_sets = [
        literal_global_2d_liquid
      ];
    }
  ];
};

simulation_model internal_literal_liquid : internal_literal {
  label="3-D, Internal Flow, Direct Simulation, Liquid";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_liquid
      ];
    }
  ];
};

simulation_model internal_literal_2d_liquid : internal_literal_2d {
  label="2-D, Internal Flow, Direct Simulation, Liquid";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_2d_liquid
      ];
    }
  ];
};

simulation_model boundary_layer_liquid : boundary_layer {
  label="3-D, External Flow, Turbulent Wall Model, Liquid";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_liquid
      ];
    }
  ];
};

simulation_model boundary_layer_2d_liquid : boundary_layer_2d {
  label="2-D, External Flow, Turbulent Wall Model, Liquid";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_2d_liquid
      ];
    }
  ];
};

simulation_model internal_boundary_layer_liquid : internal_boundary_layer {
  label="3-D, Internal Flow, Turbulent Wall Model, Liquid";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_liquid
      ];
    }
  ];
};

simulation_model internal_boundary_layer_2d_liquid : internal_boundary_layer_2d {
  label="2-D, Internal Flow, Turbulent Wall Model, Liquid";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_2d_liquid
      ];
    }
  ];
};

//--------------------BEGIN thermal liquid stuff----------------------->
simulation_model literal_thermal_liquid : literal_thermal {
  label="3-D, External Flow, Direct Simulation, Non-Isothermal, Liquid";
  families=[
    family global {
      parameter_sets = [
        literal_global_thermal_liquid
      ];
    }
  ];
};

simulation_model literal_2d_thermal_liquid : literal_2d_thermal {
  label="2-D, External Flow, Direct Simulation, Non-Isothermal, Liquid";
  families=[
    family global {
      parameter_sets = [
        literal_global_2d_thermal_liquid
      ];
    }
  ];
};

simulation_model internal_literal_thermal_liquid : internal_literal_thermal {
  label="3-D, Internal Flow, Direct Simulation, Non-Isothermal, Liquid";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_thermal_liquid
      ];
    }
  ];
};

simulation_model internal_literal_2d_thermal_liquid : internal_literal_2d_thermal {
  label="2-D, Internal Flow, Direct Simulation, Non-Isothermal, Liquid";
  families=[
    family global {
      parameter_sets = [
        internal_literal_global_2d_thermal_liquid
      ];
    }
  ];
};

simulation_model boundary_layer_thermal_liquid : boundary_layer_thermal {
  label="3-D, External Flow, Turbulent Wall Model, Non-Isothermal, Liquid";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_thermal_liquid
      ];
    }
  ];
};

simulation_model boundary_layer_2d_thermal_liquid : boundary_layer_2d_thermal {
  label="2-D, External Flow, Turbulent Wall Model, Non-Isothermal, Liquid";
  families = [
    family global {
      parameter_sets = [
        boundary_layer_global_2d_thermal_liquid
      ];
    }
  ];
};

simulation_model internal_boundary_layer_thermal_liquid : internal_boundary_layer_thermal {
  label="3-D, Internal Flow, Turbulent Wall Model, Non-Isothermal, Liquid";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_thermal_liquid
      ];
    }
  ];
};

simulation_model internal_boundary_layer_2d_thermal_liquid : internal_boundary_layer_2d_thermal {
  label="2-D, Internal Flow, Turbulent Wall Model, Non-Isothermal, Liquid";
  families = [
    family global {
      parameter_sets = [
        internal_boundary_layer_global_2d_thermal_liquid
      ];
    }
  ];
};
//--------------------END thermal liquid stuff----------------------<

//--------------------END liquid stuff------------------------------<

all_simulation_models {
  simulation_models = [
                       boundary_layer,
                       literal,
                       internal_boundary_layer,
                       internal_literal,
                       boundary_layer_2d,
                       literal_2d,
                       internal_boundary_layer_2d,
                       internal_literal_2d,

                       boundary_layer_thermal,
                       literal_thermal,
                       internal_boundary_layer_thermal,
                       internal_literal_thermal,
                       boundary_layer_2d_thermal,
                       literal_2d_thermal,
                       internal_boundary_layer_2d_thermal,
                       internal_literal_2d_thermal,

                       boundary_layer_liquid,
                       literal_liquid,
                       internal_boundary_layer_liquid,
                       internal_literal_liquid,
                       boundary_layer_2d_liquid,
                       literal_2d_liquid,
                       internal_boundary_layer_2d_liquid,
                       internal_literal_2d_liquid,

                       boundary_layer_thermal_liquid,
                       literal_thermal_liquid,
                       internal_boundary_layer_thermal_liquid,
                       internal_literal_thermal_liquid,
                       boundary_layer_2d_thermal_liquid,
                       literal_2d_thermal_liquid,
                       internal_boundary_layer_2d_thermal_liquid,
                       internal_literal_2d_thermal_liquid
  ];
};

scripting_translation_table {
  "All-on-region Face" -> "All-on-part Face";
  "All-on-part Face" -> "Entire-part Face";
  "Bounding Region" -> "Bounding Part";
  "Create Face on Region" -> "Create Face on Part";
  "R Axis Viscous Resistance" -> "X Axis Viscous Resistance";
  "G Axis Viscous Resistance" -> "Y Axis Viscous Resistance";
  "B Axis Viscous Resistance" -> "Z Axis Viscous Resistance";
  "R Axis Inertial Resistance" -> "X Axis Inertial Resistance";
  "G Axis Inertial Resistance" -> "Y Axis Inertial Resistance";
  "B Axis Inertial Resistance" -> "Z Axis Inertial Resistance";
  "Source" -> "Inlet & Pressure and Velocity";
  "Fixed Temp Porous Medium" -> "Prescribed Temp Porous Medium";
  "Fixed Temperature" -> "Prescribed Temperature";
  "Fixed Heat Flux" -> "Prescribed Heat Flux";
  "Fixed Flow Direction" -> "Prescribed Flow Direction";
  "Import STL Ascii" -> "Import STL";
  "Body-fixed (non-inertial)" -> "Global Body-Fixed";
  "Geometry By Region Offset" -> "Geometry By Part Offset";
  "Global body-fixed" -> "Global Body-Fixed";
  "Global body-fixed" -> "Global body-fixed (inertial)";
  "Global Body-Fixed" -> "Global Body-Fixed (inertial)";
  "Global body-fixed (inertial)" -> "Global body-fixed (non-inertial)";
  "Ground-fixed" -> "Ground-Fixed (inertial)";
  "Ground-Fixed" -> "Ground-Fixed (inertial)";
  "Ground-fixed (inertial)" -> "Ground-Fixed (inertial)";
  "Standard Measurements" -> "Standard Measurements By Region";
  "Composite Force Measurements" -> "Composite Measurements By Region";
  "Composite Force Measurements By Region" -> "Composite Measurements By Region";
  "Composite Force Measurements By Face" -> "Composite Measurements By Face";
  "Display" -> "Display Mode";
  "None" -> "Hidden";
  "Reference Temperature" -> "Heat Exchanger Fluid Temperature";
  "Heating Coefficient" -> "Heating Rate Coefficient";
  "Contains Onesided" -> "Contains Open Shells";
  "Facets" -> "Solid + Wireframe";
  "Initial Local X Velocity" -> "Initial X Velocity";
  "Initial Local Y Velocity" -> "Initial Y Velocity";
  "Initial Local Z Velocity" -> "Initial Z Velocity";
  "Local X Axis Viscous Resistance" -> "X Axis Viscous Resistance";
  "Local X Axis Inertial Resistance" -> "X Axis Inertial Resistance";
  "Infinite Resistance in Local Y and Z" -> "Infinite Resistance in Y and Z";
  "Infinite Resistance in Local Y" -> "Infinite Resistance in Y";
  "Local Y Axis" -> "Y Axis";
  "Porous:Standard Variables#Yes" -> "Porous:Variables#Standard";
  "Porous:Custom Variables#Yes" -> "Porous:Variables#Custom";
  "Standard Surface Properties#Yes" -> "Surface:Variables#Standard";
  "Surface Pressure only#Yes" -> "Surface:Variables#Custom";
  "Surface Pressure only" -> "Surface:Custom:Pressure";
  "Surface Pressure and Velocity Magnitude only#Yes" -> "Surface:Variables#Custom";
  "Surface Pressure and Velocity Magnitude only" -> "Surface:Custom:Pressure";
  "Surface Pressure and Velocity Magnitude only" -> "Surface:Custom:Velocity Magnitude";
  "Surface:Standard Variables#Yes" -> "Surface:Variables#Standard";
  "Surface:Custom Variables#Yes" -> "Surface:Variables#Custom";
  "Standard Fluid Properties#Yes" -> "Fluid:Variables#Standard";
  "Fluid:Standard Variables#Yes" -> "Fluid:Variables#Standard";
  "Fluid:Custom Variables#Yes" -> "Fluid:Variables#Custom"; 
  "Fluid Pressure only#Yes" -> "Fluid:Variables#Custom";
  "Fluid Pressure only" -> "Fluid:Custom:Pressure";
  "Fluid Pressure and Velocity Magnitude only" -> "Fluid:Custom Variables";
  "Fluid Pressure and Velocity Magnitude only" -> "Fluid:Custom:Pressure";
  "Fluid Pressure and Velocity Magnitude only" -> "Fluid:Custom:Velocity Magnitude";
  "Standard#Yes" -> "Surface:Variables#Standard"; // probe -- will only succeed on one
  "Standard#Yes" -> "Fluid:Variables#Standard";
  "Pressure only#Yes" -> "Surface:Variables#Custom"; // probe -- will only succeed on one set
  "Pressure only" -> "Surface:Custom:Pressure";
  "Pressure only" -> "Fluid:Custom Variables";
  "Pressure only" -> "Fluid:Custom:Pressure";
  "Pressure and Velocity Magnitude only#Yes" -> "Surface:Variables#Custom"; // probe -- will only succeed on one set
  "Pressure and Velocity Magnitude only" -> "Surface:Custom:Velocity Magnitude";
  "Pressure and Velocity Magnitude only" -> "Fluid:Custom Variables";
  "Pressure and Velocity Magnitude only" -> "Fluid:Custom:Velocity Magnitude";
  "End Time#" -> "End Time via:#Specified Below";
  "Variable Resolution" -> "VR Region";
  "Heat Transfer Coefficients" -> "HTC (Char Temp)";
  "Surface:Standard:Heat Transfer Coefficients" -> "Surface:Standard:HTC (Char Temp)";
  "Surface:Custom:Heat Transfer Coefficients" -> "Surface:Custom:HTC (Char Temp)";
  "Face" -> "Faces";
  "Region" -> "Regions";
  "Region" -> "Part";
  "Region to Offset:" -> "Part to Offset:";
  "Use Initial Conditions in Source Model" -> "Use Results in Source Model as Initial Boundary Conditions";
  "Initial Conditions" -> "Initial Boundary Conditions";
  "Region" -> "Geometry";
  "Cylindrical Region" -> "Axisymmetric Part";
  "Cylinder" -> "Axisymmetric Part";
  "Faces"->"Geometry";
  "Faces Only" -> "  Faces Only";
  "Parts Only" -> "  Parts Only";
  "Face"->"Geometry";
  "Tag" -> "Segment";
  "Tag Category" -> "Partition";
  "Tags" -> "Segments";
  "Tag Face Via" -> "Partition Face Via";
  "With Respect to:" -> "Parent Csys";
  "Regions" -> "Parts";
  "Color by Tag Category" -> "Color by Partition";
  "Face Tagging Options" -> "Face Partitioning Options";
  "Same as Region" -> "Same as Parent";
  "Check for Overlapping Facets" -> "Check for Interfering Facets Within Shells";
  "Number of Stages" -> "Number of Passes";
  "Constraints" -> "Data Sources";
  "PowerFLOW Mappings" -> "PowerFLOW Model";
  "Assign Data" -> "Coupled Surface";
  "Coupled Model" -> "Coupled Model Component";
  "PowerFLOW Mapping" -> "PowerFLOW Model Coupled Component";
  "PowerFLOW Model Coupled Component" -> "PowerFLOW Model Coupled Face";
  "Stag Pressure" -> "Total Pressure";
  "Use Assembly Hierarchy" -> "Standard";
  "X-Y" -> "Z";
  "X-Z" -> "Y";
  "Y-Z" -> "X";
  "Min PID" -> "Min File ID";
  "Max PID" -> "Max File ID";
//  "Apply Multi-Import Rules to New Faces on Reimport" -> "Apply Multi-Import Rules to Faces on Reimport";
  "PID Range" -> "File ID Range";
  "X Component of Axis Direction" -> "Direction X";
  "Y Component of Axis Direction" -> "Direction Y";
  "Z Component of Axis Direction" -> "Direction Z";
  "X Component of Axis Origin" -> "Origin X";
  "Y Component of Axis Origin" -> "Origin Y";
  "Z Component of Axis Origin" -> "Origin Z";
  "Scale" -> "Scale X";
  "Origin X" -> "Translate X";
  "Origin Y" -> "Translate Y";
  "Origin Z" -> "Translate Z";
  "Origin Unit" -> "Translation Unit";
  "Viscosity" -> "Dynamic Viscosity";
  "Particle Tracking" -> "Particle Modeling";
  "Excluded Solids" -> "Excluded Solids and Porous Media";
  "Color Reference Model View" -> "Look Reference Model View";
  "Color" -> "Look";
  "Specify Wheel Sink Distances" -> "Specify Distance to Sink Wheels into Floor";
//---- Handle the earlier version script with double space ----------
  "Origin  X" -> "Origin X";
  "Origin  Y" -> "Origin Y";
  "Origin  Z" -> "Origin Z";
  "Origin  R" -> "Origin R";
  "Origin  Theta" -> "Origin Theta";
  "Origin  Rho" -> "Origin Rho";
  "Origin  Phi" -> "Origin Phi";
  "X-Axis Vector  X" -> "X-Axis Vector X";
  "X-Axis Vector  Y" -> "X-Axis Vector Y";
  "X-Axis Vector  Z" -> "X-Axis Vector Z";
  "X-Axis Vector  R" -> "X-Axis Vector R";
  "X-Axis Vector  Theta" -> "X-Axis Vector Theta";
  "X-Axis Vector  Phi" -> "X-Axis Vector Phi";
  "Y-Axis Vector  X" -> "Y-Axis Vector X";
  "Y-Axis Vector  Y" -> "Y-Axis Vector Y";
  "Y-Axis Vector  Z" -> "Y-Axis Vector Z";
  "Y-Axis Vector  R" -> "Y-Axis Vector R";
  "Y-Axis Vector  Theta" -> "Y-Axis Vector Theta";
  "Y-Axis Vector  Phi" -> "Y-Axis Vector Phi";
  "With Respect to Coordinate System" -> "Gravity Force Coordinate System";
  "Gravity" -> "Body Forces";
//---- Handle auto regenerate conversion ----
  "Automatically Regenerate When Underlying Geometry Changes" -> "Automatically Regenerate";
  "Automatically Regenerate" -> "Regenerate";
  "Yes" -> "Automatically";
  "No" -> "On Case Regeneration";
  "Compute Rotation Axis Direction from Enclosed Geometry" -> "Compute Axis of Revolution Direction";
  "Rotation Axis Direction X" -> "Axis Direction X";
  "Rotation Axis Direction Y" -> "Axis Direction Y";
  "Rotation Axis Direction Z" -> "Axis Direction Z";
  "Compute Rotation Axis Origin from Enclosed Geometry" -> "Compute Axis of Revolution Origin";
  "Rotation Axis Origin X" -> "Axis Origin X";
  "Rotation Axis Origin Y" -> "Axis Origin Y";
  "Rotation Axis Origin Z" -> "Axis Origin Z";
  "Specify Wall Motion Via:" -> "Specify Wall Motion Via";
  "Specify Ref Point Motion Via:" -> "Specify Ref Point Motion Via";
  "End Time via:" -> "End Time Via";
  "Angular Velocity via:" -> "Angular Velocity Via";
};
